openapi: 3.0.3
info:
  title: Vellum Client API
  version: 1.0.0 (v1)
  description: |2

    ## Vellum API Documentation

    ### Welcome ðŸ‘‹
    Welcome to Vellum's API documentation! Here you'll find information about the various endpoints available to you,
    as well as the parameters and responses that they accept and return.

    We will be exposing more and more of our APIs over time as they stabilize. If there is some action you can perform
    via the UI that you wish you could perform via API, please let us know and we can expose it here in an unstable state.

    ### API Stability
    Some of the APIs documented within are undergoing active development. Use the
    <strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">GA</strong>
    and
    <strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Beta</strong>
    tags to differentiate between those that are stable and those that are not.

    ### Base URLs
    Some endpoints are hosted separately from the main Vellum API and therefore have a different base url. If this is
    the case, they will say so in their description.

    Unless otherwise specified, all endpoints use <code>https://api.vellum.ai</code> as their base URL.

    ### Official API Clients:
    Vellum maintains official API clients for Python and Node/Typescript. We recommend using these clients to interact
    with all stable endpoints. You can find them here:
    - [Python](https://github.com/vellum-ai/vellum-client-python)
    - [Node/Typescript](https://github.com/vellum-ai/vellum-client-node)
  contact:
    name: devops@vellum.ai
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /v1/deployments:
    get:
      operationId: deployments_list
      description: Used to list all Prompt Deployments.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - ACTIVE
          - ARCHIVED
      tags:
      - deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlimDeploymentReadList'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/deployments/{id}:
    get:
      operationId: deployments_retrieve
      description: Used to retrieve a Prompt Deployment given its ID or name.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Either the Deployment's ID or its unique name
        required: true
      tags:
      - deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/deployments/{id}/release-tags/{name}:
    get:
      operationId: retrieve_deployment_release_tag
      description: Retrieve a Deployment Release Tag by tag name, associated with
        a specified Deployment.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this deployment.
        required: true
      - in: path
        name: name
        schema:
          type: string
        description: The name of the Release Tag associated with this Deployment that
          you'd like to retrieve.
        required: true
      tags:
      - deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentReleaseTagRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    patch:
      operationId: update_deployment_release_tag
      description: Updates an existing Release Tag associated with the specified Deployment.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this deployment.
        required: true
      - in: path
        name: name
        schema:
          type: string
        description: The name of the Release Tag associated with this Deployment that
          you'd like to update.
        required: true
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeploymentReleaseTagUpdateRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentReleaseTagRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/deployments/provider-payload:
    post:
      operationId: retrieve_provider_payload
      description: |
        Given a set of input variable values, compile the exact payload that Vellum would send to the configured model provider
        for execution if the execute-prompt endpoint had been invoked. Note that this endpoint does not actually execute the
        prompt or make an API call to the model provider.

        This endpoint is useful if you don't want to proxy LLM provider requests through Vellum and prefer to send them directly
        to the provider yourself. Note that no guarantees are made on the format of this API's response schema, other than
        that it will be a valid payload for the configured model provider. It's not recommended that you try to parse or
        derive meaning from the response body and instead, should simply pass it directly to the model provider as is.

        We encourage you to seek advise from Vellum Support before integrating with this API for production use.
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentProviderPayloadRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentProviderPayloadResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/document-indexes:
    get:
      operationId: document_indexes_list
      description: Used to retrieve a list of Document Indexes.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
        description: Search for document indices by name or label
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - ARCHIVED
        description: |-
          Filter down to only document indices that have a status matching the status specified

          * `ACTIVE` - Active
          * `ARCHIVED` - Archived
      tags:
      - document-indexes
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentIndexReadList'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    post:
      operationId: document_indexes_create
      description: Creates a new document index.
      tags:
      - document-indexes
      - folder-entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentIndexCreateRequest'
            examples:
              Example1:
                value:
                  label: My Document Index
                  name: my-document-index
                  indexing_config:
                    chunking:
                      chunker_name: sentence-chunker
                      chunker_config:
                        character_limit: 1000
                        min_overlap_ratio: 0.5
                    vectorizer:
                      model_name: hkunlp/instructor-xl
                      config:
                        instruction_domain: ''
                        instruction_document_text_type: plain_text
                        instruction_query_text_type: plain_text
                  copy_documents_from_index_id: null
                summary: Index Using Instructor Model
                description: This example shows how to create a document index that
                  vectorizes documents using an instructor model.
              Example2:
                value:
                  label: My Document Index
                  name: my-document-index
                  indexing_config:
                    chunking:
                      chunker_name: sentence-chunker
                      chunker_config:
                        character_limit: 1000
                        min_overlap_ratio: 0.5
                    vectorizer:
                      model_name: sentence-transformers/multi-qa-mpnet-base-dot-v1
                      config: {}
                  copy_documents_from_index_id: null
                summary: Index Using a Sentence Transformers Model
                description: This example shows how to create a document index that
                  vectorizes documents using a Sentence Transformers model.
              Example3:
                value:
                  label: My Document Index
                  name: my-document-index
                  indexing_config:
                    chunking:
                      chunker_name: sentence-chunker
                      chunker_config:
                        character_limit: 1000
                        min_overlap_ratio: 0.5
                    vectorizer:
                      model_name: text-embedding-ada-002
                      config:
                        add_openai_api_key: true
                  copy_documents_from_index_id: null
                summary: Index Using OpenAI Model
                description: This example shows how to create a document index that
                  vectorizes documents using one of OpenAI's embedding models.
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/document-indexes/{id}:
    get:
      operationId: document_indexes_retrieve
      description: Used to retrieve a Document Index given its ID or name.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Either the Document Index's ID or its unique name
        required: true
      tags:
      - document-indexes
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    put:
      operationId: document_indexes_update
      description: Used to fully update a Document Index given its ID or name.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Either the Document Index's ID or its unique name
        required: true
      tags:
      - document-indexes
      - folder-entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentIndexUpdateRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    patch:
      operationId: document_indexes_partial_update
      description: Used to partial update a Document Index given its ID or name.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Either the Document Index's ID or its unique name
        required: true
      tags:
      - document-indexes
      - folder-entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentIndexUpdateRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    delete:
      operationId: document_indexes_destroy
      description: Used to delete a Document Index given its ID or name.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Either the Document Index's ID or its unique name
        required: true
      tags:
      - document-indexes
      - folder-entities
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/document-indexes/{id}/documents/{document_id}:
    post:
      operationId: add_document
      description: Adds a previously uploaded Document to the specified Document Index.
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        description: Either the Vellum-generated ID or the originally supplied external_id
          that uniquely identifies the Document you'd like to add.
        required: true
      - in: path
        name: id
        schema:
          type: string
        description: Either the Vellum-generated ID or the originally specified name
          that uniquely identifies the Document Index to which you'd like to add the
          Document.
        required: true
      tags:
      - document-indexes
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    delete:
      operationId: remove_document
      description: Removes a Document from a Document Index without deleting the Document
        itself.
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        description: Either the Vellum-generated ID or the originally supplied external_id
          that uniquely identifies the Document you'd like to remove.
        required: true
      - in: path
        name: id
        schema:
          type: string
        description: Either the Vellum-generated ID or the originally specified name
          that uniquely identifies the Document Index from which you'd like to remove
          a Document.
        required: true
      tags:
      - document-indexes
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/documents:
    get:
      operationId: documents_list
      description: Used to list documents. Optionally filter on supported fields.
      parameters:
      - in: query
        name: document_index_id
        schema:
          type: string
          format: uuid
        description: Filter down to only those documents that are included in the
          specified index. You may provide either the Vellum-generated ID or the unique
          name of the index specified upon initial creation.
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - documents
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlimDocumentList'
          description: ''
      x-fern-availability: ga
      x-fern-audiences:
      - customers
  /v1/documents/{id}:
    get:
      operationId: documents_retrieve
      description: Retrieve a Document, keying off of either its Vellum-generated
        ID or its external ID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    patch:
      operationId: documents_partial_update
      description: Update a Document, keying off of either its Vellum-generated ID
        or its external ID. Particularly useful for updating its metadata.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      - document-indexes
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    delete:
      operationId: documents_destroy
      description: Delete a Document, keying off of either its Vellum-generated ID
        or its external ID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      - document-indexes
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/execute-prompt:
    post:
      operationId: execute_prompt
      description: Executes a deployed Prompt and returns the result.
      tags:
      - execute-prompt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePromptRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
      x-fern-availability: ga
      x-fern-audiences:
      - customers
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/execute-prompt-stream:
    post:
      operationId: execute_prompt_stream
      description: Executes a deployed Prompt and streams back the results.
      tags:
      - execute-prompt-stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePromptStreamRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/x-ndjson:
              schema:
                $ref: '#/components/schemas/ExecutePromptEvent'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
      x-fern-streaming: true
      x-fern-availability: ga
      x-fern-audiences:
      - customers
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/execute-workflow:
    post:
      operationId: execute_workflow
      description: Executes a deployed Workflow and returns its outputs.
      tags:
      - execute-workflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteWorkflowRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteWorkflowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteWorkflowErrorResponse'
          description: ''
      x-fern-availability: ga
      x-fern-audiences:
      - customers
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/execute-workflow-stream:
    post:
      operationId: execute_workflow_stream
      description: Executes a deployed Workflow and streams back its results.
      tags:
      - execute-workflow-stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteWorkflowStreamRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/x-ndjson:
              schema:
                $ref: '#/components/schemas/WorkflowStreamEvent'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteWorkflowStreamErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteWorkflowStreamErrorResponse'
          description: ''
      x-fern-streaming: true
      x-fern-availability: ga
      x-fern-audiences:
      - customers
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/folders/{folder_id}/add-entity:
    post:
      operationId: add_entity_to_folder
      description: |-
        Add an entity to a specific folder or root directory.

        Adding an entity to a folder will remove it from any other folders it might have been a member of.
      parameters:
      - in: path
        name: folder_id
        schema:
          type: string
        description: The ID of the folder to which the entity should be added. This
          can be a UUID of a folder, or the name of a root directory (e.g. "PROMPT_SANDBOX").
        required: true
      tags:
      - folder-entities
      - folder-path-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEntityToFolderRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          description: No response body
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/generate:
    post:
      operationId: generate
      description: |-
        Generate a completion using a previously defined deployment.

        Important: This endpoint is DEPRECATED and has been superseded by
        [execute-prompt](/api-reference/api-reference/execute-prompt).
      tags:
      - generate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
      x-fern-availability: deprecated
      x-fern-audiences:
      - deprecated
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/generate-stream:
    post:
      operationId: generate_stream
      description: |-
        Generate a stream of completions using a previously defined deployment.

        Important: This endpoint is DEPRECATED and has been superseded by
        [execute-prompt-stream](/api-reference/api-reference/execute-prompt-stream).
      tags:
      - generate-stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateStreamBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/x-ndjson:
              schema:
                $ref: '#/components/schemas/GenerateStreamResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
      x-fern-streaming: true
      x-fern-availability: deprecated
      x-fern-audiences:
      - deprecated
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/ml-models:
    get:
      operationId: ml_models_list
      description: |
        List all ML Models that your Workspace has access to.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - ml-models
      - ml-model-to-workspaces
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMLModelReadList'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - internal
    post:
      operationId: ml_models_create
      description: |
        Creates a new ML Model.
      tags:
      - ml-models
      - ml-model-to-workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLModelCreateRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLModelRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - internal
  /v1/ml-models/{id}:
    get:
      operationId: ml_models_retrieve
      description: |
        Retrieve an ML Model by its UUID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this ml model.
        required: true
      tags:
      - ml-models
      - ml-model-to-workspaces
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLModelRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - internal
    put:
      operationId: ml_models_update
      description: |
        Replace an ML Model with a new representation, keying off of its UUID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this ml model.
        required: true
      tags:
      - ml-models
      - ml-model-to-workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MLModelUpdateRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLModelRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - internal
    patch:
      operationId: ml_models_partial_update
      description: |
        Partially update an ML Model, keying off of its UUID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this ml model.
        required: true
      tags:
      - ml-models
      - ml-model-to-workspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMLModelUpdateRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLModelRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - internal
  /v1/sandboxes/{id}/prompts/{prompt_variant_id}/deploy:
    post:
      operationId: deploy_prompt
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      - in: path
        name: prompt_variant_id
        schema:
          type: string
        description: An ID identifying the Prompt you'd like to deploy.
        required: true
      tags:
      - sandboxes
      - prompt-versions
      - deployments
      - deployment-release-tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploySandboxPromptRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/sandboxes/{id}/scenarios:
    post:
      operationId: upsert_sandbox_scenario
      description: |-
        Upserts a new scenario for a sandbox, keying off of the optionally provided scenario id.

        If an id is provided and has a match, the scenario will be updated. If no id is provided or no match
        is found, a new scenario will be appended to the end.

        Note that a full replacement of the scenario is performed, so any fields not provided will be removed
        or overwritten with default values.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      tags:
      - sandboxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSandboxScenarioRequestRequest'
            examples:
              Example1:
                value:
                  id: 3ee58bf2-1e5c-415e-8b6c-02ca8b77f29d
                  label: Scenario 1
                  inputs:
                  - name: var_1
                    value: Hello, world!
                    type: STRING
                  - name: var_2
                    value: Why hello, there!
                    type: STRING
                summary: Basic Example
                description: This example shows how to specify a scenario with two
                  variables, var_1 and var_2.
              Example2:
                value:
                  id: 50c55d1d-4c37-4c83-afc1-9d895f286320
                  label: Scenario 2
                  inputs:
                  - name: chat_history
                    type: CHAT_HISTORY
                    value:
                    - role: USER
                      text: What's your favorite color?
                    - role: ASSISTANT
                      text: AI's don't have a favorite color.... Yet.
                summary: Chat History Example
                description: This example shows how to specify a value for chat history
                  input variables.
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxScenario'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/sandboxes/{id}/scenarios/{scenario_id}:
    delete:
      operationId: delete_sandbox_scenario
      description: Deletes an existing scenario from a sandbox, keying off of the
        provided scenario id.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      - in: path
        name: scenario_id
        schema:
          type: string
        description: An id identifying the scenario that you'd like to delete
        required: true
      tags:
      - sandboxes
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/search:
    post:
      operationId: search
      description: Perform a search against a document index.
      tags:
      - search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
      x-fern-availability: ga
      x-fern-audiences:
      - customers
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/submit-completion-actuals:
    post:
      operationId: submit_completion_actuals
      description: Used to submit feedback regarding the quality of previously generated
        completions.
      tags:
      - submit-completion-actuals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCompletionActualsRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
      x-fern-availability: ga
      x-fern-audiences:
      - customers
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/submit-workflow-execution-actuals:
    post:
      operationId: submit_workflow_execution_actuals
      description: "    Used to submit feedback regarding the quality of previous\
        \ workflow execution and its outputs.\n\n    **Note:** Uses a base url of\
        \ `https://predict.vellum.ai`.    "
      tags:
      - submit-workflow-execution-actuals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitWorkflowExecutionActualsRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          description: No response body
      x-fern-availability: ga
      x-fern-audiences:
      - customers
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/test-suite-runs:
    post:
      operationId: test_suite_runs_create
      description: Trigger a Test Suite and create a new Test Suite Run
      tags:
      - test-suite-runs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSuiteRunCreateRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRunRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/test-suite-runs/{id}:
    get:
      operationId: test_suite_runs_retrieve
      description: Retrieve a specific Test Suite Run by ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite run.
        required: true
      tags:
      - test-suite-runs
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRunRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/test-suite-runs/{id}/executions:
    get:
      operationId: test_suite_runs_list_executions
      parameters:
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
        description: |-
          The response fields to expand for more information.
          - 'results.metric_results.metric_label' expands the metric label for each metric result.
          - 'results.metric_results.metric_definition' expands the metric definition for each metric result.
          - 'results.metric_results.metric_definition.name' expands the metric definition name for each metric result.
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite run.
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - test-suite-runs
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTestSuiteRunExecutionList'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/test-suites/{id}/test-cases:
    get:
      operationId: list_test_suite_test_cases
      description: List the Test Cases associated with a Test Suite
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - test-suites
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTestSuiteTestCaseList'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    post:
      operationId: upsert_test_suite_test_case
      description: |-
        Upserts a new test case for a test suite, keying off of the optionally provided test case id.

        If an id is provided and has a match, the test case will be updated. If no id is provided or no match
        is found, a new test case will be appended to the end.

        Note that a full replacement of the test case is performed, so any fields not provided will be removed
        or overwritten with default values.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      tags:
      - test-suites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTestSuiteTestCaseRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestCase'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/test-suites/{id}/test-cases-bulk:
    post:
      operationId: test_suite_test_cases_bulk
      description: Created, replace, and delete Test Cases within the specified Test
        Suite in bulk
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      tags:
      - test-suites
      requestBody:
        content:
          application/x-ndjson:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TestSuiteTestCaseBulkOperationRequest'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TestSuiteTestCaseBulkOperationRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestSuiteTestCaseBulkResult'
            application/x-ndjson:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestSuiteTestCaseBulkResult'
          description: ''
      x-fern-streaming: true
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/test-suites/{id}/test-cases/{test_case_id}:
    delete:
      operationId: delete_test_suite_test_case
      description: |
        Deletes an existing test case for a test suite, keying off of the test case id.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      - in: path
        name: test_case_id
        schema:
          type: string
        description: An id identifying the test case that you'd like to delete
        required: true
      tags:
      - test-suites
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/upload-document:
    post:
      operationId: documents_upload
      description: |
        Upload a document to be indexed and used for search.

        **Note:** Uses a base url of `https://documents.vellum.ai`.

        This is a multipart/form-data request. The `contents` field should be a file upload. It also expects a JSON body with the following fields:
        - `add_to_index_names: list[str]` - Optionally include the names of all indexes that you'd like this document to be included in
        - `external_id: str | None` - Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.
        - `label: str` - A human-friendly name for this document. Typically the filename.
        - `keywords: list[str] | None` - Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.
        - `metadata: dict[str, Any]` - A stringified JSON object containing any metadata associated with the document that you'd like to filter upon later.
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadDocumentBodyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UploadDocumentBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
      x-fern-availability: ga
      x-fern-audiences:
      - customers
      servers:
      - url: https://documents.vellum.ai
        x-name: Documents
  /v1/workflow-deployments:
    get:
      operationId: workflow_deployments_list
      description: Used to list all Workflow Deployments.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - ACTIVE
          - ARCHIVED
      tags:
      - workflow-deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlimWorkflowDeploymentList'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/workflow-deployments/{id}:
    get:
      operationId: workflow_deployments_retrieve
      description: Used to retrieve a workflow deployment given its ID or name.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Either the Workflow Deployment's ID or its unique name
        required: true
      tags:
      - workflow-deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowDeploymentRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/workflow-deployments/{id}/release-tags/{name}:
    get:
      operationId: retrieve_workflow_release_tag
      description: Retrieve a Workflow Release Tag by tag name, associated with a
        specified Workflow Deployment.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow deployment.
        required: true
      - in: path
        name: name
        schema:
          type: string
        description: The name of the Release Tag associated with this Workflow Deployment
          that you'd like to retrieve.
        required: true
      tags:
      - workflow-deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowReleaseTagRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
    patch:
      operationId: update_workflow_release_tag
      description: Updates an existing Release Tag associated with the specified Workflow
        Deployment.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow deployment.
        required: true
      - in: path
        name: name
        schema:
          type: string
        description: The name of the Release Tag associated with this Workflow Deployment
          that you'd like to update.
        required: true
      tags:
      - workflow-deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkflowReleaseTagUpdateRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowReleaseTagRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
  /v1/workflow-sandboxes/{id}/workflows/{workflow_id}/deploy:
    post:
      operationId: deploy_workflow
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this workflow sandbox.
        required: true
      - in: path
        name: workflow_id
        schema:
          type: string
        description: An ID identifying the Workflow you'd like to deploy.
        required: true
      tags:
      - workflow-sandboxes
      - deployments
      - deployment-release-tags
      - workflow-deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploySandboxWorkflowRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowDeploymentRead'
          description: ''
      x-fern-availability: beta
      x-fern-audiences:
      - customers
components:
  schemas:
    AddEntityToFolderRequest:
      type: object
      properties:
        entity_id:
          type: string
          format: uuid
          description: The ID of the entity you would like to move.
      required:
      - entity_id
    AddOpenaiApiKeyEnum:
      enum:
      - true
      type: boolean
      description: '* `True` - True'
    ApiNodeResult:
      type: object
      description: A Node Result Event emitted from an API Node.
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/ApiNodeResultData'
      required:
      - data
      - type
    ApiNodeResultData:
      type: object
      properties:
        text_output_id:
          type: string
        text:
          type: string
          nullable: true
        json_output_id:
          type: string
        json:
          type: object
          additionalProperties: {}
          nullable: true
        status_code_output_id:
          type: string
        status_code:
          type: integer
      required:
      - json_output_id
      - status_code
      - status_code_output_id
      - text_output_id
    ArrayChatMessageContent:
      type: object
      description: A list of chat message content items.
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayChatMessageContentItem'
      required:
      - type
      - value
    ArrayChatMessageContentItem:
      oneOf:
      - $ref: '#/components/schemas/StringChatMessageContent'
      - $ref: '#/components/schemas/FunctionCallChatMessageContent'
      - $ref: '#/components/schemas/ImageChatMessageContent'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringChatMessageContent'
          FUNCTION_CALL: '#/components/schemas/FunctionCallChatMessageContent'
          IMAGE: '#/components/schemas/ImageChatMessageContent'
    ArrayChatMessageContentItemRequest:
      oneOf:
      - $ref: '#/components/schemas/StringChatMessageContentRequest'
      - $ref: '#/components/schemas/FunctionCallChatMessageContentRequest'
      - $ref: '#/components/schemas/ImageChatMessageContentRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringChatMessageContentRequest'
          FUNCTION_CALL: '#/components/schemas/FunctionCallChatMessageContentRequest'
          IMAGE: '#/components/schemas/ImageChatMessageContentRequest'
    ArrayChatMessageContentRequest:
      type: object
      description: A list of chat message content items.
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayChatMessageContentItemRequest'
      required:
      - type
      - value
    ArrayEnum:
      type: string
      enum:
      - ARRAY
    ArrayParameterConfig:
      type: object
      description: An OpenAPI specification of a parameter with type 'array'
      properties:
        type:
          $ref: '#/components/schemas/arrayEnum'
        min_items:
          type: integer
          nullable: true
        max_items:
          type: integer
          nullable: true
        unique_items:
          type: boolean
          nullable: true
        items:
          $ref: '#/components/schemas/ParameterConfig'
        prefix_items:
          type: array
          items:
            $ref: '#/components/schemas/ParameterConfig'
          nullable: true
        contains:
          allOf:
          - $ref: '#/components/schemas/ParameterConfig'
          nullable: true
        min_contains:
          type: integer
          nullable: true
        max_contains:
          type: integer
          nullable: true
        default:
          type: array
          items: {}
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - items
      - type
    ArrayParameterConfigRequest:
      type: object
      description: An OpenAPI specification of a parameter with type 'array'
      properties:
        type:
          $ref: '#/components/schemas/arrayEnum'
        min_items:
          type: integer
          nullable: true
        max_items:
          type: integer
          nullable: true
        unique_items:
          type: boolean
          nullable: true
        items:
          $ref: '#/components/schemas/ParameterConfigRequest'
        prefix_items:
          type: array
          items:
            $ref: '#/components/schemas/ParameterConfigRequest'
          nullable: true
        contains:
          allOf:
          - $ref: '#/components/schemas/ParameterConfigRequest'
          nullable: true
        min_contains:
          type: integer
          nullable: true
        max_contains:
          type: integer
          nullable: true
        default:
          type: array
          items: {}
          nullable: true
        title:
          type: string
          nullable: true
          minLength: 1
        description:
          type: string
          nullable: true
          minLength: 1
      required:
      - items
      - type
    ArrayVariableValueItem:
      oneOf:
      - $ref: '#/components/schemas/StringVariableValue'
      - $ref: '#/components/schemas/NumberVariableValue'
      - $ref: '#/components/schemas/JsonVariableValue'
      - $ref: '#/components/schemas/ErrorVariableValue'
      - $ref: '#/components/schemas/FunctionCallVariableValue'
      - $ref: '#/components/schemas/ImageVariableValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringVariableValue'
          NUMBER: '#/components/schemas/NumberVariableValue'
          JSON: '#/components/schemas/JsonVariableValue'
          ERROR: '#/components/schemas/ErrorVariableValue'
          FUNCTION_CALL: '#/components/schemas/FunctionCallVariableValue'
          IMAGE: '#/components/schemas/ImageVariableValue'
    ArrayVellumValueItem:
      oneOf:
      - $ref: '#/components/schemas/StringVellumValue'
      - $ref: '#/components/schemas/NumberVellumValue'
      - $ref: '#/components/schemas/JsonVellumValue'
      - $ref: '#/components/schemas/ImageVellumValue'
      - $ref: '#/components/schemas/FunctionCallVellumValue'
      - $ref: '#/components/schemas/ErrorVellumValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringVellumValue'
          NUMBER: '#/components/schemas/NumberVellumValue'
          JSON: '#/components/schemas/JsonVellumValue'
          IMAGE: '#/components/schemas/ImageVellumValue'
          FUNCTION_CALL: '#/components/schemas/FunctionCallVellumValue'
          ERROR: '#/components/schemas/ErrorVellumValue'
    ArrayVellumValueItemRequest:
      oneOf:
      - $ref: '#/components/schemas/StringVellumValueRequest'
      - $ref: '#/components/schemas/NumberVellumValueRequest'
      - $ref: '#/components/schemas/JsonVellumValueRequest'
      - $ref: '#/components/schemas/ImageVellumValueRequest'
      - $ref: '#/components/schemas/FunctionCallVellumValueRequest'
      - $ref: '#/components/schemas/ErrorVellumValueRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringVellumValueRequest'
          NUMBER: '#/components/schemas/NumberVellumValueRequest'
          JSON: '#/components/schemas/JsonVellumValueRequest'
          IMAGE: '#/components/schemas/ImageVellumValueRequest'
          FUNCTION_CALL: '#/components/schemas/FunctionCallVellumValueRequest'
          ERROR: '#/components/schemas/ErrorVellumValueRequest'
    BasicVectorizerIntfloatMultilingualE5Large:
      type: object
      description: Basic vectorizer for intfloat/multilingual-e5-large.
      properties:
        config:
          type: object
          additionalProperties: {}
          nullable: true
        model_name:
          $ref: '#/components/schemas/intfloat-multilingual-e5-largeEnum'
      required:
      - model_name
    BasicVectorizerIntfloatMultilingualE5LargeRequest:
      type: object
      description: Basic vectorizer for intfloat/multilingual-e5-large.
      properties:
        config:
          type: object
          additionalProperties: {}
          nullable: true
        model_name:
          $ref: '#/components/schemas/intfloat-multilingual-e5-largeEnum'
      required:
      - model_name
    BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1:
      type: object
      description: Basic vectorizer for sentence-transformers/multi-qa-mpnet-base-cos-v1.
      properties:
        config:
          type: object
          additionalProperties: {}
          nullable: true
        model_name:
          $ref: '#/components/schemas/sentence-transformers-multi-qa-mpnet-base-cos-v1Enum'
      required:
      - model_name
    BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1Request:
      type: object
      description: Basic vectorizer for sentence-transformers/multi-qa-mpnet-base-cos-v1.
      properties:
        config:
          type: object
          additionalProperties: {}
          nullable: true
        model_name:
          $ref: '#/components/schemas/sentence-transformers-multi-qa-mpnet-base-cos-v1Enum'
      required:
      - model_name
    BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1:
      type: object
      description: Basic vectorizer for sentence-transformers/multi-qa-mpnet-base-dot-v1.
      properties:
        model_name:
          $ref: '#/components/schemas/sentence-transformers-multi-qa-mpnet-base-dot-v1Enum'
        config:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - model_name
    BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1Request:
      type: object
      description: Basic vectorizer for sentence-transformers/multi-qa-mpnet-base-dot-v1.
      properties:
        model_name:
          $ref: '#/components/schemas/sentence-transformers-multi-qa-mpnet-base-dot-v1Enum'
        config:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - model_name
    BooleanParameterConfig:
      type: object
      description: An OpenAPI specification of a parameter with type 'boolean'
      properties:
        type:
          $ref: '#/components/schemas/booleanEnum'
        default:
          type: boolean
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - type
    BooleanParameterConfigRequest:
      type: object
      description: An OpenAPI specification of a parameter with type 'boolean'
      properties:
        type:
          $ref: '#/components/schemas/booleanEnum'
        default:
          type: boolean
          nullable: true
        title:
          type: string
          nullable: true
          minLength: 1
        description:
          type: string
          nullable: true
          minLength: 1
      required:
      - type
    ChatHistoryEnum:
      type: string
      enum:
      - CHAT_HISTORY
    ChatHistoryInputRequest:
      type: object
      description: A user input representing a list of chat messages
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the deployment.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
      required:
      - name
      - type
      - value
    ChatMessage:
      type: object
      properties:
        text:
          type: string
        role:
          $ref: '#/components/schemas/ChatMessageRole'
        content:
          allOf:
          - $ref: '#/components/schemas/ChatMessageContent'
          nullable: true
        source:
          type: string
          nullable: true
          description: An optional identifier representing who or what generated this
            message.
      required:
      - role
    ChatMessageContent:
      oneOf:
      - $ref: '#/components/schemas/StringChatMessageContent'
      - $ref: '#/components/schemas/FunctionCallChatMessageContent'
      - $ref: '#/components/schemas/ArrayChatMessageContent'
      - $ref: '#/components/schemas/ImageChatMessageContent'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringChatMessageContent'
          FUNCTION_CALL: '#/components/schemas/FunctionCallChatMessageContent'
          ARRAY: '#/components/schemas/ArrayChatMessageContent'
          IMAGE: '#/components/schemas/ImageChatMessageContent'
    ChatMessageContentRequest:
      oneOf:
      - $ref: '#/components/schemas/StringChatMessageContentRequest'
      - $ref: '#/components/schemas/FunctionCallChatMessageContentRequest'
      - $ref: '#/components/schemas/ArrayChatMessageContentRequest'
      - $ref: '#/components/schemas/ImageChatMessageContentRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringChatMessageContentRequest'
          FUNCTION_CALL: '#/components/schemas/FunctionCallChatMessageContentRequest'
          ARRAY: '#/components/schemas/ArrayChatMessageContentRequest'
          IMAGE: '#/components/schemas/ImageChatMessageContentRequest'
    ChatMessageRequest:
      type: object
      properties:
        text:
          type: string
        role:
          $ref: '#/components/schemas/ChatMessageRole'
        content:
          allOf:
          - $ref: '#/components/schemas/ChatMessageContentRequest'
          nullable: true
        source:
          type: string
          nullable: true
          description: An optional identifier representing who or what generated this
            message.
      required:
      - role
    ChatMessageRole:
      enum:
      - SYSTEM
      - ASSISTANT
      - USER
      - FUNCTION
      type: string
      description: |-
        * `SYSTEM` - System
        * `ASSISTANT` - Assistant
        * `USER` - User
        * `FUNCTION` - Function
    CodeExecutionNodeArrayResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVariableValueItem'
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeChatHistoryResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeErrorResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeFunctionCallResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeJsonResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeNumberResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeResult:
      type: object
      description: A Node Result Event emitted from a Code Execution Node.
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/CodeExecutionNodeResultData'
      required:
      - data
      - type
    CodeExecutionNodeResultData:
      type: object
      properties:
        output:
          $ref: '#/components/schemas/CodeExecutionNodeResultOutput'
        log_output_id:
          type: string
          nullable: true
      required:
      - output
    CodeExecutionNodeResultOutput:
      oneOf:
      - $ref: '#/components/schemas/CodeExecutionNodeStringResult'
      - $ref: '#/components/schemas/CodeExecutionNodeNumberResult'
      - $ref: '#/components/schemas/CodeExecutionNodeJsonResult'
      - $ref: '#/components/schemas/CodeExecutionNodeChatHistoryResult'
      - $ref: '#/components/schemas/CodeExecutionNodeSearchResultsResult'
      - $ref: '#/components/schemas/CodeExecutionNodeErrorResult'
      - $ref: '#/components/schemas/CodeExecutionNodeArrayResult'
      - $ref: '#/components/schemas/CodeExecutionNodeFunctionCallResult'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/CodeExecutionNodeStringResult'
          NUMBER: '#/components/schemas/CodeExecutionNodeNumberResult'
          JSON: '#/components/schemas/CodeExecutionNodeJsonResult'
          CHAT_HISTORY: '#/components/schemas/CodeExecutionNodeChatHistoryResult'
          SEARCH_RESULTS: '#/components/schemas/CodeExecutionNodeSearchResultsResult'
          ERROR: '#/components/schemas/CodeExecutionNodeErrorResult'
          ARRAY: '#/components/schemas/CodeExecutionNodeArrayResult'
          FUNCTION_CALL: '#/components/schemas/CodeExecutionNodeFunctionCallResult'
    CodeExecutionNodeSearchResultsResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeStringResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - id
      - type
      - value
    CompilePromptDeploymentExpandMetaRequest:
      type: object
      properties:
        model_name:
          type: boolean
          nullable: true
          description: If enabled, the response will include the model identifier
            representing the ML Model invoked by the Prompt.
        deployment_release_tag:
          type: boolean
          nullable: true
          description: If enabled, the response will include the release tag of the
            Prompt Deployment.
        prompt_version_id:
          type: boolean
          nullable: true
          description: If enabled, the response will include the ID of the Prompt
            Version backing the deployment.
    CompilePromptMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during Prompt Deployment
        compilation that the request opted into with `expand_meta`.
      properties:
        model_name:
          type: string
          nullable: true
        deployment_release_tag:
          type: string
          nullable: true
        prompt_version_id:
          type: string
          nullable: true
    ConditionalNodeResult:
      type: object
      description: A Node Result Event emitted from a Conditional Node.
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/ConditionalNodeResultData'
      required:
      - data
      - type
    ConditionalNodeResultData:
      type: object
      properties:
        source_handle_id:
          type: string
          nullable: true
    ConstParameterConfig:
      type: object
      description: An OpenAPI specification of a parameter with type 'const'
      properties:
        type:
          $ref: '#/components/schemas/constEnum'
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        const:
          type: string
      required:
      - const
      - type
    ConstParameterConfigRequest:
      type: object
      description: An OpenAPI specification of a parameter with type 'const'
      properties:
        type:
          $ref: '#/components/schemas/constEnum'
        title:
          type: string
          nullable: true
          minLength: 1
        description:
          type: string
          nullable: true
          minLength: 1
        const:
          type: string
          minLength: 1
      required:
      - const
      - type
    CreateEnum:
      type: string
      enum:
      - CREATE
    CreateTestSuiteTestCaseRequest:
      type: object
      description: Information about the Test Case to create
      properties:
        label:
          type: string
          nullable: true
          description: A human-readable label used to convey the intention of this
            Test Case
        input_values:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
          description: Values for each of the Test Case's input variables
        evaluation_values:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
          description: Values for each of the Test Case's evaluation variables
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally provide an ID that uniquely identifies this Test
            Case in your system. Useful for updating this Test Cases data after initial
            creation. Cannot be changed later.
      required:
      - evaluation_values
      - input_values
    CreatedEnum:
      type: string
      enum:
      - CREATED
    DeleteEnum:
      type: string
      enum:
      - DELETE
    DeletedEnum:
      type: string
      enum:
      - DELETED
    DeploySandboxPromptRequest:
      type: object
      properties:
        prompt_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of the Prompt Deployment you'd like
            to update. Cannot specify both this and prompt_deployment_name. Leave
            null to create a new Prompt Deployment.
        prompt_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The unique name of the Prompt Deployment you'd like to either
            create or update. Cannot specify both this and prompt_deployment_id. If
            provided and matches an existing Prompt Deployment, that Prompt Deployment
            will be updated. Otherwise, a new Prompt Deployment will be created.
        label:
          type: string
          nullable: true
          minLength: 1
          description: In the event that a new Prompt Deployment is created, this
            will be the label it's given.
        release_tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 150
          nullable: true
          description: Optionally provide the release tags that you'd like to be associated
            with the latest release of the created/updated Prompt Deployment.
    DeploySandboxWorkflowRequest:
      type: object
      properties:
        workflow_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of the Workflow Deployment you'd like
            to update. Cannot specify both this and workflow_deployment_name. Leave
            null to create a new Workflow Deployment.
        workflow_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The unique name of the Workflow Deployment you'd like to either
            create or update. Cannot specify both this and workflow_deployment_id.
            If provided and matches an existing Workflow Deployment, that Workflow
            Deployment will be updated. Otherwise, a new Prompt Deployment will be
            created.
        label:
          type: string
          nullable: true
          minLength: 1
          description: In the event that a new Workflow Deployment is created, this
            will be the label it's given.
        release_tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 150
          nullable: true
          description: Optionally provide the release tags that you'd like to be associated
            with the latest release of the created/updated Prompt Deployment.
    DeploymentProviderPayloadRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the deployment. Must provide either this or deployment_name.
        deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the deployment. Must provide either this or deployment_id.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptDeploymentInputRequest'
          description: The list of inputs defined in the Prompt's deployment with
            their corresponding values.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Workflow Deployment
        expand_meta:
          allOf:
          - $ref: '#/components/schemas/CompilePromptDeploymentExpandMetaRequest'
          nullable: true
      required:
      - inputs
    DeploymentProviderPayloadResponse:
      type: object
      properties:
        payload:
          oneOf:
          - type: object
            additionalProperties: {}
          - type: string
        meta:
          allOf:
          - $ref: '#/components/schemas/CompilePromptMeta'
          nullable: true
      required:
      - meta
      - payload
    DeploymentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the deployment
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this deployment within its
            workspace
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the deployment

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this deployment is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        last_deployed_on:
          type: string
          format: date-time
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
        description:
          type: string
          nullable: true
          description: A human-readable description of the deployment
        active_model_version_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
          description: Deprecated. The Prompt execution endpoints return a `prompt_version_id`
            that could be used instead.
          deprecated: true
        last_deployed_history_item_id:
          type: string
          format: uuid
          description: The ID of the history item associated with this Deployment's
            LATEST Release Tag
      required:
      - active_model_version_ids
      - created
      - id
      - input_variables
      - label
      - last_deployed_history_item_id
      - last_deployed_on
      - name
    DeploymentReleaseTagDeploymentHistoryItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
      required:
      - id
      - timestamp
    DeploymentReleaseTagRead:
      type: object
      properties:
        name:
          type: string
          description: The name of the Release Tag
        source:
          allOf:
          - $ref: '#/components/schemas/ReleaseTagSource'
          description: |-
            The source of how the Release Tag was originally created

            * `SYSTEM` - System
            * `USER` - User
        history_item:
          allOf:
          - $ref: '#/components/schemas/DeploymentReleaseTagDeploymentHistoryItem'
          description: The Deployment History Item that this Release Tag is associated
            with
      required:
      - history_item
      - name
      - source
    DocumentDocumentToDocumentIndex:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Vellum-generated ID that uniquely identifies this link.
        document_index_id:
          type: string
          format: uuid
          readOnly: true
          description: Vellum-generated ID that uniquely identifies the index this
            document is included in.
        indexing_state:
          allOf:
          - $ref: '#/components/schemas/IndexingStateEnum'
          description: |-
            An enum value representing where this document is along its indexing lifecycle for this index.

            * `AWAITING_PROCESSING` - Awaiting Processing
            * `QUEUED` - Queued
            * `INDEXING` - Indexing
            * `INDEXED` - Indexed
            * `FAILED` - Failed
      required:
      - document_index_id
      - id
    DocumentIndexChunking:
      oneOf:
      - $ref: '#/components/schemas/ReductoChunking'
      - $ref: '#/components/schemas/SentenceChunking'
      - $ref: '#/components/schemas/TokenOverlappingWindowChunking'
      discriminator:
        propertyName: chunker_name
        mapping:
          reducto-chunker: '#/components/schemas/ReductoChunking'
          sentence-chunker: '#/components/schemas/SentenceChunking'
          token-overlapping-window-chunker: '#/components/schemas/TokenOverlappingWindowChunking'
    DocumentIndexChunkingRequest:
      oneOf:
      - $ref: '#/components/schemas/ReductoChunkingRequest'
      - $ref: '#/components/schemas/SentenceChunkingRequest'
      - $ref: '#/components/schemas/TokenOverlappingWindowChunkingRequest'
      discriminator:
        propertyName: chunker_name
        mapping:
          reducto-chunker: '#/components/schemas/ReductoChunkingRequest'
          sentence-chunker: '#/components/schemas/SentenceChunkingRequest'
          token-overlapping-window-chunker: '#/components/schemas/TokenOverlappingWindowChunkingRequest'
    DocumentIndexCreateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document index
          maxLength: 150
        name:
          type: string
          minLength: 1
          description: A name that uniquely identifies this index within its workspace
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the document index

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this document index is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        indexing_config:
          $ref: '#/components/schemas/DocumentIndexIndexingConfigRequest'
        copy_documents_from_index_id:
          type: string
          format: uuid
          description: Optionally specify the id of a document index from which you'd
            like to copy and re-index its documents into this newly created index
      required:
      - indexing_config
      - label
      - name
    DocumentIndexIndexingConfig:
      type: object
      properties:
        vectorizer:
          $ref: '#/components/schemas/IndexingConfigVectorizer'
        chunking:
          allOf:
          - $ref: '#/components/schemas/DocumentIndexChunking'
          nullable: true
          default:
            chunker_name: sentence-chunker
            chunker_config:
              character_limit: 1000
              min_overlap_ratio: 0.5
      required:
      - vectorizer
    DocumentIndexIndexingConfigRequest:
      type: object
      properties:
        vectorizer:
          $ref: '#/components/schemas/IndexingConfigVectorizerRequest'
        chunking:
          allOf:
          - $ref: '#/components/schemas/DocumentIndexChunkingRequest'
          nullable: true
          default:
            chunker_name: sentence-chunker
            chunker_config:
              character_limit: 1000
              min_overlap_ratio: 0.5
      required:
      - vectorizer
    DocumentIndexRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the document index
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this index within its workspace
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the document index

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this document index is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        indexing_config:
          $ref: '#/components/schemas/DocumentIndexIndexingConfig'
      required:
      - created
      - id
      - indexing_config
      - label
      - name
    DocumentIndexUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document index
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the document index

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this document index is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
      required:
      - label
    DocumentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          nullable: true
          description: The unique id of this document as it exists in the user's system.
          maxLength: 1000
        last_uploaded_at:
          type: string
          format: date-time
        label:
          type: string
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 1000
        processing_state:
          allOf:
          - $ref: '#/components/schemas/ProcessingStateEnum'
          description: |-
            The current processing state of the document

            * `QUEUED` - Queued
            * `PROCESSING` - Processing
            * `PROCESSED` - Processed
            * `FAILED` - Failed
        status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          description: |-
            The current status of the document

            * `ACTIVE` - Active
        original_file_url:
          type: string
          nullable: true
          readOnly: true
        processed_file_url:
          type: string
          nullable: true
          readOnly: true
        document_to_document_indexes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDocumentToDocumentIndex'
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A previously supplied JSON object containing metadata that
            can be filtered on when searching.
      required:
      - document_to_document_indexes
      - id
      - label
      - last_uploaded_at
      - original_file_url
      - processed_file_url
    DocumentStatus:
      enum:
      - ACTIVE
      type: string
      description: '* `ACTIVE` - Active'
    EnrichedNormalizedCompletion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The Vellum-generated ID of the completion.
        external_id:
          type: string
          nullable: true
          description: The external ID that was originally provided along with the
            generation request, which uniquely identifies this generation in an external
            system.
        text:
          type: string
          description: The text generated by the LLM.
        finish_reason:
          allOf:
          - $ref: '#/components/schemas/FinishReasonEnum'
          nullable: true
          description: |-
            The reason the generation finished.

            * `LENGTH` - LENGTH
            * `STOP` - STOP
            * `UNKNOWN` - UNKNOWN
        logprobs:
          allOf:
          - $ref: '#/components/schemas/NormalizedLogProbs'
          nullable: true
          description: The logprobs of the completion. Only present if specified in
            the original request options.
        model_version_id:
          type: string
          description: The ID of the model version used to generate this completion.
        prompt_version_id:
          type: string
        type:
          $ref: '#/components/schemas/VellumVariableType'
        deployment_release_tag:
          type: string
        model_name:
          type: string
      required:
      - deployment_release_tag
      - finish_reason
      - id
      - model_name
      - model_version_id
      - prompt_version_id
      - text
    EntityStatus:
      enum:
      - ACTIVE
      - ARCHIVED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `ARCHIVED` - Archived
    EnvironmentEnum:
      enum:
      - DEVELOPMENT
      - STAGING
      - PRODUCTION
      type: string
      description: |-
        * `DEVELOPMENT` - Development
        * `STAGING` - Staging
        * `PRODUCTION` - Production
    ErrorEnum:
      type: string
      enum:
      - ERROR
    ErrorVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - type
      - value
    ErrorVellumValue:
      type: object
      description: A value representing an Error.
      properties:
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - type
      - value
    ErrorVellumValueRequest:
      type: object
      description: A value representing an Error.
      properties:
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumErrorRequest'
          nullable: true
      required:
      - type
      - value
    ExecutePromptApiErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    ExecutePromptEvent:
      oneOf:
      - $ref: '#/components/schemas/InitiatedExecutePromptEvent'
      - $ref: '#/components/schemas/StreamingExecutePromptEvent'
      - $ref: '#/components/schemas/FulfilledExecutePromptEvent'
      - $ref: '#/components/schemas/RejectedExecutePromptEvent'
      discriminator:
        propertyName: state
        mapping:
          INITIATED: '#/components/schemas/InitiatedExecutePromptEvent'
          STREAMING: '#/components/schemas/StreamingExecutePromptEvent'
          FULFILLED: '#/components/schemas/FulfilledExecutePromptEvent'
          REJECTED: '#/components/schemas/RejectedExecutePromptEvent'
    ExecutePromptRequest:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptDeploymentInputRequest'
          description: A list consisting of the Prompt Deployment's input variables
            and their values.
        prompt_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the Prompt Deployment. Must provide either this or
            prompt_deployment_name.
        prompt_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The unique name of the Prompt Deployment. Must provide either
            this or prompt_deployment_id.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Prompt Deployment
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally include a unique identifier for tracking purposes.
            Must be unique within a given Prompt Deployment.
        expand_meta:
          allOf:
          - $ref: '#/components/schemas/PromptDeploymentExpandMetaRequestRequest'
          nullable: true
          description: An optionally specified configuration used to opt in to including
            additional metadata about this prompt execution in the API response. Corresponding
            values will be returned under the `meta` key of the API response.
        raw_overrides:
          allOf:
          - $ref: '#/components/schemas/RawPromptExecutionOverridesRequest'
          description: Overrides for the raw API request sent to the model host. Combined
            with `expand_raw`, it can be used to access new features from models.
        expand_raw:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: A list of keys whose values you'd like to directly return from
            the JSON response of the model provider. Useful if you need lower-level
            info returned by model providers that Vellum would otherwise omit. Corresponding
            key/value pairs will be returned under the `raw` key of the API response.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: Arbitrary JSON metadata associated with this request. Can be
            used to capture additional monitoring data such as user id, session id,
            etc. for future analysis.
      required:
      - inputs
    ExecutePromptResponse:
      oneOf:
      - $ref: '#/components/schemas/FulfilledExecutePromptResponse'
      - $ref: '#/components/schemas/RejectedExecutePromptResponse'
      discriminator:
        propertyName: state
        mapping:
          FULFILLED: '#/components/schemas/FulfilledExecutePromptResponse'
          REJECTED: '#/components/schemas/RejectedExecutePromptResponse'
    ExecutePromptStreamRequest:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptDeploymentInputRequest'
          description: A list consisting of the Prompt Deployment's input variables
            and their values.
        prompt_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the Prompt Deployment. Must provide either this or
            prompt_deployment_name.
        prompt_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The unique name of the Prompt Deployment. Must provide either
            this or prompt_deployment_id.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Prompt Deployment
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally include a unique identifier for tracking purposes.
            Must be unique within a given Prompt Deployment.
        expand_meta:
          allOf:
          - $ref: '#/components/schemas/PromptDeploymentExpandMetaRequestRequest'
          nullable: true
          description: An optionally specified configuration used to opt in to including
            additional metadata about this prompt execution in the API response. Corresponding
            values will be returned under the `meta` key of the API response.
        raw_overrides:
          allOf:
          - $ref: '#/components/schemas/RawPromptExecutionOverridesRequest'
          description: Overrides for the raw API request sent to the model host. Combined
            with `expand_raw`, it can be used to access new features from models.
        expand_raw:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: A list of keys whose values you'd like to directly return from
            the JSON response of the model provider. Useful if you need lower-level
            info returned by model providers that Vellum would otherwise omit. Corresponding
            key/value pairs will be returned under the `raw` key of the API response.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: Arbitrary JSON metadata associated with this request. Can be
            used to capture additional monitoring data such as user id, session id,
            etc. for future analysis.
      required:
      - inputs
    ExecuteWorkflowErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    ExecuteWorkflowRequest:
      type: object
      description: The request to invoke a Workflow Deployment execution.
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRequestInputRequest'
          description: The list of inputs defined in the Workflow's Deployment with
            their corresponding values.
        expand_meta:
          allOf:
          - $ref: '#/components/schemas/WorkflowExpandMetaRequest'
          nullable: true
          description: An optionally specified configuration used to opt in to including
            additional metadata about this workflow execution in the API response.
            Corresponding values will be returned under the `execution_meta` key within
            NODE events in the response stream.
        workflow_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the Workflow Deployment. Must provide either this
            or workflow_deployment_name.
        workflow_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the Workflow Deployment. Must provide either this
            or workflow_deployment_id.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Workflow Deployment
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally include a unique identifier for tracking purposes.
            Must be unique for a given workflow deployment.
      required:
      - inputs
    ExecuteWorkflowResponse:
      type: object
      properties:
        execution_id:
          type: string
        run_id:
          type: string
          nullable: true
          deprecated: true
        external_id:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/ExecuteWorkflowWorkflowResultEvent'
      required:
      - data
      - execution_id
    ExecuteWorkflowStreamErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    ExecuteWorkflowStreamRequest:
      type: object
      description: The request to stream a Workflow Deployment execution.
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRequestInputRequest'
          description: The list of inputs defined in the Workflow's Deployment with
            their corresponding values.
        expand_meta:
          allOf:
          - $ref: '#/components/schemas/WorkflowExpandMetaRequest'
          nullable: true
          description: An optionally specified configuration used to opt in to including
            additional metadata about this workflow execution in the API response.
            Corresponding values will be returned under the `execution_meta` key within
            NODE events in the response stream.
        workflow_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the Workflow Deployment. Must provide either this
            or workflow_deployment_name.
        workflow_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the Workflow Deployment. Must provide either this
            or workflow_deployment_id.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Workflow Deployment
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally include a unique identifier for tracking purposes.
            Must be unique for a given workflow deployment.
        event_types:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowExecutionEventType'
          description: Optionally specify which events you want to receive. Defaults
            to only WORKFLOW events. Note that the schema of non-WORKFLOW events is
            unstable and should be used with caution.
      required:
      - inputs
    ExecuteWorkflowWorkflowResultEvent:
      oneOf:
      - $ref: '#/components/schemas/FulfilledExecuteWorkflowWorkflowResultEvent'
      - $ref: '#/components/schemas/RejectedExecuteWorkflowWorkflowResultEvent'
      discriminator:
        propertyName: state
        mapping:
          FULFILLED: '#/components/schemas/FulfilledExecuteWorkflowWorkflowResultEvent'
          REJECTED: '#/components/schemas/RejectedExecuteWorkflowWorkflowResultEvent'
    ExecutionArrayVellumValue:
      type: object
      description: A value representing an array of Vellum variable values.
      properties:
        id:
          type: string
          description: The variable's uniquely identifying internal id.
        name:
          type: string
        type:
          $ref: '#/components/schemas/ArrayEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVellumValueItem'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    ExecutionChatHistoryVellumValue:
      type: object
      description: A value representing Chat History.
      properties:
        id:
          type: string
          description: The variable's uniquely identifying internal id.
        name:
          type: string
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    ExecutionErrorVellumValue:
      type: object
      description: A value representing an Error.
      properties:
        id:
          type: string
          description: The variable's uniquely identifying internal id.
        name:
          type: string
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    ExecutionFunctionCallVellumValue:
      type: object
      description: A value representing a Function Call.
      properties:
        id:
          type: string
          description: The variable's uniquely identifying internal id.
        name:
          type: string
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    ExecutionJsonVellumValue:
      type: object
      description: A value representing a JSON object.
      properties:
        id:
          type: string
          description: The variable's uniquely identifying internal id.
        name:
          type: string
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
      required:
      - id
      - name
      - type
      - value
    ExecutionNumberVellumValue:
      type: object
      description: A value representing a number.
      properties:
        id:
          type: string
          description: The variable's uniquely identifying internal id.
        name:
          type: string
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
      required:
      - id
      - name
      - type
      - value
    ExecutionSearchResultsVellumValue:
      type: object
      description: A value representing Search Results.
      properties:
        id:
          type: string
          description: The variable's uniquely identifying internal id.
        name:
          type: string
        type:
          $ref: '#/components/schemas/SearchResultsEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    ExecutionStringVellumValue:
      type: object
      description: A value representing a string.
      properties:
        id:
          type: string
          description: The variable's uniquely identifying internal id.
        name:
          type: string
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
      required:
      - id
      - name
      - type
      - value
    ExecutionVellumValue:
      oneOf:
      - $ref: '#/components/schemas/ExecutionStringVellumValue'
      - $ref: '#/components/schemas/ExecutionNumberVellumValue'
      - $ref: '#/components/schemas/ExecutionJsonVellumValue'
      - $ref: '#/components/schemas/ExecutionChatHistoryVellumValue'
      - $ref: '#/components/schemas/ExecutionSearchResultsVellumValue'
      - $ref: '#/components/schemas/ExecutionErrorVellumValue'
      - $ref: '#/components/schemas/ExecutionArrayVellumValue'
      - $ref: '#/components/schemas/ExecutionFunctionCallVellumValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/ExecutionStringVellumValue'
          NUMBER: '#/components/schemas/ExecutionNumberVellumValue'
          JSON: '#/components/schemas/ExecutionJsonVellumValue'
          CHAT_HISTORY: '#/components/schemas/ExecutionChatHistoryVellumValue'
          SEARCH_RESULTS: '#/components/schemas/ExecutionSearchResultsVellumValue'
          ERROR: '#/components/schemas/ExecutionErrorVellumValue'
          ARRAY: '#/components/schemas/ExecutionArrayVellumValue'
          FUNCTION_CALL: '#/components/schemas/ExecutionFunctionCallVellumValue'
    ExternalTestCaseExecution:
      type: object
      properties:
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValue'
          description: The output values of a callable that was executed against a
            Test Case outside of Vellum
        test_case_id:
          type: string
      required:
      - outputs
      - test_case_id
    ExternalTestCaseExecutionRequest:
      type: object
      properties:
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
          description: The output values of a callable that was executed against a
            Test Case outside of Vellum
        test_case_id:
          type: string
          minLength: 1
      required:
      - outputs
      - test_case_id
    FinishReasonEnum:
      enum:
      - LENGTH
      - STOP
      - UNKNOWN
      type: string
      description: |-
        * `LENGTH` - LENGTH
        * `STOP` - STOP
        * `UNKNOWN` - UNKNOWN
    FulfilledEnum:
      type: string
      enum:
      - FULFILLED
    FulfilledExecutePromptEvent:
      type: object
      description: The final data event returned indicating that the stream has ended
        and all final resolved values from the model can be found.
      properties:
        state:
          $ref: '#/components/schemas/FulfilledEnum'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptOutput'
        execution_id:
          type: string
        meta:
          $ref: '#/components/schemas/FulfilledPromptExecutionMeta'
      required:
      - execution_id
      - outputs
      - state
    FulfilledExecutePromptResponse:
      type: object
      description: The successful response from the model containing all of the resolved
        values generated by the prompt.
      properties:
        meta:
          $ref: '#/components/schemas/PromptExecutionMeta'
        raw:
          type: object
          additionalProperties: {}
          description: The subset of the raw response from the model that the request
            opted into with `expand_raw`.
        execution_id:
          type: string
          description: The ID of the execution.
        state:
          $ref: '#/components/schemas/FulfilledEnum'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptOutput'
      required:
      - execution_id
      - outputs
      - state
    FulfilledExecuteWorkflowWorkflowResultEvent:
      type: object
      description: The successful response from the Workflow execution containing
        the produced outputs.
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/FulfilledEnum'
        ts:
          type: string
          format: date-time
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowOutput'
      required:
      - id
      - outputs
      - state
      - ts
    FulfilledPromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        latency:
          type: integer
          nullable: true
        finish_reason:
          allOf:
          - $ref: '#/components/schemas/FinishReasonEnum'
          nullable: true
        usage:
          allOf:
          - $ref: '#/components/schemas/MLModelUsage'
          nullable: true
    FulfilledWorkflowNodeResultEvent:
      type: object
      description: An event that indicates that the node has fulfilled its execution.
      properties:
        id:
          type: string
        node_id:
          type: string
        node_result_id:
          type: string
        state:
          $ref: '#/components/schemas/FulfilledEnum'
        ts:
          type: string
          format: date-time
          nullable: true
        data:
          allOf:
          - $ref: '#/components/schemas/WorkflowNodeResultData'
          nullable: true
        source_execution_id:
          type: string
          nullable: true
        output_values:
          type: array
          items:
            $ref: '#/components/schemas/NodeOutputCompiledValue'
        mocked:
          type: boolean
      required:
      - data
      - id
      - node_id
      - node_result_id
      - output_values
      - state
    FunctionCall:
      type: object
      description: The final resolved function call value.
      properties:
        arguments:
          type: object
          additionalProperties: {}
        id:
          type: string
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/FulfilledEnum'
      required:
      - arguments
      - name
    FunctionCallChatMessageContent:
      type: object
      description: A function call value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          $ref: '#/components/schemas/FunctionCallChatMessageContentValue'
      required:
      - type
      - value
    FunctionCallChatMessageContentRequest:
      type: object
      description: A function call value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          $ref: '#/components/schemas/FunctionCallChatMessageContentValueRequest'
      required:
      - type
      - value
    FunctionCallChatMessageContentValue:
      type: object
      description: The final resolved function call value.
      properties:
        name:
          type: string
        arguments:
          type: object
          additionalProperties: {}
        id:
          type: string
          nullable: true
      required:
      - arguments
      - name
    FunctionCallChatMessageContentValueRequest:
      type: object
      description: The final resolved function call value.
      properties:
        name:
          type: string
          minLength: 1
        arguments:
          type: object
          additionalProperties: {}
        id:
          type: string
          nullable: true
          minLength: 1
      required:
      - arguments
      - name
    FunctionCallEnum:
      type: string
      enum:
      - FUNCTION_CALL
    FunctionCallRequest:
      type: object
      description: The final resolved function call value.
      properties:
        arguments:
          type: object
          additionalProperties: {}
        id:
          type: string
          nullable: true
          minLength: 1
        name:
          type: string
          minLength: 1
        state:
          $ref: '#/components/schemas/FulfilledEnum'
      required:
      - arguments
      - name
    FunctionCallVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - type
      - value
    FunctionCallVellumValue:
      type: object
      description: A value representing a Function Call.
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - type
      - value
    FunctionCallVellumValueRequest:
      type: object
      description: A value representing a Function Call.
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCallRequest'
          nullable: true
      required:
      - type
      - value
    GenerateBodyRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the deployment. Must provide either this or deployment_name.
        deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the deployment. Must provide either this or deployment_id.
        requests:
          type: array
          items:
            $ref: '#/components/schemas/GenerateRequest'
          description: The generation request to make. Bulk requests are no longer
            supported, this field must be an array of length 1.
        options:
          allOf:
          - $ref: '#/components/schemas/GenerateOptionsRequest'
          nullable: true
          description: Additional configuration that can be used to control what's
            included in the response.
      required:
      - requests
    GenerateErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    GenerateOptionsRequest:
      type: object
      properties:
        logprobs:
          allOf:
          - $ref: '#/components/schemas/LogprobsEnum'
          description: |-
            Which logprobs to include, if any. Defaults to NONE.

            * `ALL` - ALL
            * `NONE` - NONE
    GenerateRequest:
      type: object
      properties:
        input_values:
          type: object
          additionalProperties: {}
          description: Key/value pairs for each template variable defined in the deployment's
            prompt.
        chat_history:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
          description: Optionally provide a list of chat messages that'll be used
            in place of the special chat_history variable, if included in the prompt.
        external_ids:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally include a unique identifier for each generation,
            as represented outside of Vellum. Note that this should generally be a
            list of length one.
      required:
      - input_values
    GenerateResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GenerateResult'
          description: The results of each generation request.
      required:
      - results
    GenerateResult:
      type: object
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/GenerateResultData'
          description: An object containing the resulting generation. This key will
            be absent if the LLM provider experienced an error.
        error:
          allOf:
          - $ref: '#/components/schemas/GenerateResultError'
          description: An object containing details about the error that occurred.
            This key will be absent if the LLM provider did not experience an error.
    GenerateResultData:
      type: object
      properties:
        completions:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedNormalizedCompletion'
          description: The generated completions. This will generally be a list of
            length one.
      required:
      - completions
    GenerateResultError:
      type: object
      properties:
        message:
          type: string
          description: The error message returned by the LLM provider.
      required:
      - message
    GenerateStreamBodyRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the deployment. Must provide either this or deployment_name.
        deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the deployment. Must provide either this or deployment_id.
        requests:
          type: array
          items:
            $ref: '#/components/schemas/GenerateRequest'
          description: The generation request to make. Bulk requests are no longer
            supported, this field must be an array of length 1.
        options:
          allOf:
          - $ref: '#/components/schemas/GenerateOptionsRequest'
          nullable: true
          description: Additional configuration that can be used to control what's
            included in the response.
      required:
      - requests
    GenerateStreamResponse:
      type: object
      properties:
        delta:
          $ref: '#/components/schemas/GenerateStreamResult'
      required:
      - delta
    GenerateStreamResult:
      type: object
      properties:
        request_index:
          type: integer
        data:
          $ref: '#/components/schemas/GenerateStreamResultData'
        error:
          $ref: '#/components/schemas/GenerateResultError'
      required:
      - request_index
    GenerateStreamResultData:
      type: object
      properties:
        completion_index:
          type: integer
        completion:
          $ref: '#/components/schemas/EnrichedNormalizedCompletion'
      required:
      - completion
      - completion_index
    HkunlpInstructorXlVectorizer:
      type: object
      description: Vectorizer for hkunlp/instructor-xl.
      properties:
        model_name:
          $ref: '#/components/schemas/hkunlp-instructor-xlEnum'
        config:
          $ref: '#/components/schemas/InstructorVectorizerConfig'
      required:
      - config
      - model_name
    HkunlpInstructorXlVectorizerRequest:
      type: object
      description: Vectorizer for hkunlp/instructor-xl.
      properties:
        model_name:
          $ref: '#/components/schemas/hkunlp-instructor-xlEnum'
        config:
          $ref: '#/components/schemas/InstructorVectorizerConfigRequest'
      required:
      - config
      - model_name
    HostedByEnum:
      enum:
      - ANTHROPIC
      - AWS_BEDROCK
      - AZURE_OPENAI
      - COHERE
      - CUSTOM
      - FIREWORKS_AI
      - GOOGLE
      - GOOGLE_VERTEX_AI
      - GROQ
      - HUGGINGFACE
      - IBM_WATSONX
      - MOSAICML
      - MYSTIC
      - OPENAI
      - OPENPIPE
      - PYQ
      - REPLICATE
      type: string
      description: |-
        * `ANTHROPIC` - ANTHROPIC
        * `AWS_BEDROCK` - AWS_BEDROCK
        * `AZURE_OPENAI` - AZURE_OPENAI
        * `COHERE` - COHERE
        * `CUSTOM` - CUSTOM
        * `FIREWORKS_AI` - FIREWORKS_AI
        * `GOOGLE` - GOOGLE
        * `GOOGLE_VERTEX_AI` - GOOGLE_VERTEX_AI
        * `GROQ` - GROQ
        * `HUGGINGFACE` - HUGGINGFACE
        * `IBM_WATSONX` - IBM_WATSONX
        * `MOSAICML` - MOSAICML
        * `MYSTIC` - MYSTIC
        * `OPENAI` - OPENAI
        * `OPENPIPE` - OPENPIPE
        * `PYQ` - PYQ
        * `REPLICATE` - REPLICATE
    HuggingFaceEnum:
      type: string
      enum:
      - HUGGING_FACE
    HuggingFaceTokenizerConfig:
      type: object
      description: Tokenizer config for Hugging Face type tokenizers.
      properties:
        type:
          $ref: '#/components/schemas/HuggingFaceEnum'
        name:
          type: string
        path:
          type: string
          nullable: true
      required:
      - name
      - path
      - type
    HuggingFaceTokenizerConfigRequest:
      type: object
      description: Tokenizer config for Hugging Face type tokenizers.
      properties:
        type:
          $ref: '#/components/schemas/HuggingFaceEnum'
        name:
          type: string
          minLength: 1
        path:
          type: string
          nullable: true
          minLength: 1
      required:
      - name
      - path
      - type
    ImageChatMessageContent:
      type: object
      description: An image value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          $ref: '#/components/schemas/VellumImage'
      required:
      - type
      - value
    ImageChatMessageContentRequest:
      type: object
      description: An image value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          $ref: '#/components/schemas/VellumImageRequest'
      required:
      - type
      - value
    ImageEnum:
      type: string
      enum:
      - IMAGE
    ImageVariableValue:
      type: object
      description: A base Vellum primitive value representing an image.
      properties:
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumImage'
          nullable: true
      required:
      - type
      - value
    ImageVellumValue:
      type: object
      description: A base Vellum primitive value representing an image.
      properties:
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumImage'
          nullable: true
      required:
      - type
      - value
    ImageVellumValueRequest:
      type: object
      description: A base Vellum primitive value representing an image.
      properties:
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumImageRequest'
          nullable: true
      required:
      - type
      - value
    IndexingConfigVectorizer:
      oneOf:
      - $ref: '#/components/schemas/OpenAIVectorizerTextEmbedding3Small'
      - $ref: '#/components/schemas/OpenAIVectorizerTextEmbedding3Large'
      - $ref: '#/components/schemas/OpenAIVectorizerTextEmbeddingAda002'
      - $ref: '#/components/schemas/BasicVectorizerIntfloatMultilingualE5Large'
      - $ref: '#/components/schemas/BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1'
      - $ref: '#/components/schemas/BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1'
      - $ref: '#/components/schemas/HkunlpInstructorXlVectorizer'
      discriminator:
        propertyName: model_name
        mapping:
          text-embedding-3-small: '#/components/schemas/OpenAIVectorizerTextEmbedding3Small'
          text-embedding-3-large: '#/components/schemas/OpenAIVectorizerTextEmbedding3Large'
          text-embedding-ada-002: '#/components/schemas/OpenAIVectorizerTextEmbeddingAda002'
          intfloat/multilingual-e5-large: '#/components/schemas/BasicVectorizerIntfloatMultilingualE5Large'
          sentence-transformers/multi-qa-mpnet-base-cos-v1: '#/components/schemas/BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1'
          sentence-transformers/multi-qa-mpnet-base-dot-v1: '#/components/schemas/BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1'
          hkunlp/instructor-xl: '#/components/schemas/HkunlpInstructorXlVectorizer'
    IndexingConfigVectorizerRequest:
      oneOf:
      - $ref: '#/components/schemas/OpenAIVectorizerTextEmbedding3SmallRequest'
      - $ref: '#/components/schemas/OpenAIVectorizerTextEmbedding3LargeRequest'
      - $ref: '#/components/schemas/OpenAIVectorizerTextEmbeddingAda002Request'
      - $ref: '#/components/schemas/BasicVectorizerIntfloatMultilingualE5LargeRequest'
      - $ref: '#/components/schemas/BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1Request'
      - $ref: '#/components/schemas/BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1Request'
      - $ref: '#/components/schemas/HkunlpInstructorXlVectorizerRequest'
      discriminator:
        propertyName: model_name
        mapping:
          text-embedding-3-small: '#/components/schemas/OpenAIVectorizerTextEmbedding3SmallRequest'
          text-embedding-3-large: '#/components/schemas/OpenAIVectorizerTextEmbedding3LargeRequest'
          text-embedding-ada-002: '#/components/schemas/OpenAIVectorizerTextEmbeddingAda002Request'
          intfloat/multilingual-e5-large: '#/components/schemas/BasicVectorizerIntfloatMultilingualE5LargeRequest'
          sentence-transformers/multi-qa-mpnet-base-cos-v1: '#/components/schemas/BasicVectorizerSentenceTransformersMultiQaMpnetBaseCosV1Request'
          sentence-transformers/multi-qa-mpnet-base-dot-v1: '#/components/schemas/BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1Request'
          hkunlp/instructor-xl: '#/components/schemas/HkunlpInstructorXlVectorizerRequest'
    IndexingStateEnum:
      enum:
      - AWAITING_PROCESSING
      - QUEUED
      - INDEXING
      - INDEXED
      - FAILED
      type: string
      description: |-
        * `AWAITING_PROCESSING` - Awaiting Processing
        * `QUEUED` - Queued
        * `INDEXING` - Indexing
        * `INDEXED` - Indexed
        * `FAILED` - Failed
    InitiatedEnum:
      type: string
      enum:
      - INITIATED
    InitiatedExecutePromptEvent:
      type: object
      description: The initial data returned indicating that the response from the
        model has returned and begun streaming.
      properties:
        state:
          $ref: '#/components/schemas/InitiatedEnum'
        meta:
          $ref: '#/components/schemas/InitiatedPromptExecutionMeta'
        execution_id:
          type: string
      required:
      - execution_id
      - state
    InitiatedPromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        model_name:
          type: string
          nullable: true
        latency:
          type: integer
          nullable: true
        deployment_release_tag:
          type: string
          nullable: true
        prompt_version_id:
          type: string
          nullable: true
    InitiatedWorkflowNodeResultEvent:
      type: object
      description: An event that indicates that the node has initiated its execution.
      properties:
        id:
          type: string
        node_id:
          type: string
        node_result_id:
          type: string
        state:
          $ref: '#/components/schemas/InitiatedEnum'
        ts:
          type: string
          format: date-time
          nullable: true
        data:
          allOf:
          - $ref: '#/components/schemas/WorkflowNodeResultData'
          nullable: true
        source_execution_id:
          type: string
          nullable: true
        input_values:
          type: array
          items:
            $ref: '#/components/schemas/NodeInputVariableCompiledValue'
          nullable: true
      required:
      - data
      - id
      - node_id
      - node_result_id
      - state
    InstructorVectorizerConfig:
      type: object
      description: Configuration for using an Instructor vectorizer.
      properties:
        instruction_domain:
          type: string
        instruction_query_text_type:
          type: string
        instruction_document_text_type:
          type: string
      required:
      - instruction_document_text_type
      - instruction_domain
      - instruction_query_text_type
    InstructorVectorizerConfigRequest:
      type: object
      description: Configuration for using an Instructor vectorizer.
      properties:
        instruction_domain:
          type: string
        instruction_query_text_type:
          type: string
          minLength: 1
        instruction_document_text_type:
          type: string
          minLength: 1
      required:
      - instruction_document_text_type
      - instruction_domain
      - instruction_query_text_type
    IntegerParameterConfig:
      type: object
      description: An OpenAPI specification of a parameter with type 'integer'
      properties:
        type:
          $ref: '#/components/schemas/integerEnum'
        minimum:
          type: integer
          nullable: true
        maximum:
          type: integer
          nullable: true
        exclusive_minimum:
          type: boolean
          nullable: true
        exclusive_maximum:
          type: boolean
          nullable: true
        default:
          type: integer
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - type
    IntegerParameterConfigRequest:
      type: object
      description: An OpenAPI specification of a parameter with type 'integer'
      properties:
        type:
          $ref: '#/components/schemas/integerEnum'
        minimum:
          type: integer
          nullable: true
        maximum:
          type: integer
          nullable: true
        exclusive_minimum:
          type: boolean
          nullable: true
        exclusive_maximum:
          type: boolean
          nullable: true
        default:
          type: integer
          nullable: true
        title:
          type: string
          nullable: true
          minLength: 1
        description:
          type: string
          nullable: true
          minLength: 1
      required:
      - type
    IterationStateEnum:
      enum:
      - INITIATED
      - FULFILLED
      type: string
      description: |-
        * `INITIATED` - INITIATED
        * `FULFILLED` - FULFILLED
    JSONInputRequest:
      type: object
      description: A user input representing a JSON object
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the deployment.
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
      required:
      - name
      - type
      - value
    JsonEnum:
      type: string
      enum:
      - JSON
    JsonVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          nullable: true
      required:
      - type
      - value
    JsonVellumValue:
      type: object
      description: A value representing a JSON object.
      properties:
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
      required:
      - type
      - value
    JsonVellumValueRequest:
      type: object
      description: A value representing a JSON object.
      properties:
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
      required:
      - type
      - value
    LogicalOperator:
      enum:
      - '='
      - '!='
      - <
      - '>'
      - <=
      - '>='
      - contains
      - beginsWith
      - endsWith
      - doesNotContain
      - doesNotBeginWith
      - doesNotEndWith
      - 'null'
      - notNull
      - in
      - notIn
      - between
      - notBetween
      type: string
      description: |-
        * `=` - EQUALS
        * `!=` - DOES_NOT_EQUAL
        * `<` - LESS_THAN
        * `>` - GREATER_THAN
        * `<=` - LESS_THAN_OR_EQUAL_TO
        * `>=` - GREATER_THAN_OR_EQUAL_TO
        * `contains` - CONTAINS
        * `beginsWith` - BEGINS_WITH
        * `endsWith` - ENDS_WITH
        * `doesNotContain` - DOES_NOT_CONTAIN
        * `doesNotBeginWith` - DOES_NOT_BEGIN_WITH
        * `doesNotEndWith` - DOES_NOT_END_WITH
        * `null` - NULL
        * `notNull` - NOT_NULL
        * `in` - IN
        * `notIn` - NOT_IN
        * `between` - BETWEEN
        * `notBetween` - NOT_BETWEEN
      x-fern-enum:
        '=':
          name: EQUALS
          description: Equals
        '!=':
          name: DOES_NOT_EQUAL
          description: Does not equal
        <:
          name: LESS_THAN
          description: Less than
        '>':
          name: GREATER_THAN
          description: Greater than
        <=:
          name: LESS_THAN_OR_EQUAL_TO
          description: Less than or equal to
        '>=':
          name: GREATER_THAN_OR_EQUAL_TO
          description: Greater than or equal to
        contains:
          name: CONTAINS
          description: Contains
        beginsWith:
          name: BEGINS_WITH
          description: Begins with
        endsWith:
          name: ENDS_WITH
          description: Ends with
        doesNotContain:
          name: DOES_NOT_CONTAIN
          description: Does not contain
        doesNotBeginWith:
          name: DOES_NOT_BEGIN_WITH
          description: Does not begin with
        doesNotEndWith:
          name: DOES_NOT_END_WITH
          description: Does not end with
        'null':
          name: 'NULL'
          description: 'Null'
        notNull:
          name: NOT_NULL
          description: Not null
        in:
          name: IN
          description: In
        notIn:
          name: NOT_IN
          description: Not in
        between:
          name: BETWEEN
          description: Between
        notBetween:
          name: NOT_BETWEEN
          description: Not between
    LogprobsEnum:
      enum:
      - ALL
      - NONE
      type: string
      description: |-
        * `ALL` - ALL
        * `NONE` - NONE
    MLModelBuildConfig:
      type: object
      properties:
        finetune_data:
          type: object
          additionalProperties: {}
      required:
      - finetune_data
    MLModelBuildConfigRequest:
      type: object
      properties:
        finetune_data:
          type: object
          additionalProperties: {}
      required:
      - finetune_data
    MLModelCreateRequest:
      type: object
      description: Data representing a new ML Model that you'd like to create.
      properties:
        name:
          type: string
          minLength: 1
          description: The unique name of the ML Model.
        family:
          allOf:
          - $ref: '#/components/schemas/MLModelFamily'
          description: |-
            The family of the ML Model.

            * `CAPYBARA` - Capybara
            * `CHAT_GPT` - Chat GPT
            * `CLAUDE` - Claude
            * `COHERE` - Cohere
            * `FALCON` - Falcon
            * `GEMINI` - Gemini
            * `GRANITE` - Granite
            * `GPT3` - GPT-3
            * `FIREWORKS` - Fireworks
            * `LLAMA2` - Llama2
            * `LLAMA3` - Llama3
            * `MISTRAL` - Mistral
            * `MPT` - MPT
            * `OPENCHAT` - OpenChat
            * `PALM` - PaLM
            * `SOLAR` - Solar
            * `TITAN` - Titan
            * `WIZARD` - Wizard
            * `YI` - Yi
            * `ZEPHYR` - Zephyr
        hosted_by:
          allOf:
          - $ref: '#/components/schemas/HostedByEnum'
          description: |-
            The organization hosting the ML Model.

            * `ANTHROPIC` - ANTHROPIC
            * `AWS_BEDROCK` - AWS_BEDROCK
            * `AZURE_OPENAI` - AZURE_OPENAI
            * `COHERE` - COHERE
            * `CUSTOM` - CUSTOM
            * `FIREWORKS_AI` - FIREWORKS_AI
            * `GOOGLE` - GOOGLE
            * `GOOGLE_VERTEX_AI` - GOOGLE_VERTEX_AI
            * `GROQ` - GROQ
            * `HUGGINGFACE` - HUGGINGFACE
            * `IBM_WATSONX` - IBM_WATSONX
            * `MOSAICML` - MOSAICML
            * `MYSTIC` - MYSTIC
            * `OPENAI` - OPENAI
            * `OPENPIPE` - OPENPIPE
            * `PYQ` - PYQ
            * `REPLICATE` - REPLICATE
        developed_by:
          allOf:
          - $ref: '#/components/schemas/MLModelDeveloper'
          description: |-
            The organization that developed the ML Model.

            * `01_AI` - 01_AI
            * `AMAZON` - AMAZON
            * `ANTHROPIC` - ANTHROPIC
            * `COHERE` - COHERE
            * `ELUTHERAI` - ELUTHERAI
            * `FIREWORKS_AI` - FIREWORKS_AI
            * `GOOGLE` - GOOGLE
            * `HUGGINGFACE` - HUGGINGFACE
            * `IBM` - IBM
            * `META` - META
            * `MISTRAL_AI` - MISTRAL_AI
            * `MOSAICML` - MOSAICML
            * `NOUS_RESEARCH` - NOUS_RESEARCH
            * `OPENAI` - OPENAI
            * `OPENCHAT` - OPENCHAT
            * `OPENPIPE` - OPENPIPE
            * `TII` - TII
            * `WIZARDLM` - WIZARDLM
        build_config:
          allOf:
          - $ref: '#/components/schemas/MLModelBuildConfigRequest'
          description: Configuration for how the ML Model was built.
        exec_config:
          allOf:
          - $ref: '#/components/schemas/MLModelExecConfigRequest'
          description: Configuration for how to execute the ML Model.
        parameter_config:
          allOf:
          - $ref: '#/components/schemas/MLModelParameterConfigRequest'
          description: Configuration for the ML Model's parameters.
        display_config:
          allOf:
          - $ref: '#/components/schemas/MLModelDisplayConfigRequest'
          description: Configuration for how to display the ML Model.
        visibility:
          allOf:
          - $ref: '#/components/schemas/VisibilityEnum'
          description: |-
            The visibility of the ML Model.

            * `DEFAULT` - DEFAULT
            * `PUBLIC` - PUBLIC
            * `PRIVATE` - PRIVATE
            * `DISABLED` - DISABLED
      required:
      - exec_config
      - family
      - name
    MLModelDeveloper:
      enum:
      - 01_AI
      - AMAZON
      - ANTHROPIC
      - COHERE
      - ELUTHERAI
      - FIREWORKS_AI
      - GOOGLE
      - HUGGINGFACE
      - IBM
      - META
      - MISTRAL_AI
      - MOSAICML
      - NOUS_RESEARCH
      - OPENAI
      - OPENCHAT
      - OPENPIPE
      - TII
      - WIZARDLM
      type: string
      description: |-
        * `01_AI` - 01_AI
        * `AMAZON` - AMAZON
        * `ANTHROPIC` - ANTHROPIC
        * `COHERE` - COHERE
        * `ELUTHERAI` - ELUTHERAI
        * `FIREWORKS_AI` - FIREWORKS_AI
        * `GOOGLE` - GOOGLE
        * `HUGGINGFACE` - HUGGINGFACE
        * `IBM` - IBM
        * `META` - META
        * `MISTRAL_AI` - MISTRAL_AI
        * `MOSAICML` - MOSAICML
        * `NOUS_RESEARCH` - NOUS_RESEARCH
        * `OPENAI` - OPENAI
        * `OPENCHAT` - OPENCHAT
        * `OPENPIPE` - OPENPIPE
        * `TII` - TII
        * `WIZARDLM` - WIZARDLM
    MLModelDeveloperEnumValueLabel:
      type: object
      properties:
        label:
          type: string
        value:
          $ref: '#/components/schemas/MLModelDeveloper'
      required:
      - label
      - value
    MLModelDisplayConfigLabelled:
      type: object
      properties:
        label:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/MLModelDisplayTagEnumValueLabel'
          readOnly: true
        default_display_priority:
          type: number
          format: double
      required:
      - default_display_priority
      - description
      - label
      - tags
    MLModelDisplayConfigRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        tags:
          type: array
          items:
            $ref: '#/components/schemas/MLModelDisplayTag'
        default_display_priority:
          type: number
          format: double
      required:
      - default_display_priority
      - description
      - label
      - tags
    MLModelDisplayTag:
      enum:
      - TEXT
      - CHAT
      - OPEN_SOURCE
      - FINETUNED
      - NEW
      - ALPHA
      - BETA
      - DEPRECATED
      type: string
      description: |-
        * `TEXT` - TEXT
        * `CHAT` - CHAT
        * `OPEN_SOURCE` - OPEN_SOURCE
        * `FINETUNED` - FINETUNED
        * `NEW` - NEW
        * `ALPHA` - ALPHA
        * `BETA` - BETA
        * `DEPRECATED` - DEPRECATED
    MLModelDisplayTagEnumValueLabel:
      type: object
      properties:
        label:
          type: string
        value:
          $ref: '#/components/schemas/MLModelDisplayTag'
      required:
      - label
      - value
    MLModelExecConfig:
      type: object
      properties:
        model_identifier:
          type: string
        base_url:
          type: string
        metadata:
          type: object
          additionalProperties: {}
        features:
          type: array
          items:
            $ref: '#/components/schemas/MLModelFeature'
        force_system_credentials:
          type: boolean
        tokenizer_config:
          allOf:
          - $ref: '#/components/schemas/MLModelTokenizerConfig'
          nullable: true
        request_config:
          allOf:
          - $ref: '#/components/schemas/MLModelRequestConfig'
          nullable: true
        response_config:
          allOf:
          - $ref: '#/components/schemas/MLModelResponseConfig'
          nullable: true
      required:
      - base_url
      - features
      - metadata
      - model_identifier
    MLModelExecConfigRequest:
      type: object
      properties:
        model_identifier:
          type: string
          minLength: 1
        base_url:
          type: string
          minLength: 1
        metadata:
          type: object
          additionalProperties: {}
        features:
          type: array
          items:
            $ref: '#/components/schemas/MLModelFeature'
        force_system_credentials:
          type: boolean
        tokenizer_config:
          allOf:
          - $ref: '#/components/schemas/MLModelTokenizerConfigRequest'
          nullable: true
        request_config:
          allOf:
          - $ref: '#/components/schemas/MLModelRequestConfigRequest'
          nullable: true
        response_config:
          allOf:
          - $ref: '#/components/schemas/MLModelResponseConfigRequest'
          nullable: true
      required:
      - base_url
      - features
      - metadata
      - model_identifier
    MLModelFamily:
      enum:
      - CAPYBARA
      - CHAT_GPT
      - CLAUDE
      - COHERE
      - FALCON
      - GEMINI
      - GRANITE
      - GPT3
      - FIREWORKS
      - LLAMA2
      - LLAMA3
      - MISTRAL
      - MPT
      - OPENCHAT
      - PALM
      - SOLAR
      - TITAN
      - WIZARD
      - YI
      - ZEPHYR
      type: string
      description: |-
        * `CAPYBARA` - Capybara
        * `CHAT_GPT` - Chat GPT
        * `CLAUDE` - Claude
        * `COHERE` - Cohere
        * `FALCON` - Falcon
        * `GEMINI` - Gemini
        * `GRANITE` - Granite
        * `GPT3` - GPT-3
        * `FIREWORKS` - Fireworks
        * `LLAMA2` - Llama2
        * `LLAMA3` - Llama3
        * `MISTRAL` - Mistral
        * `MPT` - MPT
        * `OPENCHAT` - OpenChat
        * `PALM` - PaLM
        * `SOLAR` - Solar
        * `TITAN` - Titan
        * `WIZARD` - Wizard
        * `YI` - Yi
        * `ZEPHYR` - Zephyr
    MLModelFamilyEnumValueLabel:
      type: object
      properties:
        label:
          type: string
        value:
          $ref: '#/components/schemas/MLModelFamily'
      required:
      - label
      - value
    MLModelFeature:
      enum:
      - TEXT
      - CHAT_MESSAGE_SYSTEM
      - CHAT_MESSAGE_USER
      - CHAT_MESSAGE_ASSISTANT
      - CHAT_MESSAGE_ASSISTANT_UNTERMINATED
      - CHAT_MESSAGE_FUNCTION_CALL
      - CHAT_MESSAGE_IMAGE
      - FUNCTION_DEFINITION
      - STREAMING_SUPPORT
      type: string
      description: |-
        * `TEXT` - Text
        * `CHAT_MESSAGE_SYSTEM` - Chat Message System
        * `CHAT_MESSAGE_USER` - Chat Message User
        * `CHAT_MESSAGE_ASSISTANT` - Chat Message Assistant
        * `CHAT_MESSAGE_ASSISTANT_UNTERMINATED` - Chat Message Assistant Unterminated
        * `CHAT_MESSAGE_FUNCTION_CALL` - Chat Message Function Call
        * `CHAT_MESSAGE_IMAGE` - Chat Message Image
        * `FUNCTION_DEFINITION` - Function Definition
        * `STREAMING_SUPPORT` - Streaming Support
    MLModelParameterConfig:
      type: object
      properties:
        temperature:
          allOf:
          - $ref: '#/components/schemas/NumberParameterConfig'
          nullable: true
        max_tokens:
          allOf:
          - $ref: '#/components/schemas/IntegerParameterConfig'
          nullable: true
        stop:
          allOf:
          - $ref: '#/components/schemas/ArrayParameterConfig'
          nullable: true
        top_p:
          allOf:
          - $ref: '#/components/schemas/NumberParameterConfig'
          nullable: true
        top_k:
          allOf:
          - $ref: '#/components/schemas/IntegerParameterConfig'
          nullable: true
        frequency_penalty:
          allOf:
          - $ref: '#/components/schemas/NumberParameterConfig'
          nullable: true
        presence_penalty:
          allOf:
          - $ref: '#/components/schemas/NumberParameterConfig'
          nullable: true
        logit_bias:
          allOf:
          - $ref: '#/components/schemas/ObjectParameterConfig'
          nullable: true
        custom_parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParameterConfig'
          nullable: true
    MLModelParameterConfigRequest:
      type: object
      properties:
        temperature:
          allOf:
          - $ref: '#/components/schemas/NumberParameterConfigRequest'
          nullable: true
        max_tokens:
          allOf:
          - $ref: '#/components/schemas/IntegerParameterConfigRequest'
          nullable: true
        stop:
          allOf:
          - $ref: '#/components/schemas/ArrayParameterConfigRequest'
          nullable: true
        top_p:
          allOf:
          - $ref: '#/components/schemas/NumberParameterConfigRequest'
          nullable: true
        top_k:
          allOf:
          - $ref: '#/components/schemas/IntegerParameterConfigRequest'
          nullable: true
        frequency_penalty:
          allOf:
          - $ref: '#/components/schemas/NumberParameterConfigRequest'
          nullable: true
        presence_penalty:
          allOf:
          - $ref: '#/components/schemas/NumberParameterConfigRequest'
          nullable: true
        logit_bias:
          allOf:
          - $ref: '#/components/schemas/ObjectParameterConfigRequest'
          nullable: true
        custom_parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParameterConfigRequest'
          nullable: true
    MLModelRead:
      type: object
      description: An ML Model that your Workspace has access to.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: The unique name of the ML Model.
        family:
          allOf:
          - $ref: '#/components/schemas/MLModelFamilyEnumValueLabel'
          readOnly: true
          description: The family of the ML Model.
        hosted_by:
          allOf:
          - $ref: '#/components/schemas/HostedByEnum'
          description: |-
            The organization hosting the ML Model.

            * `ANTHROPIC` - Anthropic
            * `AWS_BEDROCK` - AWS Bedrock
            * `AZURE_OPENAI` - Azure OpenAI
            * `COHERE` - Cohere
            * `CUSTOM` - Custom
            * `FIREWORKS_AI` - Fireworks AI
            * `GOOGLE` - Google
            * `GOOGLE_VERTEX_AI` - Google Vertex AI
            * `GROQ` - Groq
            * `HUGGINGFACE` - HuggingFace
            * `IBM_WATSONX` - IBM WatsonX
            * `MOSAICML` - MosaicML
            * `MYSTIC` - Mystic
            * `OPENAI` - OpenAI
            * `OPENPIPE` - OpenPipe
            * `PYQ` - Pyq
            * `REPLICATE` - Replicate
        developed_by:
          allOf:
          - $ref: '#/components/schemas/MLModelDeveloperEnumValueLabel'
          readOnly: true
          description: The organization that developed the ML Model.
        visibility:
          allOf:
          - $ref: '#/components/schemas/VisibilityEnum'
          description: |-
            The visibility of the ML Model.

            * `DEFAULT` - Default
            * `PUBLIC` - Public
            * `PRIVATE` - Private
            * `DISABLED` - Disabled
        build_config:
          allOf:
          - $ref: '#/components/schemas/MLModelBuildConfig'
          description: Configuration for how the ML Model was built.
        exec_config:
          allOf:
          - $ref: '#/components/schemas/MLModelExecConfig'
          description: Configuration for how to execute the ML Model.
        parameter_config:
          allOf:
          - $ref: '#/components/schemas/MLModelParameterConfig'
          description: Configuration for the ML Model's parameters.
        display_config:
          allOf:
          - $ref: '#/components/schemas/MLModelDisplayConfigLabelled'
          description: Configuration for how to display the ML Model.
      required:
      - build_config
      - developed_by
      - display_config
      - exec_config
      - family
      - hosted_by
      - id
      - name
      - parameter_config
    MLModelRequestAuthorizationConfig:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MLModelRequestAuthorizationConfigTypeEnum'
      required:
      - type
    MLModelRequestAuthorizationConfigRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MLModelRequestAuthorizationConfigTypeEnum'
      required:
      - type
    MLModelRequestAuthorizationConfigTypeEnum:
      enum:
      - BEARER_TOKEN
      - API_KEY
      type: string
      description: |-
        * `BEARER_TOKEN` - Bearer Token
        * `API_KEY` - API Key
    MLModelRequestConfig:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            type: string
          nullable: true
        authorization:
          allOf:
          - $ref: '#/components/schemas/MLModelRequestAuthorizationConfig'
          nullable: true
        body_template:
          type: string
          nullable: true
    MLModelRequestConfigRequest:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            type: string
            minLength: 1
          nullable: true
        authorization:
          allOf:
          - $ref: '#/components/schemas/MLModelRequestAuthorizationConfigRequest'
          nullable: true
        body_template:
          type: string
          nullable: true
          minLength: 1
    MLModelResponseConfig:
      type: object
      properties:
        result_path:
          type: string
          nullable: true
        result_extraction_regex:
          type: string
          nullable: true
        result_substitution_regexes:
          type: object
          additionalProperties:
            type: string
          nullable: true
    MLModelResponseConfigRequest:
      type: object
      properties:
        result_path:
          type: string
          nullable: true
          minLength: 1
        result_extraction_regex:
          type: string
          nullable: true
          minLength: 1
        result_substitution_regexes:
          type: object
          additionalProperties:
            type: string
          nullable: true
    MLModelTokenizerConfig:
      oneOf:
      - $ref: '#/components/schemas/HuggingFaceTokenizerConfig'
      - $ref: '#/components/schemas/TikTokenTokenizerConfig'
      discriminator:
        propertyName: type
        mapping:
          HUGGING_FACE: '#/components/schemas/HuggingFaceTokenizerConfig'
          TIKTOKEN: '#/components/schemas/TikTokenTokenizerConfig'
    MLModelTokenizerConfigRequest:
      oneOf:
      - $ref: '#/components/schemas/HuggingFaceTokenizerConfigRequest'
      - $ref: '#/components/schemas/TikTokenTokenizerConfigRequest'
      discriminator:
        propertyName: type
        mapping:
          HUGGING_FACE: '#/components/schemas/HuggingFaceTokenizerConfigRequest'
          TIKTOKEN: '#/components/schemas/TikTokenTokenizerConfigRequest'
    MLModelUpdateRequest:
      type: object
      description: Information about an existing ML Model that you'd like to update.
      properties:
        display_config:
          allOf:
          - $ref: '#/components/schemas/MLModelDisplayConfigRequest'
          description: Configuration for how to display the ML Model.
        visibility:
          allOf:
          - $ref: '#/components/schemas/VisibilityEnum'
          description: |-
            The visibility of the ML Model.

            * `DEFAULT` - DEFAULT
            * `PUBLIC` - PUBLIC
            * `PRIVATE` - PRIVATE
            * `DISABLED` - DISABLED
    MLModelUsage:
      type: object
      properties:
        output_token_count:
          type: integer
          nullable: true
        input_token_count:
          type: integer
          nullable: true
        input_char_count:
          type: integer
          nullable: true
        output_char_count:
          type: integer
          nullable: true
        compute_nanos:
          type: integer
          nullable: true
    MapEnum:
      type: string
      enum:
      - MAP
    MapNodeResult:
      type: object
      description: A Node Result Event emitted from a Map Node.
      properties:
        type:
          $ref: '#/components/schemas/MapEnum'
        data:
          $ref: '#/components/schemas/MapNodeResultData'
      required:
      - type
    MapNodeResultData:
      type: object
      properties:
        execution_ids:
          type: array
          items:
            type: string
            format: uuid
        iteration_state:
          allOf:
          - $ref: '#/components/schemas/IterationStateEnum'
          nullable: true
      required:
      - execution_ids
    MergeEnum:
      type: string
      enum:
      - MERGE
    MergeNodeResult:
      type: object
      description: A Node Result Event emitted from a Merge Node.
      properties:
        type:
          $ref: '#/components/schemas/MergeEnum'
        data:
          $ref: '#/components/schemas/MergeNodeResultData'
      required:
      - data
      - type
    MergeNodeResultData:
      type: object
      properties:
        paused_node_data:
          type: object
          additionalProperties: {}
          nullable: true
    MetadataFilterConfigRequest:
      type: object
      properties:
        combinator:
          allOf:
          - $ref: '#/components/schemas/MetadataFilterRuleCombinator'
          nullable: true
        negated:
          type: boolean
          nullable: true
        rules:
          type: array
          items:
            $ref: '#/components/schemas/MetadataFilterRuleRequest'
          nullable: true
        field:
          type: string
          nullable: true
          minLength: 1
        operator:
          allOf:
          - $ref: '#/components/schemas/LogicalOperator'
          nullable: true
        value:
          type: string
          nullable: true
          minLength: 1
    MetadataFilterRuleCombinator:
      enum:
      - and
      - or
      type: string
      description: |-
        * `and` - AND
        * `or` - OR
    MetadataFilterRuleRequest:
      type: object
      properties:
        combinator:
          allOf:
          - $ref: '#/components/schemas/MetadataFilterRuleCombinator'
          nullable: true
        negated:
          type: boolean
          nullable: true
        rules:
          type: array
          items:
            $ref: '#/components/schemas/MetadataFilterRuleRequest'
          nullable: true
        field:
          type: string
          nullable: true
          minLength: 1
        operator:
          allOf:
          - $ref: '#/components/schemas/LogicalOperator'
          nullable: true
        value:
          type: string
          nullable: true
          minLength: 1
    MetricEnum:
      type: string
      enum:
      - METRIC
    MetricNodeResult:
      type: object
      description: A Node Result Event emitted from a Metric Node.
      properties:
        type:
          $ref: '#/components/schemas/MetricEnum'
      required:
      - type
    NamedScenarioInputChatHistoryVariableValueRequest:
      type: object
      description: Named Prompt Sandbox Scenario input value that is of type CHAT_HISTORY
      properties:
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedScenarioInputRequest:
      oneOf:
      - $ref: '#/components/schemas/NamedScenarioInputStringVariableValueRequest'
      - $ref: '#/components/schemas/NamedScenarioInputChatHistoryVariableValueRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/NamedScenarioInputStringVariableValueRequest'
          CHAT_HISTORY: '#/components/schemas/NamedScenarioInputChatHistoryVariableValueRequest'
    NamedScenarioInputStringVariableValueRequest:
      type: object
      description: Named Prompt Sandbox Scenario input value that is of type STRING
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseArrayVariableValue:
      type: object
      description: Named Test Case value that is of type ARRAY
      properties:
        type:
          $ref: '#/components/schemas/ArrayEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVellumValueItem'
          nullable: true
        name:
          type: string
      required:
      - name
      - type
      - value
    NamedTestCaseArrayVariableValueRequest:
      type: object
      description: Named Test Case value that is of type ARRAY
      properties:
        type:
          $ref: '#/components/schemas/ArrayEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVellumValueItemRequest'
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseChatHistoryVariableValue:
      type: object
      description: Named Test Case value that is of type CHAT_HISTORY
      properties:
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
        name:
          type: string
      required:
      - name
      - type
      - value
    NamedTestCaseChatHistoryVariableValueRequest:
      type: object
      description: Named Test Case value that is of type CHAT_HISTORY
      properties:
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseErrorVariableValue:
      type: object
      description: Named Test Case value that is of type ERROR
      properties:
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
        name:
          type: string
      required:
      - name
      - type
      - value
    NamedTestCaseErrorVariableValueRequest:
      type: object
      description: Named Test Case value that is of type ERROR
      properties:
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumErrorRequest'
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseFunctionCallVariableValue:
      type: object
      description: Named Test Case value that is of type FUNCTION_CALL
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
        name:
          type: string
      required:
      - name
      - type
      - value
    NamedTestCaseFunctionCallVariableValueRequest:
      type: object
      description: Named Test Case value that is of type FUNCTION_CALL
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCallRequest'
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseJsonVariableValue:
      type: object
      description: Named Test Case value that is of type JSON
      properties:
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
        name:
          type: string
      required:
      - name
      - type
      - value
    NamedTestCaseJsonVariableValueRequest:
      type: object
      description: Named Test Case value that is of type JSON
      properties:
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseNumberVariableValue:
      type: object
      description: Named Test Case value that is of type NUMBER
      properties:
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
        name:
          type: string
      required:
      - name
      - type
      - value
    NamedTestCaseNumberVariableValueRequest:
      type: object
      description: Named Test Case value that is of type NUMBER
      properties:
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseSearchResultsVariableValue:
      type: object
      description: Named Test Case value that is of type SEARCH_RESULTS
      properties:
        type:
          $ref: '#/components/schemas/SearchResultsEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
        name:
          type: string
      required:
      - name
      - type
      - value
    NamedTestCaseSearchResultsVariableValueRequest:
      type: object
      description: Named Test Case value that is of type SEARCH_RESULTS
      properties:
        type:
          $ref: '#/components/schemas/SearchResultsEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultRequest'
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseStringVariableValue:
      type: object
      description: Named Test Case value that is of type STRING
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
        name:
          type: string
      required:
      - name
      - type
      - value
    NamedTestCaseStringVariableValueRequest:
      type: object
      description: Named Test Case value that is of type STRING
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
      - value
    NamedTestCaseVariableValue:
      oneOf:
      - $ref: '#/components/schemas/NamedTestCaseStringVariableValue'
      - $ref: '#/components/schemas/NamedTestCaseNumberVariableValue'
      - $ref: '#/components/schemas/NamedTestCaseJsonVariableValue'
      - $ref: '#/components/schemas/NamedTestCaseChatHistoryVariableValue'
      - $ref: '#/components/schemas/NamedTestCaseSearchResultsVariableValue'
      - $ref: '#/components/schemas/NamedTestCaseErrorVariableValue'
      - $ref: '#/components/schemas/NamedTestCaseFunctionCallVariableValue'
      - $ref: '#/components/schemas/NamedTestCaseArrayVariableValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/NamedTestCaseStringVariableValue'
          NUMBER: '#/components/schemas/NamedTestCaseNumberVariableValue'
          JSON: '#/components/schemas/NamedTestCaseJsonVariableValue'
          CHAT_HISTORY: '#/components/schemas/NamedTestCaseChatHistoryVariableValue'
          SEARCH_RESULTS: '#/components/schemas/NamedTestCaseSearchResultsVariableValue'
          ERROR: '#/components/schemas/NamedTestCaseErrorVariableValue'
          FUNCTION_CALL: '#/components/schemas/NamedTestCaseFunctionCallVariableValue'
          ARRAY: '#/components/schemas/NamedTestCaseArrayVariableValue'
    NamedTestCaseVariableValueRequest:
      oneOf:
      - $ref: '#/components/schemas/NamedTestCaseStringVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseNumberVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseJsonVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseChatHistoryVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseSearchResultsVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseErrorVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseFunctionCallVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseArrayVariableValueRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/NamedTestCaseStringVariableValueRequest'
          NUMBER: '#/components/schemas/NamedTestCaseNumberVariableValueRequest'
          JSON: '#/components/schemas/NamedTestCaseJsonVariableValueRequest'
          CHAT_HISTORY: '#/components/schemas/NamedTestCaseChatHistoryVariableValueRequest'
          SEARCH_RESULTS: '#/components/schemas/NamedTestCaseSearchResultsVariableValueRequest'
          ERROR: '#/components/schemas/NamedTestCaseErrorVariableValueRequest'
          FUNCTION_CALL: '#/components/schemas/NamedTestCaseFunctionCallVariableValueRequest'
          ARRAY: '#/components/schemas/NamedTestCaseArrayVariableValueRequest'
    NodeInputCompiledArrayValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVariableValueItem'
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledChatHistoryValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledErrorValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledFunctionCall:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledJsonValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledNumberValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledSearchResultsValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledStringValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputVariableCompiledValue:
      oneOf:
      - $ref: '#/components/schemas/NodeInputCompiledStringValue'
      - $ref: '#/components/schemas/NodeInputCompiledNumberValue'
      - $ref: '#/components/schemas/NodeInputCompiledJsonValue'
      - $ref: '#/components/schemas/NodeInputCompiledChatHistoryValue'
      - $ref: '#/components/schemas/NodeInputCompiledSearchResultsValue'
      - $ref: '#/components/schemas/NodeInputCompiledErrorValue'
      - $ref: '#/components/schemas/NodeInputCompiledArrayValue'
      - $ref: '#/components/schemas/NodeInputCompiledFunctionCall'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/NodeInputCompiledStringValue'
          NUMBER: '#/components/schemas/NodeInputCompiledNumberValue'
          JSON: '#/components/schemas/NodeInputCompiledJsonValue'
          CHAT_HISTORY: '#/components/schemas/NodeInputCompiledChatHistoryValue'
          SEARCH_RESULTS: '#/components/schemas/NodeInputCompiledSearchResultsValue'
          ERROR: '#/components/schemas/NodeInputCompiledErrorValue'
          ARRAY: '#/components/schemas/NodeInputCompiledArrayValue'
          FUNCTION_CALL: '#/components/schemas/NodeInputCompiledFunctionCall'
    NodeOutputCompiledArrayValue:
      type: object
      description: An output returned by a node that is of type ARRAY.
      properties:
        type:
          $ref: '#/components/schemas/ArrayEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVellumValueItem'
          nullable: true
        node_output_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
      required:
      - node_output_id
      - type
      - value
    NodeOutputCompiledChatHistoryValue:
      type: object
      description: An output returned by a node that is of type CHAT_HISTORY.
      properties:
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
        node_output_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
      required:
      - node_output_id
      - type
      - value
    NodeOutputCompiledErrorValue:
      type: object
      description: An output returned by a node that is of type ERROR.
      properties:
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
        node_output_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
      required:
      - node_output_id
      - type
      - value
    NodeOutputCompiledFunctionCallValue:
      type: object
      description: An output returned by a node that is of type FUNCTION_CALL.
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
        node_output_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
      required:
      - node_output_id
      - type
      - value
    NodeOutputCompiledJsonValue:
      type: object
      description: An output returned by a node that is of type JSON.
      properties:
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
        node_output_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
      required:
      - node_output_id
      - type
      - value
    NodeOutputCompiledNumberValue:
      type: object
      description: An output returned by a node that is of type NUMBER.
      properties:
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
        node_output_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
      required:
      - node_output_id
      - type
      - value
    NodeOutputCompiledSearchResultsValue:
      type: object
      description: An output returned by a node that is of type SEARCH_RESULTS.
      properties:
        type:
          $ref: '#/components/schemas/SearchResultsEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
        node_output_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
      required:
      - node_output_id
      - type
      - value
    NodeOutputCompiledStringValue:
      type: object
      description: An output returned by a node that is of type STRING.
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
        node_output_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
      required:
      - node_output_id
      - type
      - value
    NodeOutputCompiledValue:
      oneOf:
      - $ref: '#/components/schemas/NodeOutputCompiledStringValue'
      - $ref: '#/components/schemas/NodeOutputCompiledNumberValue'
      - $ref: '#/components/schemas/NodeOutputCompiledJsonValue'
      - $ref: '#/components/schemas/NodeOutputCompiledChatHistoryValue'
      - $ref: '#/components/schemas/NodeOutputCompiledSearchResultsValue'
      - $ref: '#/components/schemas/NodeOutputCompiledErrorValue'
      - $ref: '#/components/schemas/NodeOutputCompiledArrayValue'
      - $ref: '#/components/schemas/NodeOutputCompiledFunctionCallValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/NodeOutputCompiledStringValue'
          NUMBER: '#/components/schemas/NodeOutputCompiledNumberValue'
          JSON: '#/components/schemas/NodeOutputCompiledJsonValue'
          CHAT_HISTORY: '#/components/schemas/NodeOutputCompiledChatHistoryValue'
          SEARCH_RESULTS: '#/components/schemas/NodeOutputCompiledSearchResultsValue'
          ERROR: '#/components/schemas/NodeOutputCompiledErrorValue'
          ARRAY: '#/components/schemas/NodeOutputCompiledArrayValue'
          FUNCTION_CALL: '#/components/schemas/NodeOutputCompiledFunctionCallValue'
    NormalizedLogProbs:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/NormalizedTokenLogProbs'
        likelihood:
          type: number
          format: double
          nullable: true
      required:
      - likelihood
      - tokens
    NormalizedTokenLogProbs:
      type: object
      properties:
        token:
          type: string
        logprob:
          type: number
          format: double
          nullable: true
        top_logprobs:
          type: object
          additionalProperties:
            type: number
            format: double
          nullable: true
        text_offset:
          type: integer
      required:
      - logprob
      - text_offset
      - token
      - top_logprobs
    NumberEnum:
      type: string
      enum:
      - NUMBER
    NumberParameterConfig:
      type: object
      description: An OpenAPI specification of a parameter with type 'number'
      properties:
        type:
          $ref: '#/components/schemas/numberEnum'
        minimum:
          type: number
          format: double
          nullable: true
        maximum:
          type: number
          format: double
          nullable: true
        format:
          type: string
          nullable: true
        exclusive_minimum:
          type: boolean
          nullable: true
        exclusive_maximum:
          type: boolean
          nullable: true
        default:
          type: number
          format: double
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - type
    NumberParameterConfigRequest:
      type: object
      description: An OpenAPI specification of a parameter with type 'number'
      properties:
        type:
          $ref: '#/components/schemas/numberEnum'
        minimum:
          type: number
          format: double
          nullable: true
        maximum:
          type: number
          format: double
          nullable: true
        format:
          type: string
          nullable: true
          minLength: 1
        exclusive_minimum:
          type: boolean
          nullable: true
        exclusive_maximum:
          type: boolean
          nullable: true
        default:
          type: number
          format: double
          nullable: true
        title:
          type: string
          nullable: true
          minLength: 1
        description:
          type: string
          nullable: true
          minLength: 1
      required:
      - type
    NumberVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - type
      - value
    NumberVellumValue:
      type: object
      description: A value representing a number.
      properties:
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
      required:
      - type
      - value
    NumberVellumValueRequest:
      type: object
      description: A value representing a number.
      properties:
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
      required:
      - type
      - value
    ObjectParameterConfig:
      type: object
      description: An OpenAPI specification of a parameter with type 'object'
      properties:
        type:
          $ref: '#/components/schemas/objectEnum'
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParameterConfig'
          nullable: true
        required:
          type: array
          items:
            type: string
          nullable: true
        min_properties:
          type: integer
          nullable: true
        max_properties:
          type: integer
          nullable: true
        property_names:
          allOf:
          - $ref: '#/components/schemas/ParameterConfig'
          nullable: true
        additional_properties:
          allOf:
          - $ref: '#/components/schemas/ParameterConfig'
          nullable: true
        pattern_properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParameterConfig'
          nullable: true
        default:
          type: object
          additionalProperties: {}
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - type
    ObjectParameterConfigRequest:
      type: object
      description: An OpenAPI specification of a parameter with type 'object'
      properties:
        type:
          $ref: '#/components/schemas/objectEnum'
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParameterConfigRequest'
          nullable: true
        required:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
        min_properties:
          type: integer
          nullable: true
        max_properties:
          type: integer
          nullable: true
        property_names:
          allOf:
          - $ref: '#/components/schemas/ParameterConfigRequest'
          nullable: true
        additional_properties:
          allOf:
          - $ref: '#/components/schemas/ParameterConfigRequest'
          nullable: true
        pattern_properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ParameterConfigRequest'
          nullable: true
        default:
          type: object
          additionalProperties: {}
          nullable: true
        title:
          type: string
          nullable: true
          minLength: 1
        description:
          type: string
          nullable: true
          minLength: 1
      required:
      - type
    OneOfParameterConfig:
      type: object
      description: An OpenAPI specification of a parameter with type 'oneOf'
      properties:
        type:
          $ref: '#/components/schemas/oneofEnum'
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/ParameterConfig'
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - oneOf
      - type
    OneOfParameterConfigRequest:
      type: object
      description: An OpenAPI specification of a parameter with type 'oneOf'
      properties:
        type:
          $ref: '#/components/schemas/oneofEnum'
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/ParameterConfigRequest'
        title:
          type: string
          nullable: true
          minLength: 1
        description:
          type: string
          nullable: true
          minLength: 1
      required:
      - oneOf
      - type
    OpenAIVectorizerConfig:
      type: object
      description: Configuration for using an OpenAI vectorizer.
      properties:
        add_openai_api_key:
          allOf:
          - $ref: '#/components/schemas/AddOpenaiApiKeyEnum'
          default: true
    OpenAIVectorizerConfigRequest:
      type: object
      description: Configuration for using an OpenAI vectorizer.
      properties:
        add_openai_api_key:
          allOf:
          - $ref: '#/components/schemas/AddOpenaiApiKeyEnum'
          default: true
    OpenAIVectorizerTextEmbedding3Large:
      type: object
      description: OpenAI vectorizer for text-embedding-3-large.
      properties:
        config:
          $ref: '#/components/schemas/OpenAIVectorizerConfig'
        model_name:
          $ref: '#/components/schemas/text-embedding-3-largeEnum'
      required:
      - config
      - model_name
    OpenAIVectorizerTextEmbedding3LargeRequest:
      type: object
      description: OpenAI vectorizer for text-embedding-3-large.
      properties:
        config:
          $ref: '#/components/schemas/OpenAIVectorizerConfigRequest'
        model_name:
          $ref: '#/components/schemas/text-embedding-3-largeEnum'
      required:
      - config
      - model_name
    OpenAIVectorizerTextEmbedding3Small:
      type: object
      description: OpenAI vectorizer for text-embedding-3-small.
      properties:
        config:
          $ref: '#/components/schemas/OpenAIVectorizerConfig'
        model_name:
          $ref: '#/components/schemas/text-embedding-3-smallEnum'
      required:
      - config
      - model_name
    OpenAIVectorizerTextEmbedding3SmallRequest:
      type: object
      description: OpenAI vectorizer for text-embedding-3-small.
      properties:
        config:
          $ref: '#/components/schemas/OpenAIVectorizerConfigRequest'
        model_name:
          $ref: '#/components/schemas/text-embedding-3-smallEnum'
      required:
      - config
      - model_name
    OpenAIVectorizerTextEmbeddingAda002:
      type: object
      description: OpenAI vectorizer for text-embedding-ada-002.
      properties:
        config:
          $ref: '#/components/schemas/OpenAIVectorizerConfig'
        model_name:
          $ref: '#/components/schemas/text-embedding-ada-002Enum'
      required:
      - config
      - model_name
    OpenAIVectorizerTextEmbeddingAda002Request:
      type: object
      description: OpenAI vectorizer for text-embedding-ada-002.
      properties:
        config:
          $ref: '#/components/schemas/OpenAIVectorizerConfigRequest'
        model_name:
          $ref: '#/components/schemas/text-embedding-ada-002Enum'
      required:
      - config
      - model_name
    PaginatedDocumentIndexReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentIndexRead'
    PaginatedMLModelReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MLModelRead'
    PaginatedSlimDeploymentReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SlimDeploymentRead'
    PaginatedSlimDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SlimDocument'
    PaginatedSlimWorkflowDeploymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SlimWorkflowDeployment'
    PaginatedTestSuiteRunExecutionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRunExecution'
      required:
      - count
      - next
      - previous
      - results
    PaginatedTestSuiteTestCaseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestCase'
      required:
      - count
      - next
      - previous
      - results
    ParameterConfig:
      oneOf:
      - $ref: '#/components/schemas/ArrayParameterConfig'
      - $ref: '#/components/schemas/ObjectParameterConfig'
      - $ref: '#/components/schemas/IntegerParameterConfig'
      - $ref: '#/components/schemas/NumberParameterConfig'
      - $ref: '#/components/schemas/StringParameterConfig'
      - $ref: '#/components/schemas/BooleanParameterConfig'
      - $ref: '#/components/schemas/OneOfParameterConfig'
      - $ref: '#/components/schemas/ConstParameterConfig'
      discriminator:
        propertyName: type
        mapping:
          array: '#/components/schemas/ArrayParameterConfig'
          object: '#/components/schemas/ObjectParameterConfig'
          integer: '#/components/schemas/IntegerParameterConfig'
          number: '#/components/schemas/NumberParameterConfig'
          string: '#/components/schemas/StringParameterConfig'
          boolean: '#/components/schemas/BooleanParameterConfig'
          oneOf: '#/components/schemas/OneOfParameterConfig'
          const: '#/components/schemas/ConstParameterConfig'
    ParameterConfigRequest:
      oneOf:
      - $ref: '#/components/schemas/ArrayParameterConfigRequest'
      - $ref: '#/components/schemas/ObjectParameterConfigRequest'
      - $ref: '#/components/schemas/IntegerParameterConfigRequest'
      - $ref: '#/components/schemas/NumberParameterConfigRequest'
      - $ref: '#/components/schemas/StringParameterConfigRequest'
      - $ref: '#/components/schemas/BooleanParameterConfigRequest'
      - $ref: '#/components/schemas/OneOfParameterConfigRequest'
      - $ref: '#/components/schemas/ConstParameterConfigRequest'
      discriminator:
        propertyName: type
        mapping:
          array: '#/components/schemas/ArrayParameterConfigRequest'
          object: '#/components/schemas/ObjectParameterConfigRequest'
          integer: '#/components/schemas/IntegerParameterConfigRequest'
          number: '#/components/schemas/NumberParameterConfigRequest'
          string: '#/components/schemas/StringParameterConfigRequest'
          boolean: '#/components/schemas/BooleanParameterConfigRequest'
          oneOf: '#/components/schemas/OneOfParameterConfigRequest'
          const: '#/components/schemas/ConstParameterConfigRequest'
    PatchedDeploymentReleaseTagUpdateRequest:
      type: object
      properties:
        history_item_id:
          type: string
          format: uuid
          description: The ID of the Deployment History Item to tag
    PatchedDocumentIndexUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document index
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the document index

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this document index is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
    PatchedDocumentUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 1000
        status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          description: |-
            The current status of the document

            * `ACTIVE` - Active
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A JSON object containing any metadata associated with the document
            that you'd like to filter upon later.
    PatchedMLModelUpdateRequest:
      type: object
      description: Information about an existing ML Model that you'd like to update.
      properties:
        display_config:
          allOf:
          - $ref: '#/components/schemas/MLModelDisplayConfigRequest'
          description: Configuration for how to display the ML Model.
        visibility:
          allOf:
          - $ref: '#/components/schemas/VisibilityEnum'
          description: |-
            The visibility of the ML Model.

            * `DEFAULT` - DEFAULT
            * `PUBLIC` - PUBLIC
            * `PRIVATE` - PRIVATE
            * `DISABLED` - DISABLED
    PatchedWorkflowReleaseTagUpdateRequest:
      type: object
      properties:
        history_item_id:
          type: string
          format: uuid
          description: The ID of the Workflow Deployment History Item to tag
    PdfEnum:
      type: string
      enum:
      - PDF
    PdfSearchResultMetaSource:
      type: object
      description: The source of a search result from a PDF document.
      properties:
        document_type:
          $ref: '#/components/schemas/PdfEnum'
        start_page_num:
          type: integer
          nullable: true
          description: The 1-indexed page number where the chunk starts in the document.
            Only available for supported chunking strategies and document types.
        end_page_num:
          type: integer
          nullable: true
          description: The 1-indexed page number where the chunk ends in the document.
            Only available for supported chunking strategies and document types.
      required:
      - document_type
      - end_page_num
      - start_page_num
    PdfSearchResultMetaSourceRequest:
      type: object
      description: The source of a search result from a PDF document.
      properties:
        document_type:
          $ref: '#/components/schemas/PdfEnum'
        start_page_num:
          type: integer
          nullable: true
          description: The 1-indexed page number where the chunk starts in the document.
            Only available for supported chunking strategies and document types.
        end_page_num:
          type: integer
          nullable: true
          description: The 1-indexed page number where the chunk ends in the document.
            Only available for supported chunking strategies and document types.
      required:
      - document_type
      - end_page_num
      - start_page_num
    ProcessingFailureReasonEnum:
      enum:
      - EXCEEDED_CHARACTER_LIMIT
      - INVALID_FILE
      type: string
      description: |-
        * `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit
        * `INVALID_FILE` - Invalid File
    ProcessingStateEnum:
      enum:
      - QUEUED
      - PROCESSING
      - PROCESSED
      - FAILED
      type: string
      description: |-
        * `QUEUED` - Queued
        * `PROCESSING` - Processing
        * `PROCESSED` - Processed
        * `FAILED` - Failed
    PromptDeploymentExpandMetaRequestRequest:
      type: object
      properties:
        model_name:
          type: boolean
          nullable: true
          description: If enabled, the response will include the model identifier
            representing the ML Model invoked by the Prompt.
        usage:
          type: boolean
          nullable: true
          description: If enabled, the response will include model host usage tracking.
            This may increase latency for some model hosts.
        finish_reason:
          type: boolean
          nullable: true
          description: If enabled, the response will include the reason provided by
            the model for why the execution finished.
        latency:
          type: boolean
          nullable: true
          description: If enabled, the response will include the time in nanoseconds
            it took to execute the Prompt Deployment.
        deployment_release_tag:
          type: boolean
          nullable: true
          description: If enabled, the response will include the release tag of the
            Prompt Deployment.
        prompt_version_id:
          type: boolean
          nullable: true
          description: If enabled, the response will include the ID of the Prompt
            Version backing the deployment.
    PromptDeploymentInputRequest:
      oneOf:
      - $ref: '#/components/schemas/StringInputRequest'
      - $ref: '#/components/schemas/JSONInputRequest'
      - $ref: '#/components/schemas/ChatHistoryInputRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringInputRequest'
          JSON: '#/components/schemas/JSONInputRequest'
          CHAT_HISTORY: '#/components/schemas/ChatHistoryInputRequest'
    PromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        model_name:
          type: string
          nullable: true
        latency:
          type: integer
          nullable: true
        deployment_release_tag:
          type: string
          nullable: true
        prompt_version_id:
          type: string
          nullable: true
        finish_reason:
          allOf:
          - $ref: '#/components/schemas/FinishReasonEnum'
          nullable: true
        usage:
          allOf:
          - $ref: '#/components/schemas/MLModelUsage'
          nullable: true
    PromptNodeExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        usage:
          allOf:
          - $ref: '#/components/schemas/MLModelUsage'
          nullable: true
    PromptNodeResult:
      type: object
      description: A Node Result Event emitted from a Prompt Node.
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/PromptNodeResultData'
      required:
      - data
      - type
    PromptNodeResultData:
      type: object
      properties:
        execution_meta:
          allOf:
          - $ref: '#/components/schemas/PromptNodeExecutionMeta'
          nullable: true
        output_id:
          type: string
        array_output_id:
          type: string
          nullable: true
        execution_id:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        delta:
          type: string
          nullable: true
      required:
      - output_id
    PromptOutput:
      oneOf:
      - $ref: '#/components/schemas/StringVellumValue'
      - $ref: '#/components/schemas/JsonVellumValue'
      - $ref: '#/components/schemas/ErrorVellumValue'
      - $ref: '#/components/schemas/FunctionCallVellumValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringVellumValue'
          JSON: '#/components/schemas/JsonVellumValue'
          ERROR: '#/components/schemas/ErrorVellumValue'
          FUNCTION_CALL: '#/components/schemas/FunctionCallVellumValue'
    RawPromptExecutionOverridesRequest:
      type: object
      properties:
        body:
          type: object
          additionalProperties: {}
          nullable: true
        headers:
          type: object
          additionalProperties:
            type: string
            minLength: 1
          nullable: true
          description: The raw headers to send to the model host.
        url:
          type: string
          nullable: true
          minLength: 1
          description: The raw URL to send to the model host.
    ReductoChunkerConfig:
      type: object
      description: Configuration for Reducto chunking
      properties:
        character_limit:
          type: integer
          minimum: 0.0
          default: 1000
    ReductoChunkerConfigRequest:
      type: object
      description: Configuration for Reducto chunking
      properties:
        character_limit:
          type: integer
          minimum: 0.0
          default: 1000
    ReductoChunking:
      type: object
      description: Reducto chunking
      properties:
        chunker_name:
          $ref: '#/components/schemas/reducto-chunkerEnum'
        chunker_config:
          allOf:
          - $ref: '#/components/schemas/ReductoChunkerConfig'
          default:
            character_limit: 1000
      required:
      - chunker_name
    ReductoChunkingRequest:
      type: object
      description: Reducto chunking
      properties:
        chunker_name:
          $ref: '#/components/schemas/reducto-chunkerEnum'
        chunker_config:
          allOf:
          - $ref: '#/components/schemas/ReductoChunkerConfigRequest'
          default:
            character_limit: 1000
      required:
      - chunker_name
    RejectedEnum:
      type: string
      enum:
      - REJECTED
    RejectedExecutePromptEvent:
      type: object
      description: The final data returned indicating an error occurred during the
        stream.
      properties:
        state:
          $ref: '#/components/schemas/RejectedEnum'
        error:
          $ref: '#/components/schemas/VellumError'
        execution_id:
          type: string
        meta:
          $ref: '#/components/schemas/RejectedPromptExecutionMeta'
      required:
      - error
      - execution_id
      - state
    RejectedExecutePromptResponse:
      type: object
      description: The unsuccessful response from the model containing an error of
        what went wrong.
      properties:
        meta:
          $ref: '#/components/schemas/PromptExecutionMeta'
        raw:
          type: object
          additionalProperties: {}
          description: The subset of the raw response from the model that the request
            opted into with `expand_raw`.
        execution_id:
          type: string
          description: The ID of the execution.
        state:
          $ref: '#/components/schemas/RejectedEnum'
        error:
          $ref: '#/components/schemas/VellumError'
      required:
      - error
      - execution_id
      - state
    RejectedExecuteWorkflowWorkflowResultEvent:
      type: object
      description: The unsuccessful response from the Workflow execution containing
        an error specifying what went wrong.
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/RejectedEnum'
        ts:
          type: string
          format: date-time
        error:
          $ref: '#/components/schemas/WorkflowEventError'
      required:
      - error
      - id
      - state
      - ts
    RejectedPromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        latency:
          type: integer
          nullable: true
        finish_reason:
          allOf:
          - $ref: '#/components/schemas/FinishReasonEnum'
          nullable: true
    RejectedWorkflowNodeResultEvent:
      type: object
      description: An event that indicates that the node has rejected its execution.
      properties:
        id:
          type: string
        node_id:
          type: string
        node_result_id:
          type: string
        state:
          $ref: '#/components/schemas/RejectedEnum'
        ts:
          type: string
          format: date-time
          nullable: true
        data:
          allOf:
          - $ref: '#/components/schemas/WorkflowNodeResultData'
          nullable: true
        source_execution_id:
          type: string
          nullable: true
        error:
          $ref: '#/components/schemas/WorkflowEventError'
      required:
      - data
      - error
      - id
      - node_id
      - node_result_id
      - state
    ReleaseTagSource:
      enum:
      - SYSTEM
      - USER
      type: string
      description: |-
        * `SYSTEM` - System
        * `USER` - User
    ReplaceEnum:
      type: string
      enum:
      - REPLACE
    ReplaceTestSuiteTestCaseRequest:
      type: object
      description: Information about the Test Case to replace
      properties:
        id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of the Test Case whose data you'd like
            to replace. Must specify either this or external_id.
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: The ID that was originally provided upon Test Case creation
            that uniquely identifies the Test Case whose data you'd like to replace.
            Must specify either this of id.
        label:
          type: string
          nullable: true
          description: A human-readable label used to convey the intention of this
            Test Case
        input_values:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
          description: Values for each of the Test Case's input variables
        evaluation_values:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
          description: Values for each of the Test Case's evaluation variables
      required:
      - evaluation_values
      - input_values
    ReplacedEnum:
      type: string
      enum:
      - REPLACED
    SandboxScenario:
      type: object
      description: Sandbox Scenario
      properties:
        label:
          type: string
          default: Untitled Scenario
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioInput'
          description: The inputs for the scenario
        id:
          type: string
          description: The id of the scenario
      required:
      - id
      - inputs
    ScenarioInput:
      oneOf:
      - $ref: '#/components/schemas/ScenarioInputStringVariableValue'
      - $ref: '#/components/schemas/ScenarioInputChatHistoryVariableValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/ScenarioInputStringVariableValue'
          CHAT_HISTORY: '#/components/schemas/ScenarioInputChatHistoryVariableValue'
    ScenarioInputChatHistoryVariableValue:
      type: object
      description: Prompt Sandbox Scenario input value that is of type CHAT_HISTORY
      properties:
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
        input_variable_id:
          type: string
      required:
      - input_variable_id
      - type
      - value
    ScenarioInputStringVariableValue:
      type: object
      description: Prompt Sandbox Scenario input value that is of type STRING
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
        input_variable_id:
          type: string
      required:
      - input_variable_id
      - type
      - value
    SearchErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    SearchFiltersRequest:
      type: object
      properties:
        external_ids:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: The document external IDs to filter by
        metadata:
          allOf:
          - $ref: '#/components/schemas/MetadataFilterConfigRequest'
          nullable: true
          description: The metadata filters to apply to the search
    SearchNodeResult:
      type: object
      description: A Node Result Event emitted from a Search Node.
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/SearchNodeResultData'
      required:
      - data
      - type
    SearchNodeResultData:
      type: object
      properties:
        results_output_id:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          description: The results of the search. Each result represents a chunk that
            matches the search query.
        text_output_id:
          type: string
        text:
          type: string
          nullable: true
      required:
      - results
      - results_output_id
      - text_output_id
    SearchRequestBodyRequest:
      type: object
      properties:
        index_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the index to search against. Must provide either
            this or index_name.
        index_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the index to search against. Must provide either
            this or index_id.
        query:
          type: string
          minLength: 1
          description: The query to search for.
        options:
          allOf:
          - $ref: '#/components/schemas/SearchRequestOptionsRequest'
          nullable: true
          description: Configuration options for the search.
      required:
      - query
    SearchRequestOptionsRequest:
      type: object
      properties:
        limit:
          type: integer
          maximum: 1000
          minimum: 1
          nullable: true
          default: 10
          description: The maximum number of results to return.
        weights:
          allOf:
          - $ref: '#/components/schemas/SearchWeightsRequest'
          nullable: true
          description: The weights to use for the search. Must add up to 1.0.
        result_merging:
          allOf:
          - $ref: '#/components/schemas/SearchResultMergingRequest'
          nullable: true
          description: The configuration for merging results.
        filters:
          allOf:
          - $ref: '#/components/schemas/SearchFiltersRequest'
          nullable: true
          description: The filters to apply to the search.
    SearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          description: The results of the search. Each result represents a chunk that
            matches the search query.
      required:
      - results
    SearchResult:
      type: object
      properties:
        text:
          type: string
          description: The text of the chunk that matched the search query.
        score:
          type: number
          format: double
          description: A score representing how well the chunk matches the search
            query.
        keywords:
          type: array
          items:
            type: string
        document:
          allOf:
          - $ref: '#/components/schemas/SearchResultDocument'
          description: The document that contains the chunk that matched the search
            query.
        meta:
          allOf:
          - $ref: '#/components/schemas/SearchResultMeta'
          nullable: true
          description: Additional information about the search result.
      required:
      - document
      - keywords
      - score
      - text
    SearchResultDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the document.
        label:
          type: string
          description: The human-readable name for the document.
          maxLength: 1000
        external_id:
          type: string
          nullable: true
          description: The unique ID of the document as represented in an external
            system and specified when it was originally uploaded.
          maxLength: 1000
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A previously supplied JSON object containing metadata that
            can be filtered on when searching.
      required:
      - label
    SearchResultDocumentRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the document.
        label:
          type: string
          minLength: 1
          description: The human-readable name for the document.
          maxLength: 1000
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: The unique ID of the document as represented in an external
            system and specified when it was originally uploaded.
          maxLength: 1000
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A previously supplied JSON object containing metadata that
            can be filtered on when searching.
      required:
      - label
    SearchResultMergingRequest:
      type: object
      properties:
        enabled:
          type: boolean
          default: true
          description: Whether to enable merging results
    SearchResultMeta:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/SearchResultMetaSource'
          nullable: true
    SearchResultMetaRequest:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/SearchResultMetaSourceRequest'
          nullable: true
    SearchResultMetaSource:
      oneOf:
      - $ref: '#/components/schemas/PdfSearchResultMetaSource'
      discriminator:
        propertyName: document_type
        mapping:
          PDF: '#/components/schemas/PdfSearchResultMetaSource'
    SearchResultMetaSourceRequest:
      oneOf:
      - $ref: '#/components/schemas/PdfSearchResultMetaSourceRequest'
      discriminator:
        propertyName: document_type
        mapping:
          PDF: '#/components/schemas/PdfSearchResultMetaSourceRequest'
    SearchResultRequest:
      type: object
      properties:
        text:
          type: string
          minLength: 1
          description: The text of the chunk that matched the search query.
        score:
          type: number
          format: double
          description: A score representing how well the chunk matches the search
            query.
        keywords:
          type: array
          items:
            type: string
            minLength: 1
        document:
          allOf:
          - $ref: '#/components/schemas/SearchResultDocumentRequest'
          description: The document that contains the chunk that matched the search
            query.
        meta:
          allOf:
          - $ref: '#/components/schemas/SearchResultMetaRequest'
          nullable: true
          description: Additional information about the search result.
      required:
      - document
      - keywords
      - score
      - text
    SearchResultsEnum:
      type: string
      enum:
      - SEARCH_RESULTS
    SearchWeightsRequest:
      type: object
      properties:
        semantic_similarity:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.8
          description: The relative weight to give to semantic similarity
        keywords:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.2
          description: The relative weight to give to keywords
    SentenceChunkerConfig:
      type: object
      description: Configuration for sentence chunking
      properties:
        character_limit:
          type: integer
          minimum: 0.0
          default: 1000
        min_overlap_ratio:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.5
    SentenceChunkerConfigRequest:
      type: object
      description: Configuration for sentence chunking
      properties:
        character_limit:
          type: integer
          minimum: 0.0
          default: 1000
        min_overlap_ratio:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.5
    SentenceChunking:
      type: object
      description: Sentence chunking
      properties:
        chunker_name:
          $ref: '#/components/schemas/sentence-chunkerEnum'
        chunker_config:
          allOf:
          - $ref: '#/components/schemas/SentenceChunkerConfig'
          default:
            character_limit: 1000
            min_overlap_ratio: 0.5
      required:
      - chunker_name
    SentenceChunkingRequest:
      type: object
      description: Sentence chunking
      properties:
        chunker_name:
          $ref: '#/components/schemas/sentence-chunkerEnum'
        chunker_config:
          allOf:
          - $ref: '#/components/schemas/SentenceChunkerConfigRequest'
          default:
            character_limit: 1000
            min_overlap_ratio: 0.5
      required:
      - chunker_name
    SlimDeploymentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the deployment
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this deployment within its
            workspace
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the deployment

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this deployment is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        last_deployed_on:
          type: string
          format: date-time
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
        description:
          type: string
          nullable: true
          description: A human-readable description of the deployment
      required:
      - created
      - id
      - input_variables
      - label
      - last_deployed_on
      - name
    SlimDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Vellum-generated ID that uniquely identifies this document.
        external_id:
          type: string
          nullable: true
          description: The external ID that was originally provided when uploading
            the document.
          maxLength: 1000
        last_uploaded_at:
          type: string
          format: date-time
          description: A timestamp representing when this document was most recently
            uploaded.
        label:
          type: string
          description: Human-friendly name for this document.
          maxLength: 1000
        processing_state:
          allOf:
          - $ref: '#/components/schemas/ProcessingStateEnum'
          description: |-
            An enum value representing where this document is along its processing lifecycle. Note that this is different than its indexing lifecycle.

            * `QUEUED` - Queued
            * `PROCESSING` - Processing
            * `PROCESSED` - Processed
            * `FAILED` - Failed
        processing_failure_reason:
          allOf:
          - $ref: '#/components/schemas/ProcessingFailureReasonEnum'
          nullable: true
          description: |-
            An enum value representing why the document could not be processed. Is null unless processing_state is FAILED.

            * `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit
            * `INVALID_FILE` - Invalid File
        status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          description: |-
            The document's current status.

            * `ACTIVE` - Active
        keywords:
          type: array
          items:
            type: string
          description: A list of keywords associated with this document. Originally
            provided when uploading the document.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A previously supplied JSON object containing metadata that
            can be filtered on when searching.
        document_to_document_indexes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDocumentToDocumentIndex'
      required:
      - document_to_document_indexes
      - id
      - label
      - last_uploaded_at
    SlimWorkflowDeployment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: A name that uniquely identifies this workflow deployment within
            its workspace
          maxLength: 150
        label:
          type: string
          description: A human-readable label for the workflow deployment
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the workflow deployment

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this workflow deployment is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        created:
          type: string
          format: date-time
          readOnly: true
        last_deployed_on:
          type: string
          format: date-time
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
          description: The input variables this Workflow Deployment expects to receive
            values for when it is executed.
        output_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
          description: The output variables this Workflow Deployment will produce
            when it is executed.
        description:
          type: string
          nullable: true
          description: A human-readable description of the workflow deployment
      required:
      - created
      - id
      - input_variables
      - label
      - last_deployed_on
      - name
      - output_variables
    StreamingEnum:
      type: string
      enum:
      - STREAMING
    StreamingExecutePromptEvent:
      type: object
      description: The data returned for each delta during the prompt execution stream.
      properties:
        state:
          $ref: '#/components/schemas/StreamingEnum'
        output:
          $ref: '#/components/schemas/PromptOutput'
        output_index:
          type: integer
        execution_id:
          type: string
        meta:
          $ref: '#/components/schemas/StreamingPromptExecutionMeta'
        raw:
          type: object
          additionalProperties: {}
          description: The subset of the raw response from the model that the request
            opted into with `expand_raw`.
      required:
      - execution_id
      - output
      - output_index
      - state
    StreamingPromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        latency:
          type: integer
          nullable: true
    StreamingWorkflowNodeResultEvent:
      type: object
      description: An event that indicates that the node has execution is in progress.
      properties:
        id:
          type: string
        node_id:
          type: string
        node_result_id:
          type: string
        state:
          $ref: '#/components/schemas/StreamingEnum'
        ts:
          type: string
          format: date-time
          nullable: true
        data:
          allOf:
          - $ref: '#/components/schemas/WorkflowNodeResultData'
          nullable: true
        source_execution_id:
          type: string
          nullable: true
        output:
          allOf:
          - $ref: '#/components/schemas/NodeOutputCompiledValue'
          nullable: true
        output_index:
          type: integer
          nullable: true
      required:
      - data
      - id
      - node_id
      - node_result_id
      - state
    StringChatMessageContent:
      type: object
      description: A string value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
      required:
      - type
      - value
    StringChatMessageContentRequest:
      type: object
      description: A string value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
      required:
      - type
      - value
    StringEnum:
      type: string
      enum:
      - STRING
    StringInputRequest:
      type: object
      description: A user input representing a string value
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the deployment.
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
    StringParameterConfig:
      type: object
      description: An OpenAPI specification of a parameter with type 'string'
      properties:
        type:
          $ref: '#/components/schemas/stringEnum'
        min_length:
          type: integer
          nullable: true
        max_length:
          type: integer
          nullable: true
        pattern:
          type: string
          nullable: true
        format:
          type: string
          nullable: true
        default:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - type
    StringParameterConfigRequest:
      type: object
      description: An OpenAPI specification of a parameter with type 'string'
      properties:
        type:
          $ref: '#/components/schemas/stringEnum'
        min_length:
          type: integer
          nullable: true
        max_length:
          type: integer
          nullable: true
        pattern:
          type: string
          nullable: true
          minLength: 1
        format:
          type: string
          nullable: true
          minLength: 1
        default:
          type: string
          nullable: true
          minLength: 1
        title:
          type: string
          nullable: true
          minLength: 1
        description:
          type: string
          nullable: true
          minLength: 1
      required:
      - type
    StringVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - type
      - value
    StringVellumValue:
      type: object
      description: A value representing a string.
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
      required:
      - type
      - value
    StringVellumValueRequest:
      type: object
      description: A value representing a string.
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
      required:
      - type
      - value
    SubmitCompletionActualRequest:
      type: object
      properties:
        id:
          type: string
          nullable: true
          minLength: 1
          description: The Vellum-generated ID of a previously generated completion.
            Must provide either this or external_id.
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: The external ID that was originally provided when generating
            the completion that you'd now like to submit actuals for. Must provide
            either this or id.
        text:
          type: string
          nullable: true
          description: Text representing what the completion _should_ have been.
        quality:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: A number between 0 and 1 representing the quality of the completion.
            0 is the worst, 1 is the best.
        timestamp:
          type: string
          format: date-time
          nullable: true
          description: Optionally provide the timestamp representing when this feedback
            was collected. Used for reporting purposes.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: Optionally provide additional metadata about the feedback submission.
    SubmitCompletionActualsErrorResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    SubmitCompletionActualsRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the deployment. Must provide either this or deployment_name.
        deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the deployment. Must provide either this or deployment_id.
        actuals:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCompletionActualRequest'
          description: Feedback regarding the quality of previously generated completions
      required:
      - actuals
    SubmitWorkflowExecutionActualRequest:
      oneOf:
      - $ref: '#/components/schemas/WorkflowExecutionActualStringRequest'
      - $ref: '#/components/schemas/WorkflowExecutionActualJsonRequest'
      - $ref: '#/components/schemas/WorkflowExecutionActualChatHistoryRequest'
      discriminator:
        propertyName: output_type
        mapping:
          STRING: '#/components/schemas/WorkflowExecutionActualStringRequest'
          JSON: '#/components/schemas/WorkflowExecutionActualJsonRequest'
          CHAT_HISTORY: '#/components/schemas/WorkflowExecutionActualChatHistoryRequest'
    SubmitWorkflowExecutionActualsRequest:
      type: object
      properties:
        actuals:
          type: array
          items:
            $ref: '#/components/schemas/SubmitWorkflowExecutionActualRequest'
          description: Feedback regarding the quality of an output on a previously
            executed workflow.
        execution_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of a previously executed workflow.
            Must provide either this or external_id.
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: The external ID that was originally provided by when executing
            the workflow, if applicable, that you'd now like to submit actuals for.
            Must provide either this or execution_id.
      required:
      - actuals
    SubworkflowEnum:
      type: string
      enum:
      - SUBWORKFLOW
    SubworkflowNodeResult:
      type: object
      description: A Node Result Event emitted from a Subworkflow Node.
      properties:
        type:
          $ref: '#/components/schemas/SubworkflowEnum'
        data:
          $ref: '#/components/schemas/SubworkflowNodeResultData'
      required:
      - type
    SubworkflowNodeResultData:
      type: object
      properties:
        execution_id:
          type: string
          format: uuid
          nullable: true
    TemplatingNodeArrayResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVariableValueItem'
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeChatHistoryResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeErrorResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeFunctionCallResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeJsonResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeNumberResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeResult:
      type: object
      description: A Node Result Event emitted from a Templating Node.
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/TemplatingNodeResultData'
      required:
      - data
      - type
    TemplatingNodeResultData:
      type: object
      properties:
        output:
          $ref: '#/components/schemas/TemplatingNodeResultOutput'
      required:
      - output
    TemplatingNodeResultOutput:
      oneOf:
      - $ref: '#/components/schemas/TemplatingNodeStringResult'
      - $ref: '#/components/schemas/TemplatingNodeNumberResult'
      - $ref: '#/components/schemas/TemplatingNodeJsonResult'
      - $ref: '#/components/schemas/TemplatingNodeChatHistoryResult'
      - $ref: '#/components/schemas/TemplatingNodeSearchResultsResult'
      - $ref: '#/components/schemas/TemplatingNodeErrorResult'
      - $ref: '#/components/schemas/TemplatingNodeArrayResult'
      - $ref: '#/components/schemas/TemplatingNodeFunctionCallResult'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/TemplatingNodeStringResult'
          NUMBER: '#/components/schemas/TemplatingNodeNumberResult'
          JSON: '#/components/schemas/TemplatingNodeJsonResult'
          CHAT_HISTORY: '#/components/schemas/TemplatingNodeChatHistoryResult'
          SEARCH_RESULTS: '#/components/schemas/TemplatingNodeSearchResultsResult'
          ERROR: '#/components/schemas/TemplatingNodeErrorResult'
          ARRAY: '#/components/schemas/TemplatingNodeArrayResult'
          FUNCTION_CALL: '#/components/schemas/TemplatingNodeFunctionCallResult'
    TemplatingNodeSearchResultsResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeStringResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - id
      - type
      - value
    TerminalNodeArrayResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVariableValueItem'
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeChatHistoryResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeErrorResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeFunctionCallResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeJsonResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeNumberResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeResult:
      type: object
      description: A Node Result Event emitted from a Terminal Node.
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/TerminalNodeResultData'
      required:
      - data
      - type
    TerminalNodeResultData:
      type: object
      properties:
        output:
          $ref: '#/components/schemas/TerminalNodeResultOutput'
      required:
      - output
    TerminalNodeResultOutput:
      oneOf:
      - $ref: '#/components/schemas/TerminalNodeStringResult'
      - $ref: '#/components/schemas/TerminalNodeNumberResult'
      - $ref: '#/components/schemas/TerminalNodeJsonResult'
      - $ref: '#/components/schemas/TerminalNodeChatHistoryResult'
      - $ref: '#/components/schemas/TerminalNodeSearchResultsResult'
      - $ref: '#/components/schemas/TerminalNodeArrayResult'
      - $ref: '#/components/schemas/TerminalNodeFunctionCallResult'
      - $ref: '#/components/schemas/TerminalNodeErrorResult'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/TerminalNodeStringResult'
          NUMBER: '#/components/schemas/TerminalNodeNumberResult'
          JSON: '#/components/schemas/TerminalNodeJsonResult'
          CHAT_HISTORY: '#/components/schemas/TerminalNodeChatHistoryResult'
          SEARCH_RESULTS: '#/components/schemas/TerminalNodeSearchResultsResult'
          ARRAY: '#/components/schemas/TerminalNodeArrayResult'
          FUNCTION_CALL: '#/components/schemas/TerminalNodeFunctionCallResult'
          ERROR: '#/components/schemas/TerminalNodeErrorResult'
    TerminalNodeSearchResultsResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeStringResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - name
      - type
      - value
    TestCaseArrayVariableValue:
      type: object
      description: An Array value for a variable in a Test Case.
      properties:
        variable_id:
          type: string
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/ArrayEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVellumValueItem'
          nullable: true
      required:
      - name
      - type
      - value
      - variable_id
    TestCaseChatHistoryVariableValue:
      type: object
      description: A chat history value for a variable in a Test Case.
      properties:
        variable_id:
          type: string
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - name
      - type
      - value
      - variable_id
    TestCaseErrorVariableValue:
      type: object
      description: An error value for a variable in a Test Case.
      properties:
        variable_id:
          type: string
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - name
      - type
      - value
      - variable_id
    TestCaseFunctionCallVariableValue:
      type: object
      description: A function call value for a variable in a Test Case.
      properties:
        variable_id:
          type: string
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - name
      - type
      - value
      - variable_id
    TestCaseJsonVariableValue:
      type: object
      description: A JSON value for a variable in a Test Case.
      properties:
        variable_id:
          type: string
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
      required:
      - name
      - type
      - value
      - variable_id
    TestCaseNumberVariableValue:
      type: object
      description: A numerical value for a variable in a Test Case.
      properties:
        variable_id:
          type: string
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
      required:
      - name
      - type
      - value
      - variable_id
    TestCaseSearchResultsVariableValue:
      type: object
      description: A search results value for a variable in a Test Case.
      properties:
        variable_id:
          type: string
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/SearchResultsEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - name
      - type
      - value
      - variable_id
    TestCaseStringVariableValue:
      type: object
      description: A string value for a variable in a Test Case.
      properties:
        variable_id:
          type: string
        name:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
      required:
      - name
      - type
      - value
      - variable_id
    TestCaseVariableValue:
      oneOf:
      - $ref: '#/components/schemas/TestCaseStringVariableValue'
      - $ref: '#/components/schemas/TestCaseNumberVariableValue'
      - $ref: '#/components/schemas/TestCaseJsonVariableValue'
      - $ref: '#/components/schemas/TestCaseChatHistoryVariableValue'
      - $ref: '#/components/schemas/TestCaseSearchResultsVariableValue'
      - $ref: '#/components/schemas/TestCaseErrorVariableValue'
      - $ref: '#/components/schemas/TestCaseFunctionCallVariableValue'
      - $ref: '#/components/schemas/TestCaseArrayVariableValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/TestCaseStringVariableValue'
          NUMBER: '#/components/schemas/TestCaseNumberVariableValue'
          JSON: '#/components/schemas/TestCaseJsonVariableValue'
          CHAT_HISTORY: '#/components/schemas/TestCaseChatHistoryVariableValue'
          SEARCH_RESULTS: '#/components/schemas/TestCaseSearchResultsVariableValue'
          ERROR: '#/components/schemas/TestCaseErrorVariableValue'
          FUNCTION_CALL: '#/components/schemas/TestCaseFunctionCallVariableValue'
          ARRAY: '#/components/schemas/TestCaseArrayVariableValue'
    TestSuiteRunCreateRequest:
      type: object
      properties:
        test_suite_id:
          type: string
          format: uuid
          description: The ID of the Test Suite to run
        exec_config:
          allOf:
          - $ref: '#/components/schemas/TestSuiteRunExecConfigRequest'
          description: Configuration that defines how the Test Suite should be run
      required:
      - exec_config
      - test_suite_id
    TestSuiteRunDeploymentReleaseTagExecConfig:
      type: object
      description: Execution configuration for running a Test Suite against a Prompt
        Deployment
      properties:
        data:
          $ref: '#/components/schemas/TestSuiteRunDeploymentReleaseTagExecConfigData'
        test_case_ids:
          type: array
          items:
            type: string
          nullable: true
          description: Optionally specify a subset of test case ids to run. If not
            provided, all test cases within the test suite will be run by default.
        type:
          $ref: '#/components/schemas/TestSuiteRunDeploymentReleaseTagExecConfigTypeEnum'
      required:
      - data
    TestSuiteRunDeploymentReleaseTagExecConfigData:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          description: The ID of the Prompt Deployment to run the Test Suite against.
        tag:
          type: string
          default: LATEST
          description: A tag identifying which release of the Prompt Deployment to
            run the Test Suite against. Useful for testing past versions of the Prompt
            Deployment
      required:
      - deployment_id
    TestSuiteRunDeploymentReleaseTagExecConfigDataRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          description: The ID of the Prompt Deployment to run the Test Suite against.
        tag:
          type: string
          minLength: 1
          default: LATEST
          description: A tag identifying which release of the Prompt Deployment to
            run the Test Suite against. Useful for testing past versions of the Prompt
            Deployment
      required:
      - deployment_id
    TestSuiteRunDeploymentReleaseTagExecConfigRequest:
      type: object
      description: Execution configuration for running a Test Suite against a Prompt
        Deployment
      properties:
        data:
          $ref: '#/components/schemas/TestSuiteRunDeploymentReleaseTagExecConfigDataRequest'
        test_case_ids:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally specify a subset of test case ids to run. If not
            provided, all test cases within the test suite will be run by default.
        type:
          $ref: '#/components/schemas/TestSuiteRunDeploymentReleaseTagExecConfigTypeEnum'
      required:
      - data
    TestSuiteRunDeploymentReleaseTagExecConfigTypeEnum:
      enum:
      - DEPLOYMENT_RELEASE_TAG
      type: string
      description: '* `DEPLOYMENT_RELEASE_TAG` - DEPLOYMENT_RELEASE_TAG'
    TestSuiteRunExecConfig:
      oneOf:
      - $ref: '#/components/schemas/TestSuiteRunDeploymentReleaseTagExecConfig'
      - $ref: '#/components/schemas/TestSuiteRunWorkflowReleaseTagExecConfig'
      - $ref: '#/components/schemas/TestSuiteRunExternalExecConfig'
      discriminator:
        propertyName: type
        mapping:
          DEPLOYMENT_RELEASE_TAG: '#/components/schemas/TestSuiteRunDeploymentReleaseTagExecConfig'
          WORKFLOW_RELEASE_TAG: '#/components/schemas/TestSuiteRunWorkflowReleaseTagExecConfig'
          EXTERNAL: '#/components/schemas/TestSuiteRunExternalExecConfig'
    TestSuiteRunExecConfigRequest:
      oneOf:
      - $ref: '#/components/schemas/TestSuiteRunDeploymentReleaseTagExecConfigRequest'
      - $ref: '#/components/schemas/TestSuiteRunWorkflowReleaseTagExecConfigRequest'
      - $ref: '#/components/schemas/TestSuiteRunExternalExecConfigRequest'
      discriminator:
        propertyName: type
        mapping:
          DEPLOYMENT_RELEASE_TAG: '#/components/schemas/TestSuiteRunDeploymentReleaseTagExecConfigRequest'
          WORKFLOW_RELEASE_TAG: '#/components/schemas/TestSuiteRunWorkflowReleaseTagExecConfigRequest'
          EXTERNAL: '#/components/schemas/TestSuiteRunExternalExecConfigRequest'
    TestSuiteRunExecution:
      type: object
      properties:
        id:
          type: string
          format: uuid
        test_case_id:
          type: string
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRunExecutionOutput'
        metric_results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRunExecutionMetricResult'
      required:
      - id
      - metric_results
      - outputs
      - test_case_id
    TestSuiteRunExecutionArrayOutput:
      type: object
      description: Execution output of an entity evaluated during a Test Suite Run
        that is of type ARRAY
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/ArrayEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVellumValueItem'
          nullable: true
        output_variable_id:
          type: string
          format: uuid
      required:
      - name
      - output_variable_id
      - type
      - value
    TestSuiteRunExecutionChatHistoryOutput:
      type: object
      description: Execution output of an entity evaluated during a Test Suite Run
        that is of type CHAT_HISTORY
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
        output_variable_id:
          type: string
          format: uuid
      required:
      - name
      - output_variable_id
      - type
      - value
    TestSuiteRunExecutionErrorOutput:
      type: object
      description: Execution output of an entity evaluated during a Test Suite Run
        that is of type ERROR
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
        output_variable_id:
          type: string
          format: uuid
      required:
      - name
      - output_variable_id
      - type
      - value
    TestSuiteRunExecutionFunctionCallOutput:
      type: object
      description: Execution output of an entity evaluated during a Test Suite Run
        that is of type FUNCTION_CALL
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
        output_variable_id:
          type: string
          format: uuid
      required:
      - name
      - output_variable_id
      - type
      - value
    TestSuiteRunExecutionJsonOutput:
      type: object
      description: Execution output of an entity evaluated during a Test Suite Run
        that is of type JSON
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
        output_variable_id:
          type: string
          format: uuid
      required:
      - name
      - output_variable_id
      - type
      - value
    TestSuiteRunExecutionMetricDefinition:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        name:
          type: string
    TestSuiteRunExecutionMetricResult:
      type: object
      properties:
        metric_id:
          type: string
          format: uuid
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRunMetricOutput'
        metric_label:
          type: string
        metric_definition:
          $ref: '#/components/schemas/TestSuiteRunExecutionMetricDefinition'
      required:
      - metric_id
      - outputs
    TestSuiteRunExecutionNumberOutput:
      type: object
      description: Execution output of an entity evaluated during a Test Suite Run
        that is of type NUMBER
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
        output_variable_id:
          type: string
          format: uuid
      required:
      - name
      - output_variable_id
      - type
      - value
    TestSuiteRunExecutionOutput:
      oneOf:
      - $ref: '#/components/schemas/TestSuiteRunExecutionStringOutput'
      - $ref: '#/components/schemas/TestSuiteRunExecutionNumberOutput'
      - $ref: '#/components/schemas/TestSuiteRunExecutionJsonOutput'
      - $ref: '#/components/schemas/TestSuiteRunExecutionChatHistoryOutput'
      - $ref: '#/components/schemas/TestSuiteRunExecutionSearchResultsOutput'
      - $ref: '#/components/schemas/TestSuiteRunExecutionErrorOutput'
      - $ref: '#/components/schemas/TestSuiteRunExecutionFunctionCallOutput'
      - $ref: '#/components/schemas/TestSuiteRunExecutionArrayOutput'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/TestSuiteRunExecutionStringOutput'
          NUMBER: '#/components/schemas/TestSuiteRunExecutionNumberOutput'
          JSON: '#/components/schemas/TestSuiteRunExecutionJsonOutput'
          CHAT_HISTORY: '#/components/schemas/TestSuiteRunExecutionChatHistoryOutput'
          SEARCH_RESULTS: '#/components/schemas/TestSuiteRunExecutionSearchResultsOutput'
          ERROR: '#/components/schemas/TestSuiteRunExecutionErrorOutput'
          FUNCTION_CALL: '#/components/schemas/TestSuiteRunExecutionFunctionCallOutput'
          ARRAY: '#/components/schemas/TestSuiteRunExecutionArrayOutput'
    TestSuiteRunExecutionSearchResultsOutput:
      type: object
      description: Execution output of an entity evaluated during a Test Suite Run
        that is of type SEARCH_RESULTS
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/SearchResultsEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
        output_variable_id:
          type: string
          format: uuid
      required:
      - name
      - output_variable_id
      - type
      - value
    TestSuiteRunExecutionStringOutput:
      type: object
      description: Execution output of an entity evaluated during a Test Suite Run
        that is of type STRING
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
        output_variable_id:
          type: string
          format: uuid
      required:
      - name
      - output_variable_id
      - type
      - value
    TestSuiteRunExternalExecConfig:
      type: object
      description: Execution configuration for running a Vellum Test Suite against
        an external callable
      properties:
        data:
          $ref: '#/components/schemas/TestSuiteRunExternalExecConfigData'
        test_case_ids:
          type: array
          items:
            type: string
          nullable: true
          description: Optionally specify a subset of test case ids to run. If not
            provided, all test cases within the test suite will be run by default.
        type:
          $ref: '#/components/schemas/TestSuiteRunExternalExecConfigTypeEnum'
      required:
      - data
    TestSuiteRunExternalExecConfigData:
      type: object
      properties:
        executions:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTestCaseExecution'
          description: The executions of some callable external to Vellum whose outputs
            you would like to evaluate.
      required:
      - executions
    TestSuiteRunExternalExecConfigDataRequest:
      type: object
      properties:
        executions:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTestCaseExecutionRequest'
          description: The executions of some callable external to Vellum whose outputs
            you would like to evaluate.
      required:
      - executions
    TestSuiteRunExternalExecConfigRequest:
      type: object
      description: Execution configuration for running a Vellum Test Suite against
        an external callable
      properties:
        data:
          $ref: '#/components/schemas/TestSuiteRunExternalExecConfigDataRequest'
        test_case_ids:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally specify a subset of test case ids to run. If not
            provided, all test cases within the test suite will be run by default.
        type:
          $ref: '#/components/schemas/TestSuiteRunExternalExecConfigTypeEnum'
      required:
      - data
    TestSuiteRunExternalExecConfigTypeEnum:
      enum:
      - EXTERNAL
      type: string
      description: '* `EXTERNAL` - EXTERNAL'
    TestSuiteRunMetricErrorOutput:
      type: object
      description: Output for a test suite run metric that is of type ERROR
      properties:
        value:
          $ref: '#/components/schemas/VellumError'
        type:
          $ref: '#/components/schemas/TestSuiteRunMetricErrorOutputTypeEnum'
        name:
          type: string
      required:
      - name
      - value
    TestSuiteRunMetricErrorOutputTypeEnum:
      enum:
      - ERROR
      type: string
      description: '* `ERROR` - ERROR'
    TestSuiteRunMetricNumberOutput:
      type: object
      description: Output for a test suite run metric that is of type NUMBER
      properties:
        value:
          type: number
          format: double
          nullable: true
        type:
          $ref: '#/components/schemas/TestSuiteRunMetricNumberOutputTypeEnum'
        name:
          type: string
      required:
      - name
      - value
    TestSuiteRunMetricNumberOutputTypeEnum:
      enum:
      - NUMBER
      type: string
      description: '* `NUMBER` - NUMBER'
    TestSuiteRunMetricOutput:
      oneOf:
      - $ref: '#/components/schemas/TestSuiteRunMetricStringOutput'
      - $ref: '#/components/schemas/TestSuiteRunMetricNumberOutput'
      - $ref: '#/components/schemas/TestSuiteRunMetricErrorOutput'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/TestSuiteRunMetricStringOutput'
          NUMBER: '#/components/schemas/TestSuiteRunMetricNumberOutput'
          ERROR: '#/components/schemas/TestSuiteRunMetricErrorOutput'
    TestSuiteRunMetricStringOutput:
      type: object
      description: Output for a test suite run metric that is of type STRING
      properties:
        value:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/TestSuiteRunMetricStringOutputTypeEnum'
        name:
          type: string
      required:
      - name
      - value
    TestSuiteRunMetricStringOutputTypeEnum:
      enum:
      - STRING
      type: string
      description: '* `STRING` - STRING'
    TestSuiteRunRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        test_suite:
          $ref: '#/components/schemas/TestSuiteRunTestSuite'
        state:
          allOf:
          - $ref: '#/components/schemas/TestSuiteRunState'
          description: |-
            The current state of this run

            * `QUEUED` - Queued
            * `RUNNING` - Running
            * `COMPLETE` - Complete
            * `FAILED` - Failed
            * `CANCELLED` - Cancelled
        exec_config:
          allOf:
          - $ref: '#/components/schemas/TestSuiteRunExecConfig'
          nullable: true
          description: Configuration that defines how the Test Suite should be run
      required:
      - created
      - id
      - state
      - test_suite
    TestSuiteRunState:
      enum:
      - QUEUED
      - RUNNING
      - COMPLETE
      - FAILED
      - CANCELLED
      type: string
      description: |-
        * `QUEUED` - Queued
        * `RUNNING` - Running
        * `COMPLETE` - Complete
        * `FAILED` - Failed
        * `CANCELLED` - Cancelled
    TestSuiteRunTestSuite:
      type: object
      properties:
        id:
          type: string
          format: uuid
        history_item_id:
          type: string
          format: uuid
        label:
          type: string
      required:
      - history_item_id
      - id
      - label
    TestSuiteRunWorkflowReleaseTagExecConfig:
      type: object
      description: Execution configuration for running a Test Suite against a Workflow
        Deployment
      properties:
        data:
          $ref: '#/components/schemas/TestSuiteRunWorkflowReleaseTagExecConfigData'
        test_case_ids:
          type: array
          items:
            type: string
          nullable: true
          description: Optionally specify a subset of test case ids to run. If not
            provided, all test cases within the test suite will be run by default.
        type:
          $ref: '#/components/schemas/TestSuiteRunWorkflowReleaseTagExecConfigTypeEnum'
      required:
      - data
    TestSuiteRunWorkflowReleaseTagExecConfigData:
      type: object
      properties:
        workflow_deployment_id:
          type: string
          format: uuid
          description: The ID of the Workflow Deployment to run the Test Suite against.
        tag:
          type: string
          default: LATEST
          description: A tag identifying which release of the Workflow Deployment
            to run the Test Suite against. Useful for testing past versions of the
            Workflow Deployment
      required:
      - workflow_deployment_id
    TestSuiteRunWorkflowReleaseTagExecConfigDataRequest:
      type: object
      properties:
        workflow_deployment_id:
          type: string
          format: uuid
          description: The ID of the Workflow Deployment to run the Test Suite against.
        tag:
          type: string
          minLength: 1
          default: LATEST
          description: A tag identifying which release of the Workflow Deployment
            to run the Test Suite against. Useful for testing past versions of the
            Workflow Deployment
      required:
      - workflow_deployment_id
    TestSuiteRunWorkflowReleaseTagExecConfigRequest:
      type: object
      description: Execution configuration for running a Test Suite against a Workflow
        Deployment
      properties:
        data:
          $ref: '#/components/schemas/TestSuiteRunWorkflowReleaseTagExecConfigDataRequest'
        test_case_ids:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally specify a subset of test case ids to run. If not
            provided, all test cases within the test suite will be run by default.
        type:
          $ref: '#/components/schemas/TestSuiteRunWorkflowReleaseTagExecConfigTypeEnum'
      required:
      - data
    TestSuiteRunWorkflowReleaseTagExecConfigTypeEnum:
      enum:
      - WORKFLOW_RELEASE_TAG
      type: string
      description: '* `WORKFLOW_RELEASE_TAG` - WORKFLOW_RELEASE_TAG'
    TestSuiteTestCase:
      type: object
      properties:
        id:
          type: string
        external_id:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        input_values:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseVariableValue'
        evaluation_values:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseVariableValue'
      required:
      - evaluation_values
      - input_values
    TestSuiteTestCaseBulkOperationRequest:
      oneOf:
      - $ref: '#/components/schemas/TestSuiteTestCaseCreateBulkOperationRequest'
      - $ref: '#/components/schemas/TestSuiteTestCaseReplaceBulkOperationRequest'
      - $ref: '#/components/schemas/TestSuiteTestCaseUpsertBulkOperationRequest'
      - $ref: '#/components/schemas/TestSuiteTestCaseDeleteBulkOperationRequest'
      discriminator:
        propertyName: type
        mapping:
          CREATE: '#/components/schemas/TestSuiteTestCaseCreateBulkOperationRequest'
          REPLACE: '#/components/schemas/TestSuiteTestCaseReplaceBulkOperationRequest'
          UPSERT: '#/components/schemas/TestSuiteTestCaseUpsertBulkOperationRequest'
          DELETE: '#/components/schemas/TestSuiteTestCaseDeleteBulkOperationRequest'
    TestSuiteTestCaseBulkResult:
      oneOf:
      - $ref: '#/components/schemas/TestSuiteTestCaseCreatedBulkResult'
      - $ref: '#/components/schemas/TestSuiteTestCaseReplacedBulkResult'
      - $ref: '#/components/schemas/TestSuiteTestCaseDeletedBulkResult'
      - $ref: '#/components/schemas/TestSuiteTestCaseRejectedBulkResult'
      discriminator:
        propertyName: type
        mapping:
          CREATED: '#/components/schemas/TestSuiteTestCaseCreatedBulkResult'
          REPLACED: '#/components/schemas/TestSuiteTestCaseReplacedBulkResult'
          DELETED: '#/components/schemas/TestSuiteTestCaseDeletedBulkResult'
          REJECTED: '#/components/schemas/TestSuiteTestCaseRejectedBulkResult'
    TestSuiteTestCaseCreateBulkOperationRequest:
      type: object
      description: A bulk operation that represents the creation of a Test Case.
      properties:
        id:
          type: string
          format: uuid
          description: An ID representing this specific operation. Can later be used
            to look up information about the operation's success in the response.
        type:
          $ref: '#/components/schemas/CreateEnum'
        data:
          $ref: '#/components/schemas/CreateTestSuiteTestCaseRequest'
      required:
      - data
      - id
      - type
    TestSuiteTestCaseCreatedBulkResult:
      type: object
      description: The result of a bulk operation that created a Test Case.
      properties:
        id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/CreatedEnum'
        data:
          $ref: '#/components/schemas/TestSuiteTestCaseCreatedBulkResultData'
      required:
      - data
      - id
      - type
    TestSuiteTestCaseCreatedBulkResultData:
      type: object
      description: Information about the Test Case that was created.
      properties:
        id:
          type: string
      required:
      - id
    TestSuiteTestCaseDeleteBulkOperationDataRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
      required:
      - id
    TestSuiteTestCaseDeleteBulkOperationRequest:
      type: object
      description: A bulk operation that represents the deletion of a Test Case.
      properties:
        id:
          type: string
          format: uuid
          description: An ID representing this specific operation. Can later be used
            to look up information about the operation's success in the response.
        type:
          $ref: '#/components/schemas/DeleteEnum'
        data:
          allOf:
          - $ref: '#/components/schemas/TestSuiteTestCaseDeleteBulkOperationDataRequest'
          description: Information about the Test Case to delete
      required:
      - data
      - id
      - type
    TestSuiteTestCaseDeletedBulkResult:
      type: object
      description: The result of a bulk operation that deleted a Test Case.
      properties:
        id:
          type: string
          format: uuid
          description: An ID that maps back to one of the initially supplied operations.
            Can be used to determine the result of a given operation.
        type:
          $ref: '#/components/schemas/DeletedEnum'
        data:
          $ref: '#/components/schemas/TestSuiteTestCaseDeletedBulkResultData'
      required:
      - data
      - id
      - type
    TestSuiteTestCaseDeletedBulkResultData:
      type: object
      description: Information about the Test Case that was deleted
      properties:
        id:
          type: string
      required:
      - id
    TestSuiteTestCaseRejectedBulkResult:
      type: object
      description: The result of a bulk operation that failed to operate on a Test
        Case.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
          description: An ID that maps back to one of the initially supplied operations.
            Can be used to determine the result of a given operation.
        type:
          $ref: '#/components/schemas/RejectedEnum'
        data:
          type: object
          additionalProperties: {}
          description: Details about the error that occurred
      required:
      - data
      - type
    TestSuiteTestCaseReplaceBulkOperationRequest:
      type: object
      description: A bulk operation that represents the replacing of a Test Case.
      properties:
        id:
          type: string
          format: uuid
          description: An ID representing this specific operation. Can later be used
            to look up information about the operation's success in the response.
        type:
          $ref: '#/components/schemas/ReplaceEnum'
        data:
          $ref: '#/components/schemas/ReplaceTestSuiteTestCaseRequest'
      required:
      - data
      - id
      - type
    TestSuiteTestCaseReplacedBulkResult:
      type: object
      description: The result of a bulk operation that replaced a Test Case.
      properties:
        id:
          type: string
          format: uuid
          description: An ID that maps back to one of the initially supplied operations.
            Can be used to determine the result of a given operation.
        type:
          $ref: '#/components/schemas/ReplacedEnum'
        data:
          $ref: '#/components/schemas/TestSuiteTestCaseReplacedBulkResultData'
      required:
      - data
      - id
      - type
    TestSuiteTestCaseReplacedBulkResultData:
      type: object
      description: Information about the Test Case that was replaced
      properties:
        id:
          type: string
      required:
      - id
    TestSuiteTestCaseUpsertBulkOperationRequest:
      type: object
      description: A bulk operation that represents the upserting of a Test Case.
      properties:
        id:
          type: string
          format: uuid
          description: An ID representing this specific operation. Can later be used
            to look up information about the operation's success in the response.
        type:
          $ref: '#/components/schemas/UpsertEnum'
        data:
          $ref: '#/components/schemas/UpsertTestSuiteTestCaseRequest'
      required:
      - data
      - id
      - type
    TikTokenTokenizerConfig:
      type: object
      description: Tokenizer config for OpenAI's TikToken type tokenizers.
      properties:
        type:
          $ref: '#/components/schemas/TiktokenEnum'
        name:
          type: string
      required:
      - name
      - type
    TikTokenTokenizerConfigRequest:
      type: object
      description: Tokenizer config for OpenAI's TikToken type tokenizers.
      properties:
        type:
          $ref: '#/components/schemas/TiktokenEnum'
        name:
          type: string
          minLength: 1
      required:
      - name
      - type
    TiktokenEnum:
      type: string
      enum:
      - TIKTOKEN
    TokenOverlappingWindowChunkerConfig:
      type: object
      description: Configuration for token overlapping window chunking
      properties:
        token_limit:
          type: integer
          minimum: 0.0
          default: 250
        overlap_ratio:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.5
    TokenOverlappingWindowChunkerConfigRequest:
      type: object
      description: Configuration for token overlapping window chunking
      properties:
        token_limit:
          type: integer
          minimum: 0.0
          default: 250
        overlap_ratio:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.5
    TokenOverlappingWindowChunking:
      type: object
      description: Token overlapping window chunking
      properties:
        chunker_name:
          $ref: '#/components/schemas/token-overlapping-window-chunkerEnum'
        chunker_config:
          allOf:
          - $ref: '#/components/schemas/TokenOverlappingWindowChunkerConfig'
          default:
            token_limit: 250
            overlap_ratio: 0.5
      required:
      - chunker_name
    TokenOverlappingWindowChunkingRequest:
      type: object
      description: Token overlapping window chunking
      properties:
        chunker_name:
          $ref: '#/components/schemas/token-overlapping-window-chunkerEnum'
        chunker_config:
          allOf:
          - $ref: '#/components/schemas/TokenOverlappingWindowChunkerConfigRequest'
          default:
            token_limit: 250
            overlap_ratio: 0.5
      required:
      - chunker_name
    UploadDocumentBodyRequest:
      type: object
      properties:
        add_to_index_names:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally include the names of all indexes that you'd like
            this document to be included in
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally include an external ID for this document. This is
            useful if you want to re-upload the same document later when its contents
            change and would like it to be re-indexed.
          maxLength: 1000
        label:
          type: string
          minLength: 1
          description: A human-friendly name for this document. Typically the filename.
          maxLength: 1000
        contents:
          type: string
          format: binary
          description: The file contents of the document.
        keywords:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally include a list of keywords that'll be associated
            with this document. Used when performing keyword searches.
        metadata:
          type: string
          format: byte
          nullable: true
          description: A stringified JSON object containing any metadata associated
            with the document that you'd like to filter upon later.
      required:
      - contents
      - label
    UploadDocumentErrorResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    UploadDocumentResponse:
      type: object
      properties:
        document_id:
          type: string
          format: uuid
          description: The ID of the newly created document.
      required:
      - document_id
    UpsertEnum:
      type: string
      enum:
      - UPSERT
    UpsertSandboxScenarioRequestRequest:
      type: object
      properties:
        label:
          type: string
          default: Untitled Scenario
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/NamedScenarioInputRequest'
          description: The inputs for the scenario
        scenario_id:
          type: string
          minLength: 1
          description: The id of the scenario to update. If none is provided, an id
            will be generated and a new scenario will be appended.
      required:
      - inputs
    UpsertTestSuiteTestCaseRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The Vellum-generated ID of an existing Test Case whose data
            you'd like to replace. If specified and no Test Case exists with this
            ID, a 404 will be returned.
        external_id:
          type: string
          minLength: 1
          description: An ID external to Vellum that uniquely identifies the Test
            Case that you'd like to create/update. If there's a match on a Test Case
            that was previously created with the same external_id, it will be updated.
            Otherwise, a new Test Case will be created with this value as its external_id.
            If no external_id is specified, then a new Test Case will always be created.
        label:
          type: string
          nullable: true
          description: A human-readable label used to convey the intention of this
            Test Case
        input_values:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
          description: Values for each of the Test Case's input variables
        evaluation_values:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
          description: Values for each of the Test Case's evaluation variables
      required:
      - evaluation_values
      - input_values
    VellumError:
      type: object
      properties:
        message:
          type: string
        code:
          $ref: '#/components/schemas/VellumErrorCodeEnum'
      required:
      - code
      - message
    VellumErrorCodeEnum:
      enum:
      - INVALID_REQUEST
      - PROVIDER_ERROR
      - INTERNAL_SERVER_ERROR
      - USER_DEFINED_ERROR
      type: string
      description: |-
        * `INVALID_REQUEST` - INVALID_REQUEST
        * `PROVIDER_ERROR` - PROVIDER_ERROR
        * `INTERNAL_SERVER_ERROR` - INTERNAL_SERVER_ERROR
        * `USER_DEFINED_ERROR` - USER_DEFINED_ERROR
    VellumErrorRequest:
      type: object
      properties:
        message:
          type: string
          minLength: 1
        code:
          $ref: '#/components/schemas/VellumErrorCodeEnum'
      required:
      - code
      - message
    VellumImage:
      type: object
      properties:
        src:
          type: string
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - src
    VellumImageRequest:
      type: object
      properties:
        src:
          type: string
          minLength: 1
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - src
    VellumVariable:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        type:
          $ref: '#/components/schemas/VellumVariableType'
      required:
      - id
      - key
      - type
    VellumVariableType:
      enum:
      - STRING
      - NUMBER
      - JSON
      - CHAT_HISTORY
      - SEARCH_RESULTS
      - ERROR
      - ARRAY
      - FUNCTION_CALL
      - IMAGE
      - 'NULL'
      type: string
      description: |-
        * `STRING` - STRING
        * `NUMBER` - NUMBER
        * `JSON` - JSON
        * `CHAT_HISTORY` - CHAT_HISTORY
        * `SEARCH_RESULTS` - SEARCH_RESULTS
        * `ERROR` - ERROR
        * `ARRAY` - ARRAY
        * `FUNCTION_CALL` - FUNCTION_CALL
        * `IMAGE` - IMAGE
        * `NULL` - NULL
    VisibilityEnum:
      enum:
      - DEFAULT
      - PUBLIC
      - PRIVATE
      - DISABLED
      type: string
      description: |-
        * `DEFAULT` - DEFAULT
        * `PUBLIC` - PUBLIC
        * `PRIVATE` - PRIVATE
        * `DISABLED` - DISABLED
    WorkflowDeploymentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: A name that uniquely identifies this workflow deployment within
            its workspace
          maxLength: 150
        label:
          type: string
          description: A human-readable label for the workflow deployment
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the workflow deployment

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this workflow deployment is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        created:
          type: string
          format: date-time
          readOnly: true
        last_deployed_on:
          type: string
          format: date-time
        last_deployed_history_item_id:
          type: string
          format: uuid
          description: The ID of the history item associated with this Workflow Deployment's
            LATEST Release Tag
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
          description: The input variables this Workflow Deployment expects to receive
            values for when it is executed.
        output_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
          description: The output variables this Workflow Deployment produces values
            for when it's executed.
        description:
          type: string
          nullable: true
          description: A human-readable description of the workflow deployment
      required:
      - created
      - id
      - input_variables
      - label
      - last_deployed_history_item_id
      - last_deployed_on
      - name
      - output_variables
    WorkflowEventError:
      type: object
      properties:
        message:
          type: string
        code:
          $ref: '#/components/schemas/WorkflowExecutionEventErrorCode'
      required:
      - code
      - message
    WorkflowExecutionActualChatHistoryRequest:
      type: object
      properties:
        output_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of a workflow output. Must provide
            either this or output_key. output_key is typically preferred.
        output_key:
          type: string
          nullable: true
          minLength: 1
          description: The user-defined name of a workflow output. Must provide either
            this or output_id. Should correspond to the `Name` specified in a Final
            Output Node. Generally preferred over output_id.
        quality:
          type: number
          format: double
          nullable: true
          description: Optionally provide a decimal number between 0.0 and 1.0 (inclusive)
            representing the quality of the output. 0 is the worst, 1 is the best.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: Optionally provide additional metadata about the feedback submission.
        timestamp:
          type: number
          format: double
          nullable: true
          description: Optionally provide the timestamp representing when this feedback
            was collected. Used for reporting purposes.
        output_type:
          type: string
          description: The variable type of the output that this actual is being submitted
            for.
        desired_output_value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
          nullable: true
          description: Optionally provide the value that the output ideally should
            have been.
      required:
      - output_type
    WorkflowExecutionActualJsonRequest:
      type: object
      properties:
        output_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of a workflow output. Must provide
            either this or output_key. output_key is typically preferred.
        output_key:
          type: string
          nullable: true
          minLength: 1
          description: The user-defined name of a workflow output. Must provide either
            this or output_id. Should correspond to the `Name` specified in a Final
            Output Node. Generally preferred over output_id.
        quality:
          type: number
          format: double
          nullable: true
          description: Optionally provide a decimal number between 0.0 and 1.0 (inclusive)
            representing the quality of the output. 0 is the worst, 1 is the best.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: Optionally provide additional metadata about the feedback submission.
        timestamp:
          type: number
          format: double
          nullable: true
          description: Optionally provide the timestamp representing when this feedback
            was collected. Used for reporting purposes.
        output_type:
          type: string
          description: The variable type of the output that this actual is being submitted
            for.
        desired_output_value:
          type: object
          additionalProperties: {}
          nullable: true
          description: Optionally provide the value that the output ideally should
            have been.
      required:
      - output_type
    WorkflowExecutionActualStringRequest:
      type: object
      properties:
        output_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of a workflow output. Must provide
            either this or output_key. output_key is typically preferred.
        output_key:
          type: string
          nullable: true
          minLength: 1
          description: The user-defined name of a workflow output. Must provide either
            this or output_id. Should correspond to the `Name` specified in a Final
            Output Node. Generally preferred over output_id.
        quality:
          type: number
          format: double
          nullable: true
          description: Optionally provide a decimal number between 0.0 and 1.0 (inclusive)
            representing the quality of the output. 0 is the worst, 1 is the best.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: Optionally provide additional metadata about the feedback submission.
        timestamp:
          type: number
          format: double
          nullable: true
          description: Optionally provide the timestamp representing when this feedback
            was collected. Used for reporting purposes.
        output_type:
          type: string
          description: The variable type of the output that this actual is being submitted
            for.
        desired_output_value:
          type: string
          nullable: true
          description: Optionally provide the value that the output ideally should
            have been.
      required:
      - output_type
    WorkflowExecutionEventErrorCode:
      enum:
      - WORKFLOW_INITIALIZATION
      - WORKFLOW_CANCELLED
      - NODE_EXECUTION_COUNT_LIMIT_REACHED
      - INTERNAL_SERVER_ERROR
      - NODE_EXECUTION
      - LLM_PROVIDER
      - INVALID_TEMPLATE
      - USER_DEFINED_ERROR
      type: string
      description: |-
        * `WORKFLOW_INITIALIZATION` - WORKFLOW_INITIALIZATION
        * `WORKFLOW_CANCELLED` - WORKFLOW_CANCELLED
        * `NODE_EXECUTION_COUNT_LIMIT_REACHED` - NODE_EXECUTION_COUNT_LIMIT_REACHED
        * `INTERNAL_SERVER_ERROR` - INTERNAL_SERVER_ERROR
        * `NODE_EXECUTION` - NODE_EXECUTION
        * `LLM_PROVIDER` - LLM_PROVIDER
        * `INVALID_TEMPLATE` - INVALID_TEMPLATE
        * `USER_DEFINED_ERROR` - USER_DEFINED_ERROR
    WorkflowExecutionEventType:
      enum:
      - NODE
      - WORKFLOW
      type: string
      description: |-
        * `NODE` - NODE
        * `WORKFLOW` - WORKFLOW
    WorkflowExecutionNodeResultEvent:
      type: object
      description: A NODE-level event emitted from the workflow's execution.
      properties:
        execution_id:
          type: string
        run_id:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
        type:
          type: string
        data:
          $ref: '#/components/schemas/WorkflowNodeResultEvent'
      required:
      - data
      - execution_id
      - type
    WorkflowExecutionWorkflowResultEvent:
      type: object
      description: A WORKFLOW-level event emitted from the workflow's execution.
      properties:
        execution_id:
          type: string
        run_id:
          type: string
          nullable: true
          deprecated: true
        external_id:
          type: string
          nullable: true
        type:
          type: string
        data:
          $ref: '#/components/schemas/WorkflowResultEvent'
      required:
      - data
      - execution_id
      - type
    WorkflowExpandMetaRequest:
      type: object
      properties:
        usage:
          type: boolean
          nullable: true
          description: If enabled, the Prompt Node FULFILLED events will include model
            host usage tracking. This may increase latency for some model hosts.
    WorkflowNodeResultData:
      oneOf:
      - $ref: '#/components/schemas/PromptNodeResult'
      - $ref: '#/components/schemas/SearchNodeResult'
      - $ref: '#/components/schemas/TemplatingNodeResult'
      - $ref: '#/components/schemas/CodeExecutionNodeResult'
      - $ref: '#/components/schemas/ConditionalNodeResult'
      - $ref: '#/components/schemas/ApiNodeResult'
      - $ref: '#/components/schemas/TerminalNodeResult'
      - $ref: '#/components/schemas/MergeNodeResult'
      - $ref: '#/components/schemas/SubworkflowNodeResult'
      - $ref: '#/components/schemas/MetricNodeResult'
      - $ref: '#/components/schemas/MapNodeResult'
      discriminator:
        propertyName: type
        mapping:
          PROMPT: '#/components/schemas/PromptNodeResult'
          SEARCH: '#/components/schemas/SearchNodeResult'
          TEMPLATING: '#/components/schemas/TemplatingNodeResult'
          CODE_EXECUTION: '#/components/schemas/CodeExecutionNodeResult'
          CONDITIONAL: '#/components/schemas/ConditionalNodeResult'
          API: '#/components/schemas/ApiNodeResult'
          TERMINAL: '#/components/schemas/TerminalNodeResult'
          MERGE: '#/components/schemas/MergeNodeResult'
          SUBWORKFLOW: '#/components/schemas/SubworkflowNodeResult'
          METRIC: '#/components/schemas/MetricNodeResult'
          MAP: '#/components/schemas/MapNodeResult'
    WorkflowNodeResultEvent:
      oneOf:
      - $ref: '#/components/schemas/InitiatedWorkflowNodeResultEvent'
      - $ref: '#/components/schemas/StreamingWorkflowNodeResultEvent'
      - $ref: '#/components/schemas/FulfilledWorkflowNodeResultEvent'
      - $ref: '#/components/schemas/RejectedWorkflowNodeResultEvent'
      discriminator:
        propertyName: state
        mapping:
          INITIATED: '#/components/schemas/InitiatedWorkflowNodeResultEvent'
          STREAMING: '#/components/schemas/StreamingWorkflowNodeResultEvent'
          FULFILLED: '#/components/schemas/FulfilledWorkflowNodeResultEvent'
          REJECTED: '#/components/schemas/RejectedWorkflowNodeResultEvent'
    WorkflowNodeResultEventState:
      enum:
      - INITIATED
      - STREAMING
      - FULFILLED
      - REJECTED
      type: string
      description: |-
        * `INITIATED` - INITIATED
        * `STREAMING` - STREAMING
        * `FULFILLED` - FULFILLED
        * `REJECTED` - REJECTED
    WorkflowOutput:
      oneOf:
      - $ref: '#/components/schemas/WorkflowOutputString'
      - $ref: '#/components/schemas/WorkflowOutputNumber'
      - $ref: '#/components/schemas/WorkflowOutputJSON'
      - $ref: '#/components/schemas/WorkflowOutputChatHistory'
      - $ref: '#/components/schemas/WorkflowOutputSearchResults'
      - $ref: '#/components/schemas/WorkflowOutputArray'
      - $ref: '#/components/schemas/WorkflowOutputError'
      - $ref: '#/components/schemas/WorkflowOutputFunctionCall'
      - $ref: '#/components/schemas/WorkflowOutputImage'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/WorkflowOutputString'
          NUMBER: '#/components/schemas/WorkflowOutputNumber'
          JSON: '#/components/schemas/WorkflowOutputJSON'
          CHAT_HISTORY: '#/components/schemas/WorkflowOutputChatHistory'
          SEARCH_RESULTS: '#/components/schemas/WorkflowOutputSearchResults'
          ARRAY: '#/components/schemas/WorkflowOutputArray'
          ERROR: '#/components/schemas/WorkflowOutputError'
          FUNCTION_CALL: '#/components/schemas/WorkflowOutputFunctionCall'
          IMAGE: '#/components/schemas/WorkflowOutputImage'
    WorkflowOutputArray:
      type: object
      description: An array output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/ArrayEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVellumValueItem'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputChatHistory:
      type: object
      description: A chat history output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputError:
      type: object
      description: An error output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputFunctionCall:
      type: object
      description: A function call output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputImage:
      type: object
      description: An image output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          allOf:
          - $ref: '#/components/schemas/VellumImage'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputJSON:
      type: object
      description: A JSON output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputNumber:
      type: object
      description: A number output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputSearchResults:
      type: object
      description: A search results output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/SearchResultsEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputString:
      type: object
      description: A string output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
          nullable: true
      required:
      - id
      - name
      - type
      - value
    WorkflowReleaseTagRead:
      type: object
      properties:
        name:
          type: string
          description: The name of the Release Tag
        source:
          allOf:
          - $ref: '#/components/schemas/ReleaseTagSource'
          description: |-
            The source of how the Release Tag was originally created

            * `SYSTEM` - System
            * `USER` - User
        history_item:
          allOf:
          - $ref: '#/components/schemas/WorkflowReleaseTagWorkflowDeploymentHistoryItem'
          description: The Workflow Deployment History Item that this Release Tag
            is associated with
      required:
      - history_item
      - name
      - source
    WorkflowReleaseTagWorkflowDeploymentHistoryItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the Workflow Deployment History Item
        timestamp:
          type: string
          format: date-time
          description: The timestamp representing when this History Item was created
      required:
      - id
      - timestamp
    WorkflowRequestChatHistoryInputRequest:
      type: object
      description: The input for a chat history variable in a Workflow.
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the Workflow.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
      required:
      - name
      - type
      - value
    WorkflowRequestInputRequest:
      oneOf:
      - $ref: '#/components/schemas/WorkflowRequestStringInputRequest'
      - $ref: '#/components/schemas/WorkflowRequestJSONInputRequest'
      - $ref: '#/components/schemas/WorkflowRequestChatHistoryInputRequest'
      - $ref: '#/components/schemas/WorkflowRequestNumberInputRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/WorkflowRequestStringInputRequest'
          JSON: '#/components/schemas/WorkflowRequestJSONInputRequest'
          CHAT_HISTORY: '#/components/schemas/WorkflowRequestChatHistoryInputRequest'
          NUMBER: '#/components/schemas/WorkflowRequestNumberInputRequest'
    WorkflowRequestJSONInputRequest:
      type: object
      description: The input for a JSON variable in a Workflow.
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the Workflow.
        type:
          type: string
        value: {}
      required:
      - name
      - type
      - value
    WorkflowRequestNumberInputRequest:
      type: object
      description: The input for a number variable in a Workflow.
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the Workflow.
        type:
          type: string
        value:
          type: number
          format: double
      required:
      - name
      - type
      - value
    WorkflowRequestStringInputRequest:
      type: object
      description: The input for a string variable in a Workflow.
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the Workflow.
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
    WorkflowResultEvent:
      type: object
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        ts:
          type: string
          format: date-time
        output:
          allOf:
          - $ref: '#/components/schemas/WorkflowResultEventOutputData'
          nullable: true
        error:
          allOf:
          - $ref: '#/components/schemas/WorkflowEventError'
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowOutput'
          nullable: true
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionVellumValue'
          nullable: true
      required:
      - id
      - output
      - state
      - ts
    WorkflowResultEventOutputData:
      oneOf:
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataString'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataNumber'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataJSON'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataChatHistory'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataSearchResults'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataArray'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataFunctionCall'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataError'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/WorkflowResultEventOutputDataString'
          NUMBER: '#/components/schemas/WorkflowResultEventOutputDataNumber'
          JSON: '#/components/schemas/WorkflowResultEventOutputDataJSON'
          CHAT_HISTORY: '#/components/schemas/WorkflowResultEventOutputDataChatHistory'
          SEARCH_RESULTS: '#/components/schemas/WorkflowResultEventOutputDataSearchResults'
          ARRAY: '#/components/schemas/WorkflowResultEventOutputDataArray'
          FUNCTION_CALL: '#/components/schemas/WorkflowResultEventOutputDataFunctionCall'
          ERROR: '#/components/schemas/WorkflowResultEventOutputDataError'
    WorkflowResultEventOutputDataArray:
      type: object
      description: An Array output returned from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayVariableValueItem'
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataChatHistory:
      type: object
      description: A Chat History output streamed from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataError:
      type: object
      description: An Error output streamed from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataFunctionCall:
      type: object
      description: A Function Call output returned from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/FunctionCall'
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataJSON:
      type: object
      description: A JSON output streamed from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataNumber:
      type: object
      description: A number output streamed from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataSearchResults:
      type: object
      description: A Search Results output streamed from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataString:
      type: object
      description: A string output streamed from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          description: The newly output string value, meant to be concatenated with
            all previous. Will be non-null for events of state STREAMING.
        type:
          type: string
        value:
          type: string
          nullable: true
          description: The entire string value. Will be non-null for events of state
            FULFILLED.
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowStreamEvent:
      oneOf:
      - $ref: '#/components/schemas/WorkflowExecutionWorkflowResultEvent'
      - $ref: '#/components/schemas/WorkflowExecutionNodeResultEvent'
      discriminator:
        propertyName: type
        mapping:
          WORKFLOW: '#/components/schemas/WorkflowExecutionWorkflowResultEvent'
          NODE: '#/components/schemas/WorkflowExecutionNodeResultEvent'
    arrayEnum:
      type: string
      enum:
      - array
    booleanEnum:
      type: string
      enum:
      - boolean
    constEnum:
      type: string
      enum:
      - const
    hkunlp-instructor-xlEnum:
      type: string
      enum:
      - hkunlp/instructor-xl
    integerEnum:
      type: string
      enum:
      - integer
    intfloat-multilingual-e5-largeEnum:
      type: string
      enum:
      - intfloat/multilingual-e5-large
    numberEnum:
      type: string
      enum:
      - number
    objectEnum:
      type: string
      enum:
      - object
    oneofEnum:
      type: string
      enum:
      - oneOf
    reducto-chunkerEnum:
      type: string
      enum:
      - reducto-chunker
    sentence-chunkerEnum:
      type: string
      enum:
      - sentence-chunker
    sentence-transformers-multi-qa-mpnet-base-cos-v1Enum:
      type: string
      enum:
      - sentence-transformers/multi-qa-mpnet-base-cos-v1
    sentence-transformers-multi-qa-mpnet-base-dot-v1Enum:
      type: string
      enum:
      - sentence-transformers/multi-qa-mpnet-base-dot-v1
    stringEnum:
      type: string
      enum:
      - string
    text-embedding-3-largeEnum:
      type: string
      enum:
      - text-embedding-3-large
    text-embedding-3-smallEnum:
      type: string
      enum:
      - text-embedding-3-small
    text-embedding-ada-002Enum:
      type: string
      enum:
      - text-embedding-ada-002
    token-overlapping-window-chunkerEnum:
      type: string
      enum:
      - token-overlapping-window-chunker
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X_API_KEY
      description: API key based authentication
servers:
- url: https://api.vellum.ai
  description: Default Server
  x-name: Default

openapi: 3.0.3
info:
  title: Vellum Client API
  version: 1.0.0 (v1)
  description: |2

    ## Vellum API Documentation

    ### Welcome ðŸ‘‹
    Welcome to Vellum's API documentation! Here you'll find information about the various endpoints available to you,
    as well as the parameters and responses that they accept and return.

    We will be exposing more and more of our APIs over time as they stabilize. If there is some action you can perform
    via the UI that you wish you could perform via API, please let us know and we can expose it here in an unstable state.

    ### API Stability
    Some of the APIs documented within are undergoing active development. Use the
    <strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">GA</strong>
    and
    <strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Beta</strong>
    tags to differentiate between those that are stable and those that are not.

    ### Base URLs
    Some endpoints are hosted separately from the main Vellum API and therefore have a different base url. If this is
    the case, they will say so in their description.

    Unless otherwise specified, all endpoints use <code>https://api.vellum.ai</code> as their base URL.

    ### Official API Clients:
    Vellum maintains official API clients for Python and Node/Typescript. We recommend using these clients to interact
    with all stable endpoints. You can find them here:
    - [Python](https://github.com/vellum-ai/vellum-client-python)
    - [Node/Typescript](https://github.com/vellum-ai/vellum-client-node)
  contact:
    name: devops@vellum.ai
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /v1/deployments:
    get:
      operationId: deployments_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - ARCHIVED
        description: |-
          The current status of the deployment

          * `ACTIVE` - Active
          * `ARCHIVED` - Archived
      tags:
      - deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlimDeploymentReadList'
          description: ''
  /v1/deployments/{id}:
    get:
      operationId: deployments_retrieve
      description: Used to retrieve a deployment given its ID or name.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Either the Deployment's ID or its unique name
        required: true
      tags:
      - deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentRead'
          description: ''
      x-fern-availability: beta
  /v1/deployments/provider-payload:
    post:
      operationId: retrieve_provider_payload
      tags:
      - deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentProviderPayloadRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentProviderPayloadResponse'
          description: ''
  /v1/document-indexes:
    post:
      operationId: document_indexes_create
      description: Creates a new document index.
      tags:
      - document-indexes
      - folder-entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentIndexCreateRequest'
            examples:
              Example1:
                value:
                  label: My Document Index
                  name: my-document-index
                  indexing_config:
                    chunking:
                      chunker_name: sentence-chunker
                      chunker_config:
                        character_limit: 1000
                        min_overlap_ratio: 0.5
                    vectorizer:
                      model_name: hkunlp/instructor-xl
                      config:
                        instruction_domain: ''
                        instruction_document_text_type: plain_text
                        instruction_query_text_type: plain_text
                  copy_documents_from_index_id: null
                summary: Index Using Instructor Model
                description: This example shows how to create a document index that
                  vectorizes documents using an instructor model.
              Example2:
                value:
                  label: My Document Index
                  name: my-document-index
                  indexing_config:
                    chunking:
                      chunker_name: sentence-chunker
                      chunker_config:
                        character_limit: 1000
                        min_overlap_ratio: 0.5
                    vectorizer:
                      model_name: sentence-transformers/multi-qa-mpnet-base-dot-v1
                      config: {}
                  copy_documents_from_index_id: null
                summary: Index Using a Sentence Transformers Model
                description: This example shows how to create a document index that
                  vectorizes documents using a Sentence Transformers model.
              Example3:
                value:
                  label: My Document Index
                  name: my-document-index
                  indexing_config:
                    chunking:
                      chunker_name: sentence-chunker
                      chunker_config:
                        character_limit: 1000
                        min_overlap_ratio: 0.5
                    vectorizer:
                      model_name: text-embedding-ada-002
                      config:
                        add_openai_api_key: true
                  copy_documents_from_index_id: null
                summary: Index Using OpenAI Model
                description: This example shows how to create a document index that
                  vectorizes documents using one of OpenAI's embedding models.
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
      x-fern-availability: beta
  /v1/document-indexes/{id}:
    get:
      operationId: document_indexes_retrieve
      description: Used to retrieve a Document Index given its ID or name.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Either the Document Index's ID or its unique name
        required: true
      tags:
      - document-indexes
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentIndexRead'
          description: ''
      x-fern-availability: beta
  /v1/documents:
    get:
      operationId: documents_list
      description: Used to list documents. Optionally filter on supported fields.
      parameters:
      - in: query
        name: document_index_id
        schema:
          type: string
          format: uuid
        description: Filter down to only those documents that are included in the
          specified index. You may provide either the Vellum-generated ID or the unique
          name of the index specified upon initial creation.
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - documents
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlimDocumentList'
          description: ''
      x-fern-availability: ga
  /v1/documents/{id}:
    patch:
      operationId: documents_partial_update
      description: Update a Document, keying off of its Vellum-generated ID. Particularly
        useful for updating its metadata.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdateRequest'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRead'
          description: ''
      x-fern-availability: beta
    delete:
      operationId: documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this document.
        required: true
      tags:
      - documents
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
  /v1/execute-prompt:
    post:
      operationId: execute_prompt
      description: |-
        Executes a deployed Prompt and returns the result.

        Note: This endpoint temporarily does not support prompts with function calling, support is coming soon.
        In the meantime, we recommend still using the `/generate` endpoint for prompts with function calling.
      tags:
      - execute-prompt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePromptRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/execute-prompt-stream:
    post:
      operationId: execute_prompt_stream
      description: |-
        Executes a deployed Prompt and streams back the results.

        Note: This endpoint temporarily does not support prompts with function calling, support is coming soon.
        In the meantime, we recommend still using the `/generate-stream` endpoint for prompts with function calling
      tags:
      - execute-prompt-stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePromptStreamRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/x-ndjson:
              schema:
                $ref: '#/components/schemas/ExecutePromptEvent'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutePromptApiErrorResponse'
          description: ''
      x-fern-streaming: true
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/execute-workflow:
    post:
      operationId: execute_workflow
      description: Executes a deployed Workflow and returns its outputs.
      tags:
      - execute-workflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteWorkflowRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteWorkflowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteWorkflowErrorResponse'
          description: ''
      x-fern-ignore: true
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/execute-workflow-stream:
    post:
      operationId: execute_workflow_stream
      description: Executes a deployed Workflow and streams back its results.
      tags:
      - execute-workflow-stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteWorkflowStreamRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/x-ndjson:
              schema:
                $ref: '#/components/schemas/WorkflowStreamEvent'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteWorkflowStreamErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteWorkflowStreamErrorResponse'
          description: ''
      x-fern-streaming: true
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/generate:
    post:
      operationId: generate
      description: |-
        Generate a completion using a previously defined deployment.

        **Note:** Uses a base url of `https://predict.vellum.ai`.
      tags:
      - generate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
      x-fern-availability: ga
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/generate-stream:
    post:
      operationId: generate_stream
      description: |-
        Generate a stream of completions using a previously defined deployment.

        **Note:** Uses a base url of `https://predict.vellum.ai`.
      tags:
      - generate-stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateStreamBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/x-ndjson:
              schema:
                $ref: '#/components/schemas/GenerateStreamResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateErrorResponse'
          description: ''
      x-fern-streaming: true
      x-fern-availability: ga
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/model-versions/{id}:
    get:
      operationId: model_versions_retrieve
      description: Deprecated. Use the `deployments/provider-payload` endpoint to
        fetch information that we send to Model providers.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this model version.
        required: true
      tags:
      - model-versions
      security:
      - apiKeyAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelVersionRead'
          description: ''
      x-fern-availability: beta
  /v1/registered-prompts/register:
    post:
      operationId: register_prompt
      description: |-
        Registers a prompt within Vellum and creates associated Vellum entities. Intended to be used by integration
        partners, not directly by Vellum users.

        Under the hood, this endpoint creates a new sandbox, a new model version, and a new deployment.
      tags:
      - registered-prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPromptRequestRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPromptResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPromptErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPromptErrorResponse'
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPromptErrorResponse'
          description: ''
      x-fern-availability: beta
  /v1/sandboxes/{id}/scenarios:
    post:
      operationId: upsert_sandbox_scenario
      description: |-
        Upserts a new scenario for a sandbox, keying off of the optionally provided scenario id.

        If an id is provided and has a match, the scenario will be updated. If no id is provided or no match
        is found, a new scenario will be appended to the end.

        Note that a full replacement of the scenario is performed, so any fields not provided will be removed
        or overwritten with default values.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      tags:
      - sandboxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertSandboxScenarioRequestRequest'
            examples:
              Example1:
                value:
                  id: 3ee58bf2-1e5c-415e-8b6c-02ca8b77f29d
                  label: Scenario 1
                  inputs:
                  - key: var_1
                    value: Hello, world!
                    type: TEXT
                  - key: var_2
                    value: Why hello, there!
                    type: TEXT
                  metric_input_params:
                    params: {}
                summary: Basic Example
                description: This example shows how to specify a scenario with two
                  variables, var_1 and var_2.
              Example2:
                value:
                  id: 50c55d1d-4c37-4c83-afc1-9d895f286320
                  label: Scenario 2
                  inputs:
                  - key: $chat_history
                    type: CHAT_HISTORY
                    chat_history:
                    - role: USER
                      text: What's your favorite color?
                    - role: ASSISTANT
                      text: AI's don't have a favorite color.... Yet.
                  metric_input_params:
                    params: {}
                summary: Chat History Example
                description: This example shows how to specify a chat history for
                  the special $chat_history variable.
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxScenario'
          description: ''
      x-fern-availability: beta
  /v1/sandboxes/{id}/scenarios/{scenario_id}:
    delete:
      operationId: delete_sandbox_scenario
      description: Deletes an existing scenario from a sandbox, keying off of the
        provided scenario id.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this sandbox.
        required: true
      - in: path
        name: scenario_id
        schema:
          type: string
        description: An id identifying the scenario that you'd like to delete
        required: true
      tags:
      - sandboxes
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
      x-fern-availability: beta
  /v1/search:
    post:
      operationId: search
      description: |-
        Perform a search against a document index.

        **Note:** Uses a base url of `https://predict.vellum.ai`.
      tags:
      - search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchErrorResponse'
          description: ''
      x-fern-availability: ga
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/submit-completion-actuals:
    post:
      operationId: submit_completion_actuals
      description: |-
        Used to submit feedback regarding the quality of previously generated completions.

        **Note:** Uses a base url of `https://predict.vellum.ai`.
      tags:
      - submit-completion-actuals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitCompletionActualsRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitCompletionActualsErrorResponse'
          description: ''
      x-fern-availability: ga
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/submit-workflow-execution-actuals:
    post:
      operationId: submit_workflow_execution_actuals
      description: "    Used to submit feedback regarding the quality of previous\
        \ workflow execution and its outputs.\n\n    **Note:** Uses a base url of\
        \ `https://predict.vellum.ai`.    "
      tags:
      - submit-workflow-execution-actuals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitWorkflowExecutionActualsRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          description: No response body
      x-fern-availability: ga
      servers:
      - url: https://predict.vellum.ai
        x-name: Predict
  /v1/test-suites/{id}/test-cases:
    post:
      operationId: upsert_test_suite_test_case
      description: |-
        Upserts a new test case for a test suite, keying off of the optionally provided test case id.

        If an id is provided and has a match, the test case will be updated. If no id is provided or no match
        is found, a new test case will be appended to the end.

        Note that a full replacement of the test case is performed, so any fields not provided will be removed
        or overwritten with default values.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      tags:
      - test-suites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTestSuiteTestCaseRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestCase'
          description: ''
      x-fern-availability: beta
  /v1/test-suites/{id}/test-cases/{test_case_id}:
    delete:
      operationId: delete_test_suite_test_case
      description: |
        Deletes an existing test case for a test suite, keying off of the test case id.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this test suite.
        required: true
      - in: path
        name: test_case_id
        schema:
          type: string
        description: An id identifying the test case that you'd like to delete
        required: true
      tags:
      - test-suites
      security:
      - apiKeyAuth: []
      responses:
        '204':
          description: No response body
      x-fern-availability: beta
  /v1/upload-document:
    post:
      operationId: documents_upload
      description: |-
        Upload a document to be indexed and used for search.

        **Note:** Uses a base url of `https://documents.vellum.ai`.
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadDocumentBodyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UploadDocumentBodyRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDocumentErrorResponse'
          description: ''
      x-fern-availability: ga
      servers:
      - url: https://documents.vellum.ai
        x-name: Documents
  /v1/workflow-deployments:
    get:
      operationId: workflow_deployments_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - ARCHIVED
        description: |-
          The current status of the workflow deployment

          * `ACTIVE` - Active
          * `ARCHIVED` - Archived
      tags:
      - workflow-deployments
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlimWorkflowDeploymentList'
          description: ''
components:
  schemas:
    ApiNodeResult:
      type: object
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/ApiNodeResultData'
      required:
      - data
      - type
    ApiNodeResultData:
      type: object
      properties:
        text_output_id:
          type: string
        text:
          type: string
          nullable: true
        json_output_id:
          type: string
        json:
          type: object
          additionalProperties: {}
          nullable: true
        status_code_output_id:
          type: string
        status_code:
          type: integer
      required:
      - json_output_id
      - status_code
      - status_code_output_id
      - text_output_id
    ArrayChatMessageContent:
      type: object
      description: A list of chat message content items.
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayChatMessageContentItem'
      required:
      - type
      - value
    ArrayChatMessageContentItem:
      oneOf:
      - $ref: '#/components/schemas/StringChatMessageContent'
      - $ref: '#/components/schemas/FunctionCallChatMessageContent'
      - $ref: '#/components/schemas/ImageChatMessageContent'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringChatMessageContent'
          FUNCTION_CALL: '#/components/schemas/FunctionCallChatMessageContent'
          IMAGE: '#/components/schemas/ImageChatMessageContent'
    ArrayChatMessageContentItemRequest:
      oneOf:
      - $ref: '#/components/schemas/StringChatMessageContentRequest'
      - $ref: '#/components/schemas/FunctionCallChatMessageContentRequest'
      - $ref: '#/components/schemas/ImageChatMessageContentRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringChatMessageContentRequest'
          FUNCTION_CALL: '#/components/schemas/FunctionCallChatMessageContentRequest'
          IMAGE: '#/components/schemas/ImageChatMessageContentRequest'
    ArrayChatMessageContentRequest:
      type: object
      description: A list of chat message content items.
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ArrayChatMessageContentItemRequest'
      required:
      - type
      - value
    ArrayEnum:
      type: string
      enum:
      - ARRAY
    ArrayVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/VariableValue'
      required:
      - type
      - value
    BlockTypeEnum:
      enum:
      - CHAT_MESSAGE
      - CHAT_HISTORY
      - JINJA
      - FUNCTION_DEFINITION
      type: string
      description: |-
        * `CHAT_MESSAGE` - CHAT_MESSAGE
        * `CHAT_HISTORY` - CHAT_HISTORY
        * `JINJA` - JINJA
        * `FUNCTION_DEFINITION` - FUNCTION_DEFINITION
    ChatHistoryEnum:
      type: string
      enum:
      - CHAT_HISTORY
    ChatHistoryInputRequest:
      type: object
      description: A user input representing a list of chat messages
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the deployment.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
      required:
      - name
      - type
      - value
    ChatHistoryVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - type
      - value
    ChatMessage:
      type: object
      properties:
        text:
          type: string
        role:
          $ref: '#/components/schemas/ChatMessageRole'
        content:
          allOf:
          - $ref: '#/components/schemas/ChatMessageContent'
          nullable: true
      required:
      - role
    ChatMessageContent:
      oneOf:
      - $ref: '#/components/schemas/StringChatMessageContent'
      - $ref: '#/components/schemas/FunctionCallChatMessageContent'
      - $ref: '#/components/schemas/ArrayChatMessageContent'
      - $ref: '#/components/schemas/ImageChatMessageContent'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringChatMessageContent'
          FUNCTION_CALL: '#/components/schemas/FunctionCallChatMessageContent'
          ARRAY: '#/components/schemas/ArrayChatMessageContent'
          IMAGE: '#/components/schemas/ImageChatMessageContent'
    ChatMessageContentRequest:
      oneOf:
      - $ref: '#/components/schemas/StringChatMessageContentRequest'
      - $ref: '#/components/schemas/FunctionCallChatMessageContentRequest'
      - $ref: '#/components/schemas/ArrayChatMessageContentRequest'
      - $ref: '#/components/schemas/ImageChatMessageContentRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringChatMessageContentRequest'
          FUNCTION_CALL: '#/components/schemas/FunctionCallChatMessageContentRequest'
          ARRAY: '#/components/schemas/ArrayChatMessageContentRequest'
          IMAGE: '#/components/schemas/ImageChatMessageContentRequest'
    ChatMessageRequest:
      type: object
      properties:
        text:
          type: string
        role:
          $ref: '#/components/schemas/ChatMessageRole'
        content:
          allOf:
          - $ref: '#/components/schemas/ChatMessageContentRequest'
          nullable: true
      required:
      - role
    ChatMessageRole:
      enum:
      - SYSTEM
      - ASSISTANT
      - USER
      - FUNCTION
      type: string
      description: |-
        * `SYSTEM` - System
        * `ASSISTANT` - Assistant
        * `USER` - User
        * `FUNCTION` - Function
    CodeExecutionNodeChatHistoryResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeErrorResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeJsonResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeNumberResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeResult:
      type: object
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/CodeExecutionNodeResultData'
      required:
      - data
      - type
    CodeExecutionNodeResultData:
      type: object
      properties:
        output:
          $ref: '#/components/schemas/CodeExecutionNodeResultOutput'
      required:
      - output
    CodeExecutionNodeResultOutput:
      oneOf:
      - $ref: '#/components/schemas/CodeExecutionNodeStringResult'
      - $ref: '#/components/schemas/CodeExecutionNodeNumberResult'
      - $ref: '#/components/schemas/CodeExecutionNodeJsonResult'
      - $ref: '#/components/schemas/CodeExecutionNodeChatHistoryResult'
      - $ref: '#/components/schemas/CodeExecutionNodeSearchResultsResult'
      - $ref: '#/components/schemas/CodeExecutionNodeErrorResult'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/CodeExecutionNodeStringResult'
          NUMBER: '#/components/schemas/CodeExecutionNodeNumberResult'
          JSON: '#/components/schemas/CodeExecutionNodeJsonResult'
          CHAT_HISTORY: '#/components/schemas/CodeExecutionNodeChatHistoryResult'
          SEARCH_RESULTS: '#/components/schemas/CodeExecutionNodeSearchResultsResult'
          ERROR: '#/components/schemas/CodeExecutionNodeErrorResult'
    CodeExecutionNodeSearchResultsResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - id
      - type
      - value
    CodeExecutionNodeStringResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - id
      - type
      - value
    ConditionalNodeResult:
      type: object
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/ConditionalNodeResultData'
      required:
      - data
      - type
    ConditionalNodeResultData:
      type: object
      properties:
        source_handle_id:
          type: string
          nullable: true
    DeploymentProviderPayloadRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the deployment. Must provide either this or deployment_name.
        deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the deployment. Must provide either this or deployment_id.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptDeploymentInputRequest'
          description: The list of inputs defined in the Prompt's deployment with
            their corresponding values.
      required:
      - inputs
    DeploymentProviderPayloadResponse:
      type: object
      properties:
        payload:
          type: object
          additionalProperties: {}
      required:
      - payload
    DeploymentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the deployment
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this deployment within its
            workspace
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the deployment

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this deployment is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        last_deployed_on:
          type: string
          format: date-time
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
        active_model_version_ids:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
          description: Deprecated. The Prompt execution endpoints return a `prompt_version_id`
            that could be used instead.
          deprecated: true
      required:
      - active_model_version_ids
      - created
      - id
      - input_variables
      - label
      - last_deployed_on
      - name
    DocumentDocumentToDocumentIndex:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Vellum-generated ID that uniquely identifies this link.
        document_index_id:
          type: string
          format: uuid
          readOnly: true
          description: Vellum-generated ID that uniquely identifies the index this
            document is included in.
        indexing_state:
          allOf:
          - $ref: '#/components/schemas/IndexingStateEnum'
          description: |-
            An enum value representing where this document is along its indexing lifecycle for this index.

            * `AWAITING_PROCESSING` - Awaiting Processing
            * `QUEUED` - Queued
            * `INDEXING` - Indexing
            * `INDEXED` - Indexed
            * `FAILED` - Failed
      required:
      - document_index_id
      - id
    DocumentIndexCreateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document index
          maxLength: 150
        name:
          type: string
          minLength: 1
          description: A name that uniquely identifies this index within its workspace
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the document index

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this document index is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        indexing_config:
          type: object
          additionalProperties: {}
          description: Configuration representing how documents should be indexed
        copy_documents_from_index_id:
          type: string
          format: uuid
          description: Optionally specify the id of a document index from which you'd
            like to copy and re-index its documents into this newly created index
      required:
      - indexing_config
      - label
      - name
    DocumentIndexRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the document index
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this index within its workspace
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the document index

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this document index is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        indexing_config:
          type: object
          additionalProperties: {}
          description: Configuration representing how documents should be indexed
      required:
      - created
      - id
      - indexing_config
      - label
      - name
    DocumentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          nullable: true
          description: The unique id of this document as it exists in the user's system.
          maxLength: 1000
        last_uploaded_at:
          type: string
          format: date-time
        label:
          type: string
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 1000
        processing_state:
          allOf:
          - $ref: '#/components/schemas/ProcessingStateEnum'
          description: |-
            The current processing state of the document

            * `QUEUED` - Queued
            * `PROCESSING` - Processing
            * `PROCESSED` - Processed
            * `FAILED` - Failed
        status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          description: |-
            The current status of the document

            * `ACTIVE` - Active
        original_file_url:
          type: string
          nullable: true
          readOnly: true
        processed_file_url:
          type: string
          nullable: true
          readOnly: true
        document_to_document_indexes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDocumentToDocumentIndex'
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A previously supplied JSON object containing metadata that
            can be filtered on when searching.
      required:
      - document_to_document_indexes
      - id
      - label
      - last_uploaded_at
      - original_file_url
      - processed_file_url
    DocumentStatus:
      enum:
      - ACTIVE
      type: string
      description: '* `ACTIVE` - Active'
    EnrichedNormalizedCompletion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The Vellum-generated ID of the completion.
        external_id:
          type: string
          nullable: true
          description: The external ID that was originally provided along with the
            generation request, which uniquely identifies this generation in an external
            system.
        text:
          type: string
          description: The text generated by the LLM.
        finish_reason:
          allOf:
          - $ref: '#/components/schemas/FinishReasonEnum'
          nullable: true
          description: |-
            The reason the generation finished.

            * `LENGTH` - LENGTH
            * `STOP` - STOP
            * `UNKNOWN` - UNKNOWN
        logprobs:
          allOf:
          - $ref: '#/components/schemas/NormalizedLogProbs'
          nullable: true
          description: The logprobs of the completion. Only present if specified in
            the original request options.
        model_version_id:
          type: string
          description: The ID of the model version used to generate this completion.
        prompt_version_id:
          type: string
        type:
          $ref: '#/components/schemas/VellumVariableType'
        deployment_release_tag:
          type: string
        model_name:
          type: string
      required:
      - deployment_release_tag
      - finish_reason
      - id
      - model_name
      - model_version_id
      - prompt_version_id
      - text
    EntityStatus:
      enum:
      - ACTIVE
      - ARCHIVED
      type: string
      description: |-
        * `ACTIVE` - Active
        * `ARCHIVED` - Archived
    EnvironmentEnum:
      enum:
      - DEVELOPMENT
      - STAGING
      - PRODUCTION
      type: string
      description: |-
        * `DEVELOPMENT` - Development
        * `STAGING` - Staging
        * `PRODUCTION` - Production
    ErrorEnum:
      type: string
      enum:
      - ERROR
    ErrorVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - type
      - value
    EvaluationParams:
      type: object
      properties:
        target:
          type: string
          nullable: true
          description: The target value to compare the LLM output against. Typically
            what you expect or desire the LLM output to be.
    EvaluationParamsRequest:
      type: object
      properties:
        target:
          type: string
          nullable: true
          description: The target value to compare the LLM output against. Typically
            what you expect or desire the LLM output to be.
    ExecutePromptApiErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    ExecutePromptEvent:
      oneOf:
      - $ref: '#/components/schemas/InitiatedExecutePromptEvent'
      - $ref: '#/components/schemas/StreamingExecutePromptEvent'
      - $ref: '#/components/schemas/FulfilledExecutePromptEvent'
      - $ref: '#/components/schemas/RejectedExecutePromptEvent'
      discriminator:
        propertyName: state
        mapping:
          INITIATED: '#/components/schemas/InitiatedExecutePromptEvent'
          STREAMING: '#/components/schemas/StreamingExecutePromptEvent'
          FULFILLED: '#/components/schemas/FulfilledExecutePromptEvent'
          REJECTED: '#/components/schemas/RejectedExecutePromptEvent'
    ExecutePromptRequest:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptDeploymentInputRequest'
          description: The list of inputs defined in the Prompt's deployment with
            their corresponding values.
        prompt_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the Prompt Deployment. Must provide either this or
            prompt_deployment_name.
        prompt_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the Prompt Deployment. Must provide either this
            or prompt_deployment_id.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Prompt Deployment
        external_id:
          type: string
          nullable: true
          minLength: 1
        expand_meta:
          allOf:
          - $ref: '#/components/schemas/PromptDeploymentExpandMetaRequestRequest'
          nullable: true
          description: The name of the Prompt Deployment. Must provide either this
            or prompt_deployment_id.
        raw_overrides:
          $ref: '#/components/schemas/RawPromptExecutionOverridesRequest'
        expand_raw:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Returns the raw API response data sent from the model host.
            Combined with `raw_overrides`, it can be used to access new features from
            models.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - inputs
    ExecutePromptResponse:
      oneOf:
      - $ref: '#/components/schemas/FulfilledExecutePromptResponse'
      - $ref: '#/components/schemas/RejectedExecutePromptResponse'
      discriminator:
        propertyName: state
        mapping:
          FULFILLED: '#/components/schemas/FulfilledExecutePromptResponse'
          REJECTED: '#/components/schemas/RejectedExecutePromptResponse'
    ExecutePromptStreamRequest:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptDeploymentInputRequest'
          description: The list of inputs defined in the Prompt's deployment with
            their corresponding values.
        prompt_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the Prompt Deployment. Must provide either this or
            prompt_deployment_name.
        prompt_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the Prompt Deployment. Must provide either this
            or prompt_deployment_id.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Prompt Deployment
        external_id:
          type: string
          nullable: true
          minLength: 1
        expand_meta:
          allOf:
          - $ref: '#/components/schemas/PromptDeploymentExpandMetaRequestRequest'
          nullable: true
          description: The name of the Prompt Deployment. Must provide either this
            or prompt_deployment_id.
        raw_overrides:
          $ref: '#/components/schemas/RawPromptExecutionOverridesRequest'
        expand_raw:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Returns the raw API response data sent from the model host.
            Combined with `raw_overrides`, it can be used to access new features from
            models.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - inputs
    ExecuteWorkflowErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    ExecuteWorkflowRequest:
      type: object
      properties:
        workflow_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the Workflow Deployment. Must provide either this
            or workflow_deployment_name.
        workflow_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the Workflow Deployment. Must provide either this
            or workflow_deployment_id.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Workflow Deployment
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRequestInputRequest'
          description: The list of inputs defined in the Workflow's Deployment with
            their corresponding values.
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally include a unique identifier for monitoring purposes.
      required:
      - inputs
    ExecuteWorkflowResponse:
      type: object
      properties:
        execution_id:
          type: string
        run_id:
          type: string
          nullable: true
          deprecated: true
        external_id:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/ExecuteWorkflowWorkflowResultEvent'
      required:
      - data
      - execution_id
    ExecuteWorkflowStreamErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    ExecuteWorkflowStreamRequest:
      type: object
      properties:
        workflow_deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the Workflow Deployment. Must provide either this
            or workflow_deployment_name.
        workflow_deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the Workflow Deployment. Must provide either this
            or workflow_deployment_id.
        release_tag:
          type: string
          nullable: true
          minLength: 1
          description: Optionally specify a release tag if you want to pin to a specific
            release of the Workflow Deployment
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRequestInputRequest'
          description: The list of inputs defined in the Workflow's deployment with
            their corresponding values.
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally include a unique identifier for tracking purposes.
        event_types:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowExecutionEventType'
          description: Optionally specify which events you want to receive. Defaults
            to only WORKFLOW events. Note that the schema of non-WORKFLOW events is
            unstable and should be used with caution.
      required:
      - inputs
    ExecuteWorkflowWorkflowResultEvent:
      oneOf:
      - $ref: '#/components/schemas/FulfilledExecuteWorkflowWorkflowResultEvent'
      - $ref: '#/components/schemas/RejectedExecuteWorkflowWorkflowResultEvent'
      discriminator:
        propertyName: state
        mapping:
          FULFILLED: '#/components/schemas/FulfilledExecuteWorkflowWorkflowResultEvent'
          REJECTED: '#/components/schemas/RejectedExecuteWorkflowWorkflowResultEvent'
    FinishReasonEnum:
      enum:
      - LENGTH
      - STOP
      - UNKNOWN
      type: string
      description: |-
        * `LENGTH` - LENGTH
        * `STOP` - STOP
        * `UNKNOWN` - UNKNOWN
    FulfilledEnum:
      type: string
      enum:
      - FULFILLED
    FulfilledExecutePromptEvent:
      type: object
      description: The final data event returned indicating that the stream has ended
        and all final resolved values from the model can be found.
      properties:
        state:
          $ref: '#/components/schemas/FulfilledEnum'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptOutput'
        execution_id:
          type: string
        meta:
          $ref: '#/components/schemas/FulfilledPromptExecutionMeta'
      required:
      - execution_id
      - outputs
      - state
    FulfilledExecutePromptResponse:
      type: object
      description: The successful response from the model containing all of the resolved
        values generated by the prompt.
      properties:
        meta:
          $ref: '#/components/schemas/PromptExecutionMeta'
        raw:
          type: object
          additionalProperties: {}
          description: The subset of the raw response from the model that the request
            opted into with `expand_raw`.
        execution_id:
          type: string
          description: The ID of the execution.
        state:
          $ref: '#/components/schemas/FulfilledEnum'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/PromptOutput'
      required:
      - execution_id
      - outputs
      - state
    FulfilledExecuteWorkflowWorkflowResultEvent:
      type: object
      description: The successful response from the Workflow execution containing
        the produced outputs.
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/FulfilledEnum'
        ts:
          type: string
          format: date-time
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowOutput'
      required:
      - id
      - outputs
      - state
      - ts
    FulfilledFunctionCall:
      type: object
      description: The final resolved function call value.
      properties:
        state:
          $ref: '#/components/schemas/FulfilledEnum'
        arguments:
          type: object
          additionalProperties: {}
        id:
          type: string
          nullable: true
        name:
          type: string
      required:
      - arguments
      - name
      - state
    FulfilledPromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        latency:
          type: integer
          nullable: true
        finish_reason:
          allOf:
          - $ref: '#/components/schemas/FinishReasonEnum'
          nullable: true
    FunctionCall:
      oneOf:
      - $ref: '#/components/schemas/FulfilledFunctionCall'
      - $ref: '#/components/schemas/RejectedFunctionCall'
      discriminator:
        propertyName: state
        mapping:
          FULFILLED: '#/components/schemas/FulfilledFunctionCall'
          REJECTED: '#/components/schemas/RejectedFunctionCall'
    FunctionCallChatMessageContent:
      type: object
      description: A function call value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          $ref: '#/components/schemas/FunctionCallChatMessageContentValue'
      required:
      - type
      - value
    FunctionCallChatMessageContentRequest:
      type: object
      description: A function call value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          $ref: '#/components/schemas/FunctionCallChatMessageContentValueRequest'
      required:
      - type
      - value
    FunctionCallChatMessageContentValue:
      type: object
      description: The final resolved function call value.
      properties:
        name:
          type: string
        arguments:
          type: object
          additionalProperties: {}
        id:
          type: string
          nullable: true
      required:
      - arguments
      - name
    FunctionCallChatMessageContentValueRequest:
      type: object
      description: The final resolved function call value.
      properties:
        name:
          type: string
          minLength: 1
        arguments:
          type: object
          additionalProperties: {}
        id:
          type: string
          nullable: true
          minLength: 1
      required:
      - arguments
      - name
    FunctionCallEnum:
      type: string
      enum:
      - FUNCTION_CALL
    FunctionCallVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          $ref: '#/components/schemas/FunctionCall'
      required:
      - type
      - value
    GenerateBodyRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the deployment. Must provide either this or deployment_name.
        deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the deployment. Must provide either this or deployment_id.
        requests:
          type: array
          items:
            $ref: '#/components/schemas/GenerateRequest'
          description: The generation request to make. Bulk requests are no longer
            supported, this field must be an array of length 1.
        options:
          allOf:
          - $ref: '#/components/schemas/GenerateOptionsRequest'
          nullable: true
          description: Additional configuration that can be used to control what's
            included in the response.
      required:
      - requests
    GenerateErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    GenerateOptionsRequest:
      type: object
      properties:
        logprobs:
          allOf:
          - $ref: '#/components/schemas/LogprobsEnum'
          description: |-
            Which logprobs to include, if any. Defaults to NONE.

            * `ALL` - ALL
            * `NONE` - NONE
    GenerateRequest:
      type: object
      properties:
        input_values:
          type: object
          additionalProperties: {}
          description: Key/value pairs for each template variable defined in the deployment's
            prompt.
        chat_history:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
          description: Optionally provide a list of chat messages that'll be used
            in place of the special {$chat_history} variable, if included in the prompt.
        external_ids:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally include a unique identifier for each generation,
            as represented outside of Vellum. Note that this should generally be a
            list of length one.
      required:
      - input_values
    GenerateResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GenerateResult'
          description: The results of each generation request.
      required:
      - results
    GenerateResult:
      type: object
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/GenerateResultData'
          description: An object containing the resulting generation. This key will
            be absent if the LLM provider experienced an error.
        error:
          allOf:
          - $ref: '#/components/schemas/GenerateResultError'
          description: An object containing details about the error that occurred.
            This key will be absent if the LLM provider did not experience an error.
    GenerateResultData:
      type: object
      properties:
        completions:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedNormalizedCompletion'
          description: The generated completions. This will generally be a list of
            length one.
      required:
      - completions
    GenerateResultError:
      type: object
      properties:
        message:
          type: string
          description: The error message returned by the LLM provider.
      required:
      - message
    GenerateStreamBodyRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the deployment. Must provide either this or deployment_name.
        deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the deployment. Must provide either this or deployment_id.
        requests:
          type: array
          items:
            $ref: '#/components/schemas/GenerateRequest'
          description: The generation request to make. Bulk requests are no longer
            supported, this field must be an array of length 1.
        options:
          allOf:
          - $ref: '#/components/schemas/GenerateOptionsRequest'
          nullable: true
          description: Additional configuration that can be used to control what's
            included in the response.
      required:
      - requests
    GenerateStreamResponse:
      type: object
      properties:
        delta:
          $ref: '#/components/schemas/GenerateStreamResult'
      required:
      - delta
    GenerateStreamResult:
      type: object
      properties:
        request_index:
          type: integer
        data:
          $ref: '#/components/schemas/GenerateStreamResultData'
        error:
          $ref: '#/components/schemas/GenerateResultError'
      required:
      - request_index
    GenerateStreamResultData:
      type: object
      properties:
        completion_index:
          type: integer
        completion:
          $ref: '#/components/schemas/EnrichedNormalizedCompletion'
      required:
      - completion
      - completion_index
    ImageChatMessageContent:
      type: object
      description: An image value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          $ref: '#/components/schemas/VellumImage'
      required:
      - type
      - value
    ImageChatMessageContentRequest:
      type: object
      description: An image value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          $ref: '#/components/schemas/VellumImageRequest'
      required:
      - type
      - value
    ImageEnum:
      type: string
      enum:
      - IMAGE
    IndexingStateEnum:
      enum:
      - AWAITING_PROCESSING
      - QUEUED
      - INDEXING
      - INDEXED
      - FAILED
      type: string
      description: |-
        * `AWAITING_PROCESSING` - Awaiting Processing
        * `QUEUED` - Queued
        * `INDEXING` - Indexing
        * `INDEXED` - Indexed
        * `FAILED` - Failed
    InitiatedEnum:
      type: string
      enum:
      - INITIATED
    InitiatedExecutePromptEvent:
      type: object
      description: The initial data returned indicating that the response from the
        model has returned and begun streaming.
      properties:
        state:
          $ref: '#/components/schemas/InitiatedEnum'
        meta:
          $ref: '#/components/schemas/InitiatedPromptExecutionMeta'
        execution_id:
          type: string
      required:
      - execution_id
      - state
    InitiatedPromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        model_name:
          type: string
          nullable: true
        latency:
          type: integer
          nullable: true
        deployment_release_tag:
          type: string
          nullable: true
        prompt_version_id:
          type: string
          nullable: true
    JSONInputRequest:
      type: object
      description: A user input representing a JSON object
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the deployment.
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
      required:
      - name
      - type
      - value
    JsonEnum:
      type: string
      enum:
      - JSON
    JsonVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - type
      - value
    LogicalOperator:
      enum:
      - '='
      - '!='
      - <
      - '>'
      - <=
      - '>='
      - contains
      - beginsWith
      - endsWith
      - doesNotContain
      - doesNotBeginWith
      - doesNotEndWith
      - 'null'
      - notNull
      - in
      - notIn
      - between
      - notBetween
      type: string
      description: |-
        * `=` - EQUALS
        * `!=` - DOES_NOT_EQUAL
        * `<` - LESS_THAN
        * `>` - GREATER_THAN
        * `<=` - LESS_THAN_OR_EQUAL_TO
        * `>=` - GREATER_THAN_OR_EQUAL_TO
        * `contains` - CONTAINS
        * `beginsWith` - BEGINS_WITH
        * `endsWith` - ENDS_WITH
        * `doesNotContain` - DOES_NOT_CONTAIN
        * `doesNotBeginWith` - DOES_NOT_BEGIN_WITH
        * `doesNotEndWith` - DOES_NOT_END_WITH
        * `null` - NULL
        * `notNull` - NOT_NULL
        * `in` - IN
        * `notIn` - NOT_IN
        * `between` - BETWEEN
        * `notBetween` - NOT_BETWEEN
      x-fern-enum:
        '=':
          name: EQUALS
          description: Equals
        '!=':
          name: DOES_NOT_EQUAL
          description: Does not equal
        <:
          name: LESS_THAN
          description: Less than
        '>':
          name: GREATER_THAN
          description: Greater than
        <=:
          name: LESS_THAN_OR_EQUAL_TO
          description: Less than or equal to
        '>=':
          name: GREATER_THAN_OR_EQUAL_TO
          description: Greater than or equal to
        contains:
          name: CONTAINS
          description: Contains
        beginsWith:
          name: BEGINS_WITH
          description: Begins with
        endsWith:
          name: ENDS_WITH
          description: Ends with
        doesNotContain:
          name: DOES_NOT_CONTAIN
          description: Does not contain
        doesNotBeginWith:
          name: DOES_NOT_BEGIN_WITH
          description: Does not begin with
        doesNotEndWith:
          name: DOES_NOT_END_WITH
          description: Does not end with
        'null':
          name: 'NULL'
          description: 'Null'
        notNull:
          name: NOT_NULL
          description: Not null
        in:
          name: IN
          description: In
        notIn:
          name: NOT_IN
          description: Not in
        between:
          name: BETWEEN
          description: Between
        notBetween:
          name: NOT_BETWEEN
          description: Not between
    LogprobsEnum:
      enum:
      - ALL
      - NONE
      type: string
      description: |-
        * `ALL` - ALL
        * `NONE` - NONE
    MetadataFilterConfigRequest:
      type: object
      properties:
        combinator:
          allOf:
          - $ref: '#/components/schemas/MetadataFilterRuleCombinator'
          nullable: true
        negated:
          type: boolean
          nullable: true
        rules:
          type: array
          items:
            $ref: '#/components/schemas/MetadataFilterRuleRequest'
          nullable: true
        field:
          type: string
          nullable: true
          minLength: 1
        operator:
          allOf:
          - $ref: '#/components/schemas/LogicalOperator'
          nullable: true
        value:
          type: string
          nullable: true
          minLength: 1
    MetadataFilterRuleCombinator:
      enum:
      - and
      - or
      type: string
      description: |-
        * `and` - AND
        * `or` - OR
    MetadataFilterRuleRequest:
      type: object
      properties:
        combinator:
          allOf:
          - $ref: '#/components/schemas/MetadataFilterRuleCombinator'
          nullable: true
        negated:
          type: boolean
          nullable: true
        rules:
          type: array
          items:
            $ref: '#/components/schemas/MetadataFilterRuleRequest'
          nullable: true
        field:
          type: string
          nullable: true
          minLength: 1
        operator:
          allOf:
          - $ref: '#/components/schemas/LogicalOperator'
          nullable: true
        value:
          type: string
          nullable: true
          minLength: 1
    ModelVersionBuildConfig:
      type: object
      properties:
        base_model:
          type: string
          description: The name of the base model used to create this model version,
            as identified by the LLM provider.
        sandbox_snapshot:
          allOf:
          - $ref: '#/components/schemas/ModelVersionSandboxSnapshot'
          nullable: true
          description: Information about the sandbox snapshot that was used to create
            this model version, if applicable.
        prompt_version_id:
          type: string
          format: uuid
          nullable: true
      required:
      - base_model
    ModelVersionExecConfig:
      type: object
      properties:
        parameters:
          allOf:
          - $ref: '#/components/schemas/ModelVersionExecConfigParameters'
          description: The generation parameters that are passed to the LLM provider
            at runtime.
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
          description: Input variables specified in the prompt template.
        prompt_template:
          type: string
          nullable: true
          description: The template used to generate prompts for this model version.
        prompt_block_data:
          $ref: '#/components/schemas/PromptTemplateBlockData'
        prompt_syntax_version:
          type: integer
      required:
      - input_variables
      - parameters
    ModelVersionExecConfigParameters:
      type: object
      properties:
        temperature:
          type: number
          format: double
          nullable: true
        max_tokens:
          type: integer
          nullable: true
        top_p:
          type: number
          format: double
        frequency_penalty:
          type: number
          format: double
        presence_penalty:
          type: number
          format: double
        logit_bias:
          type: object
          additionalProperties:
            type: number
            format: double
          nullable: true
        stop:
          type: array
          items:
            type: string
          nullable: true
        top_k:
          type: number
          format: double
        custom_parameters:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - frequency_penalty
      - presence_penalty
      - top_p
    ModelVersionRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Vellum-generated ID that uniquely identifies this model version.
        created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of when this model version was created.
        label:
          type: string
          description: Human-friendly name for this model version.
          maxLength: 150
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          description: |-
            Which LLM provider this model version is associated with.

            * `ANTHROPIC` - Anthropic
            * `AWS_BEDROCK` - AWS Bedrock
            * `AZURE_OPENAI` - Azure OpenAI
            * `COHERE` - Cohere
            * `GOOGLE` - Google
            * `HOSTED` - Hosted
            * `MOSAICML` - MosaicML
            * `OPENAI` - OpenAI
            * `FIREWORKS_AI` - Fireworks AI
            * `HUGGINGFACE` - HuggingFace
            * `MYSTIC` - Mystic
            * `PYQ` - Pyq
            * `REPLICATE` - Replicate
        external_id:
          type: string
          description: The unique id of this model version as it exists in the above
            provider's system.
          maxLength: 250
        build_config:
          allOf:
          - $ref: '#/components/schemas/ModelVersionBuildConfig'
          description: Configuration used to build this model version.
        exec_config:
          allOf:
          - $ref: '#/components/schemas/ModelVersionExecConfig'
          description: Configuration used to execute this model version.
        status:
          $ref: '#/components/schemas/ModelVersionReadStatusEnum'
      required:
      - build_config
      - created
      - exec_config
      - external_id
      - id
      - label
      - provider
    ModelVersionReadStatusEnum:
      enum:
      - CREATING
      - READY
      - CREATION_FAILED
      - DISABLED
      type: string
      description: |-
        * `CREATING` - Creating
        * `READY` - Ready
        * `CREATION_FAILED` - Creation Failed
        * `DISABLED` - Disabled
    ModelVersionSandboxSnapshot:
      type: object
      properties:
        id:
          type: string
          description: The ID of the sandbox snapshot.
        prompt_index:
          type: integer
          minimum: 0
          description: The index of the prompt in the sandbox snapshot.
        prompt_id:
          type: string
          description: The id of the prompt in the sandbox snapshot.
        sandbox_id:
          type: string
          nullable: true
          readOnly: true
      required:
      - id
      - sandbox_id
    NamedTestCaseChatHistoryVariableValueRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
          nullable: true
      required:
      - name
      - type
      - value
    NamedTestCaseErrorVariableValueRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumErrorRequest'
          nullable: true
      required:
      - name
      - type
      - value
    NamedTestCaseJsonVariableValueRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - name
      - type
      - value
    NamedTestCaseNumberVariableValueRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - name
      - type
      - value
    NamedTestCaseSearchResultsVariableValueRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultRequest'
          nullable: true
      required:
      - name
      - type
      - value
    NamedTestCaseStringVariableValueRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - name
      - type
      - value
    NamedTestCaseVariableValueRequest:
      oneOf:
      - $ref: '#/components/schemas/NamedTestCaseStringVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseNumberVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseJsonVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseChatHistoryVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseSearchResultsVariableValueRequest'
      - $ref: '#/components/schemas/NamedTestCaseErrorVariableValueRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/NamedTestCaseStringVariableValueRequest'
          NUMBER: '#/components/schemas/NamedTestCaseNumberVariableValueRequest'
          JSON: '#/components/schemas/NamedTestCaseJsonVariableValueRequest'
          CHAT_HISTORY: '#/components/schemas/NamedTestCaseChatHistoryVariableValueRequest'
          SEARCH_RESULTS: '#/components/schemas/NamedTestCaseSearchResultsVariableValueRequest'
          ERROR: '#/components/schemas/NamedTestCaseErrorVariableValueRequest'
    NodeInputCompiledChatHistoryValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledErrorValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledJsonValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledNumberValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledSearchResultsValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputCompiledStringValue:
      type: object
      properties:
        node_input_id:
          type: string
        key:
          type: string
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - key
      - node_input_id
      - type
      - value
    NodeInputVariableCompiledValue:
      oneOf:
      - $ref: '#/components/schemas/NodeInputCompiledStringValue'
      - $ref: '#/components/schemas/NodeInputCompiledNumberValue'
      - $ref: '#/components/schemas/NodeInputCompiledJsonValue'
      - $ref: '#/components/schemas/NodeInputCompiledChatHistoryValue'
      - $ref: '#/components/schemas/NodeInputCompiledSearchResultsValue'
      - $ref: '#/components/schemas/NodeInputCompiledErrorValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/NodeInputCompiledStringValue'
          NUMBER: '#/components/schemas/NodeInputCompiledNumberValue'
          JSON: '#/components/schemas/NodeInputCompiledJsonValue'
          CHAT_HISTORY: '#/components/schemas/NodeInputCompiledChatHistoryValue'
          SEARCH_RESULTS: '#/components/schemas/NodeInputCompiledSearchResultsValue'
          ERROR: '#/components/schemas/NodeInputCompiledErrorValue'
    NormalizedLogProbs:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/NormalizedTokenLogProbs'
        likelihood:
          type: number
          format: double
          nullable: true
      required:
      - likelihood
      - tokens
    NormalizedTokenLogProbs:
      type: object
      properties:
        token:
          type: string
        logprob:
          type: number
          format: double
          nullable: true
        top_logprobs:
          type: object
          additionalProperties:
            type: number
            format: double
          nullable: true
        text_offset:
          type: integer
      required:
      - logprob
      - text_offset
      - token
      - top_logprobs
    NumberEnum:
      type: string
      enum:
      - NUMBER
    NumberVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - type
      - value
    PaginatedSlimDeploymentReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SlimDeploymentRead'
    PaginatedSlimDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SlimDocument'
    PaginatedSlimWorkflowDeploymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SlimWorkflowDeployment'
    PatchedDocumentUpdateRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-readable label for the document. Defaults to the originally
            uploaded file's file name.
          maxLength: 1000
        status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          description: |-
            The current status of the document

            * `ACTIVE` - Active
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A JSON object containing any metadata associated with the document
            that you'd like to filter upon later.
    ProcessingFailureReasonEnum:
      enum:
      - EXCEEDED_CHARACTER_LIMIT
      - INVALID_FILE
      type: string
      description: |-
        * `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit
        * `INVALID_FILE` - Invalid File
    ProcessingStateEnum:
      enum:
      - QUEUED
      - PROCESSING
      - PROCESSED
      - FAILED
      type: string
      description: |-
        * `QUEUED` - Queued
        * `PROCESSING` - Processing
        * `PROCESSED` - Processed
        * `FAILED` - Failed
    PromptDeploymentExpandMetaRequestRequest:
      type: object
      properties:
        model_name:
          type: boolean
          nullable: true
          description: If enabled, the response will include the model identifier
            representing the ML Model invoked by the Prompt Deployment.
        latency:
          type: boolean
          nullable: true
          description: If enabled, the response will include the time in nanoseconds
            it took to execute the Prompt Deployment.
        deployment_release_tag:
          type: boolean
          nullable: true
          description: If enabled, the response will include the release tag of the
            Prompt Deployment.
        prompt_version_id:
          type: boolean
          nullable: true
          description: If enabled, the response will include the ID of the Prompt
            Version backing the deployment.
        finish_reason:
          type: boolean
          nullable: true
          description: If enabled, the response will include the reason provided by
            the model for why the execution finished.
    PromptDeploymentInputRequest:
      oneOf:
      - $ref: '#/components/schemas/StringInputRequest'
      - $ref: '#/components/schemas/JSONInputRequest'
      - $ref: '#/components/schemas/ChatHistoryInputRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringInputRequest'
          JSON: '#/components/schemas/JSONInputRequest'
          CHAT_HISTORY: '#/components/schemas/ChatHistoryInputRequest'
    PromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        model_name:
          type: string
          nullable: true
        latency:
          type: integer
          nullable: true
        deployment_release_tag:
          type: string
          nullable: true
        prompt_version_id:
          type: string
          nullable: true
        finish_reason:
          allOf:
          - $ref: '#/components/schemas/FinishReasonEnum'
          nullable: true
    PromptNodeResult:
      type: object
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/PromptNodeResultData'
      required:
      - data
      - type
    PromptNodeResultData:
      type: object
      properties:
        output_id:
          type: string
        text:
          type: string
          nullable: true
        delta:
          type: string
          nullable: true
      required:
      - output_id
    PromptOutput:
      oneOf:
      - $ref: '#/components/schemas/StringVariableValue'
      - $ref: '#/components/schemas/JsonVariableValue'
      - $ref: '#/components/schemas/ErrorVariableValue'
      - $ref: '#/components/schemas/FunctionCallVariableValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringVariableValue'
          JSON: '#/components/schemas/JsonVariableValue'
          ERROR: '#/components/schemas/ErrorVariableValue'
          FUNCTION_CALL: '#/components/schemas/FunctionCallVariableValue'
    PromptTemplateBlock:
      type: object
      properties:
        id:
          type: string
        block_type:
          $ref: '#/components/schemas/BlockTypeEnum'
        properties:
          $ref: '#/components/schemas/PromptTemplateBlockProperties'
      required:
      - block_type
      - id
      - properties
    PromptTemplateBlockData:
      type: object
      properties:
        version:
          type: integer
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/PromptTemplateBlock'
      required:
      - blocks
      - version
    PromptTemplateBlockDataRequest:
      type: object
      properties:
        version:
          type: integer
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/PromptTemplateBlockRequest'
      required:
      - blocks
      - version
    PromptTemplateBlockProperties:
      type: object
      properties:
        chat_role:
          allOf:
          - $ref: '#/components/schemas/ChatMessageRole'
          nullable: true
        chat_message_unterminated:
          type: boolean
          default: false
        template:
          type: string
          nullable: true
        template_type:
          allOf:
          - $ref: '#/components/schemas/VellumVariableType'
          nullable: true
        function_name:
          type: string
          nullable: true
        function_description:
          type: string
          nullable: true
        function_parameters:
          type: object
          additionalProperties: {}
          nullable: true
        function_forced:
          type: boolean
          nullable: true
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/PromptTemplateBlock'
          nullable: true
    PromptTemplateBlockPropertiesRequest:
      type: object
      properties:
        chat_role:
          allOf:
          - $ref: '#/components/schemas/ChatMessageRole'
          nullable: true
        chat_message_unterminated:
          type: boolean
          default: false
        template:
          type: string
          nullable: true
        template_type:
          allOf:
          - $ref: '#/components/schemas/VellumVariableType'
          nullable: true
        function_name:
          type: string
          nullable: true
          minLength: 1
        function_description:
          type: string
          nullable: true
        function_parameters:
          type: object
          additionalProperties: {}
          nullable: true
        function_forced:
          type: boolean
          nullable: true
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/PromptTemplateBlockRequest'
          nullable: true
    PromptTemplateBlockRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
        block_type:
          $ref: '#/components/schemas/BlockTypeEnum'
        properties:
          $ref: '#/components/schemas/PromptTemplateBlockPropertiesRequest'
      required:
      - block_type
      - id
      - properties
    ProviderEnum:
      enum:
      - ANTHROPIC
      - AWS_BEDROCK
      - AZURE_OPENAI
      - COHERE
      - GOOGLE
      - HOSTED
      - MOSAICML
      - OPENAI
      - FIREWORKS_AI
      - HUGGINGFACE
      - MYSTIC
      - PYQ
      - REPLICATE
      type: string
      description: |-
        * `ANTHROPIC` - Anthropic
        * `AWS_BEDROCK` - AWS Bedrock
        * `AZURE_OPENAI` - Azure OpenAI
        * `COHERE` - Cohere
        * `GOOGLE` - Google
        * `HOSTED` - Hosted
        * `MOSAICML` - MosaicML
        * `OPENAI` - OpenAI
        * `FIREWORKS_AI` - Fireworks AI
        * `HUGGINGFACE` - HuggingFace
        * `MYSTIC` - Mystic
        * `PYQ` - Pyq
        * `REPLICATE` - Replicate
    RawPromptExecutionOverridesRequest:
      type: object
      properties:
        body:
          type: object
          additionalProperties: {}
          nullable: true
        headers:
          type: object
          additionalProperties:
            type: string
            minLength: 1
          nullable: true
          description: The raw headers to send to the model host.
        url:
          type: string
          nullable: true
          minLength: 1
          description: The raw URL to send to the model host.
    RegisterPromptErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    RegisterPromptModelParametersRequest:
      type: object
      properties:
        temperature:
          type: number
          format: double
        max_tokens:
          type: integer
        stop:
          type: array
          items:
            type: string
          nullable: true
        top_p:
          type: number
          format: double
        top_k:
          type: integer
        frequency_penalty:
          type: number
          format: double
        presence_penalty:
          type: number
          format: double
        logit_bias:
          type: object
          additionalProperties:
            type: number
            format: double
          nullable: true
        custom_parameters:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - frequency_penalty
      - max_tokens
      - presence_penalty
      - stop
      - temperature
      - top_p
    RegisterPromptPrompt:
      type: object
      properties:
        id:
          type: string
          description: The ID of the generated prompt.
        label:
          type: string
          description: A human-friendly label for the generated prompt.
      required:
      - id
      - label
    RegisterPromptPromptInfoRequest:
      type: object
      properties:
        prompt_block_data:
          $ref: '#/components/schemas/PromptTemplateBlockDataRequest'
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/RegisteredPromptInputVariableRequest'
          description: The input variables specified in the prompt template.
      required:
      - input_variables
      - prompt_block_data
    RegisterPromptRequestRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: A human-friendly label for corresponding entities created in
            Vellum.
        name:
          type: string
          minLength: 1
          description: A uniquely-identifying name for corresponding entities created
            in Vellum.
        prompt:
          allOf:
          - $ref: '#/components/schemas/RegisterPromptPromptInfoRequest'
          description: Information about how to execute the prompt template.
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          description: |-
            The initial LLM provider to use for this prompt

            * `ANTHROPIC` - Anthropic
            * `AWS_BEDROCK` - AWS Bedrock
            * `AZURE_OPENAI` - Azure OpenAI
            * `COHERE` - Cohere
            * `GOOGLE` - Google
            * `HOSTED` - Hosted
            * `MOSAICML` - MosaicML
            * `OPENAI` - OpenAI
            * `FIREWORKS_AI` - Fireworks AI
            * `HUGGINGFACE` - HuggingFace
            * `MYSTIC` - Mystic
            * `PYQ` - Pyq
            * `REPLICATE` - Replicate
        model:
          type: string
          minLength: 1
          description: The initial model to use for this prompt
        parameters:
          allOf:
          - $ref: '#/components/schemas/RegisterPromptModelParametersRequest'
          description: The initial model parameters to use for  this prompt
        meta:
          type: object
          additionalProperties: {}
          description: Optionally include additional metadata to store along with
            the prompt.
      required:
      - label
      - model
      - name
      - parameters
      - prompt
    RegisterPromptResponse:
      type: object
      properties:
        prompt:
          allOf:
          - $ref: '#/components/schemas/RegisterPromptPrompt'
          description: Information about the generated prompt
        sandbox_snapshot:
          allOf:
          - $ref: '#/components/schemas/RegisteredPromptSandboxSnapshot'
          description: Information about the generated sandbox snapshot
        sandbox:
          allOf:
          - $ref: '#/components/schemas/RegisteredPromptSandbox'
          description: Information about the generated sandbox
        model_version:
          allOf:
          - $ref: '#/components/schemas/RegisteredPromptModelVersion'
          description: Information about the generated model version
          deprecated: true
        prompt_version_id:
          type: string
          format: uuid
          description: The ID of the generated prompt version
        deployment:
          allOf:
          - $ref: '#/components/schemas/RegisteredPromptDeployment'
          description: Information about the generated deployment
      required:
      - deployment
      - model_version
      - prompt
      - prompt_version_id
      - sandbox
      - sandbox_snapshot
    RegisteredPromptDeployment:
      type: object
      properties:
        id:
          type: string
          description: The ID of the generated deployment.
        name:
          type: string
          description: A uniquely-identifying name for generated deployment.
        label:
          type: string
          description: A human-friendly label for the generated deployment.
      required:
      - id
      - label
      - name
    RegisteredPromptInputVariableRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        id:
          type: string
          minLength: 1
        type:
          allOf:
          - $ref: '#/components/schemas/VellumVariableType'
          default: STRING
      required:
      - key
    RegisteredPromptModelVersion:
      type: object
      properties:
        id:
          type: string
          description: The ID of the generated model version.
        label:
          type: string
          description: A human-friendly label for the generated model version.
      required:
      - id
      - label
    RegisteredPromptSandbox:
      type: object
      properties:
        id:
          type: string
          description: The ID of the generated sandbox.
        label:
          type: string
          description: A human-friendly label for the generated sandbox.
      required:
      - id
      - label
    RegisteredPromptSandboxSnapshot:
      type: object
      properties:
        id:
          type: string
          description: The ID of the generated sandbox snapshot.
      required:
      - id
    RejectedEnum:
      type: string
      enum:
      - REJECTED
    RejectedExecutePromptEvent:
      type: object
      description: The final data returned indicating an error occurred during the
        stream.
      properties:
        state:
          $ref: '#/components/schemas/RejectedEnum'
        error:
          $ref: '#/components/schemas/VellumError'
        execution_id:
          type: string
        meta:
          $ref: '#/components/schemas/RejectedPromptExecutionMeta'
      required:
      - error
      - execution_id
      - state
    RejectedExecutePromptResponse:
      type: object
      description: The unsuccessful response from the model containing an error of
        what went wrong.
      properties:
        meta:
          $ref: '#/components/schemas/PromptExecutionMeta'
        raw:
          type: object
          additionalProperties: {}
          description: The subset of the raw response from the model that the request
            opted into with `expand_raw`.
        execution_id:
          type: string
          description: The ID of the execution.
        state:
          $ref: '#/components/schemas/RejectedEnum'
        error:
          $ref: '#/components/schemas/VellumError'
      required:
      - error
      - execution_id
      - state
    RejectedExecuteWorkflowWorkflowResultEvent:
      type: object
      description: The unsuccessful response from the Workflow execution containing
        an error specifying what went wrong.
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/RejectedEnum'
        ts:
          type: string
          format: date-time
        error:
          $ref: '#/components/schemas/WorkflowEventError'
      required:
      - error
      - id
      - state
      - ts
    RejectedFunctionCall:
      type: object
      description: Returned if the function call failed to parse for some reason.
      properties:
        state:
          $ref: '#/components/schemas/RejectedEnum'
        error:
          $ref: '#/components/schemas/VellumError'
        id:
          type: string
          nullable: true
        name:
          type: string
      required:
      - error
      - name
      - state
    RejectedPromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        latency:
          type: integer
          nullable: true
        finish_reason:
          allOf:
          - $ref: '#/components/schemas/FinishReasonEnum'
          nullable: true
    SandboxMetricInputParams:
      type: object
      properties:
        params:
          allOf:
          - $ref: '#/components/schemas/EvaluationParams'
          nullable: true
    SandboxMetricInputParamsRequest:
      type: object
      properties:
        params:
          allOf:
          - $ref: '#/components/schemas/EvaluationParamsRequest'
          nullable: true
    SandboxScenario:
      type: object
      properties:
        label:
          type: string
          default: Untitled Scenario
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioInput'
          description: The inputs for the scenario
        id:
          type: string
          description: The id of the scenario
        metric_input_params:
          $ref: '#/components/schemas/SandboxMetricInputParams'
      required:
      - id
      - inputs
      - metric_input_params
    ScenarioInput:
      type: object
      properties:
        key:
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/ScenarioInputTypeEnum'
          nullable: true
          default: TEXT
        value:
          type: string
          nullable: true
        chat_history:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - key
    ScenarioInputRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        type:
          allOf:
          - $ref: '#/components/schemas/ScenarioInputTypeEnum'
          nullable: true
          default: TEXT
        value:
          type: string
          nullable: true
        chat_history:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
          nullable: true
      required:
      - key
    ScenarioInputTypeEnum:
      enum:
      - TEXT
      - CHAT_HISTORY
      type: string
      description: |-
        * `TEXT` - TEXT
        * `CHAT_HISTORY` - CHAT_HISTORY
    SearchErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Details about why the request failed.
      required:
      - detail
    SearchFiltersRequest:
      type: object
      properties:
        external_ids:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: The document external IDs to filter by
        metadata:
          allOf:
          - $ref: '#/components/schemas/MetadataFilterConfigRequest'
          nullable: true
          description: The metadata filters to apply to the search
    SearchNodeResult:
      type: object
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/SearchNodeResultData'
      required:
      - data
      - type
    SearchNodeResultData:
      type: object
      properties:
        results_output_id:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          description: The results of the search. Each result represents a chunk that
            matches the search query.
        text_output_id:
          type: string
        text:
          type: string
          nullable: true
      required:
      - results
      - results_output_id
      - text_output_id
    SearchRequestBodyRequest:
      type: object
      properties:
        index_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the index to search against. Must provide either
            this or index_name.
        index_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the index to search against. Must provide either
            this or index_id.
        query:
          type: string
          minLength: 1
          description: The query to search for.
        options:
          allOf:
          - $ref: '#/components/schemas/SearchRequestOptionsRequest'
          nullable: true
          description: Configuration options for the search.
      required:
      - query
    SearchRequestOptionsRequest:
      type: object
      properties:
        limit:
          type: integer
          maximum: 1000
          minimum: 1
          nullable: true
          default: 10
          description: The maximum number of results to return.
        weights:
          allOf:
          - $ref: '#/components/schemas/SearchWeightsRequest'
          nullable: true
          description: The weights to use for the search. Must add up to 1.0.
        result_merging:
          allOf:
          - $ref: '#/components/schemas/SearchResultMergingRequest'
          nullable: true
          description: The configuration for merging results.
        filters:
          allOf:
          - $ref: '#/components/schemas/SearchFiltersRequest'
          nullable: true
          description: The filters to apply to the search.
    SearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          description: The results of the search. Each result represents a chunk that
            matches the search query.
      required:
      - results
    SearchResult:
      type: object
      properties:
        text:
          type: string
          description: The text of the chunk that matched the search query.
        score:
          type: number
          format: double
          description: A score representing how well the chunk matches the search
            query.
        keywords:
          type: array
          items:
            type: string
        document:
          allOf:
          - $ref: '#/components/schemas/SearchResultDocument'
          description: The document that contains the chunk that matched the search
            query.
      required:
      - document
      - keywords
      - score
      - text
    SearchResultDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: The ID of the document.
        label:
          type: string
          description: The human-readable name for the document.
          maxLength: 1000
        external_id:
          type: string
          nullable: true
          description: The unique ID of the document as represented in an external
            system and specified when it was originally uploaded.
          maxLength: 1000
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A previously supplied JSON object containing metadata that
            can be filtered on when searching.
      required:
      - id
      - label
    SearchResultDocumentRequest:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          description: The human-readable name for the document.
          maxLength: 1000
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: The unique ID of the document as represented in an external
            system and specified when it was originally uploaded.
          maxLength: 1000
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A previously supplied JSON object containing metadata that
            can be filtered on when searching.
      required:
      - label
    SearchResultMergingRequest:
      type: object
      properties:
        enabled:
          type: boolean
          default: true
          description: Whether to enable merging results
    SearchResultRequest:
      type: object
      properties:
        text:
          type: string
          minLength: 1
          description: The text of the chunk that matched the search query.
        score:
          type: number
          format: double
          description: A score representing how well the chunk matches the search
            query.
        keywords:
          type: array
          items:
            type: string
            minLength: 1
        document:
          allOf:
          - $ref: '#/components/schemas/SearchResultDocumentRequest'
          description: The document that contains the chunk that matched the search
            query.
      required:
      - document
      - keywords
      - score
      - text
    SearchResultsEnum:
      type: string
      enum:
      - SEARCH_RESULTS
    SearchResultsVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - type
      - value
    SearchWeightsRequest:
      type: object
      properties:
        semantic_similarity:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.8
          description: The relative weight to give to semantic similarity
        keywords:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
          default: 0.2
          description: The relative weight to give to keywords
    SlimDeploymentRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        label:
          type: string
          description: A human-readable label for the deployment
          maxLength: 150
        name:
          type: string
          description: A name that uniquely identifies this deployment within its
            workspace
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the deployment

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this deployment is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        last_deployed_on:
          type: string
          format: date-time
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
      required:
      - created
      - id
      - input_variables
      - label
      - last_deployed_on
      - name
    SlimDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Vellum-generated ID that uniquely identifies this document.
        external_id:
          type: string
          nullable: true
          description: The external ID that was originally provided when uploading
            the document.
          maxLength: 1000
        last_uploaded_at:
          type: string
          format: date-time
          description: A timestamp representing when this document was most recently
            uploaded.
        label:
          type: string
          description: Human-friendly name for this document.
          maxLength: 1000
        processing_state:
          allOf:
          - $ref: '#/components/schemas/ProcessingStateEnum'
          description: |-
            An enum value representing where this document is along its processing lifecycle. Note that this is different than its indexing lifecycle.

            * `QUEUED` - Queued
            * `PROCESSING` - Processing
            * `PROCESSED` - Processed
            * `FAILED` - Failed
        processing_failure_reason:
          allOf:
          - $ref: '#/components/schemas/ProcessingFailureReasonEnum'
          nullable: true
          description: |-
            An enum value representing why the document could not be processed. Is null unless processing_state is FAILED.

            * `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit
            * `INVALID_FILE` - Invalid File
        status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          description: |-
            The document's current status.

            * `ACTIVE` - Active
        keywords:
          type: array
          items:
            type: string
          description: A list of keywords associated with this document. Originally
            provided when uploading the document.
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
          description: A previously supplied JSON object containing metadata that
            can be filtered on when searching.
        document_to_document_indexes:
          type: array
          items:
            $ref: '#/components/schemas/DocumentDocumentToDocumentIndex'
      required:
      - document_to_document_indexes
      - id
      - label
      - last_uploaded_at
    SlimWorkflowDeployment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: A name that uniquely identifies this workflow deployment within
            its workspace
          maxLength: 150
        label:
          type: string
          description: A human-readable label for the workflow deployment
          maxLength: 150
        status:
          allOf:
          - $ref: '#/components/schemas/EntityStatus'
          description: |-
            The current status of the workflow deployment

            * `ACTIVE` - Active
            * `ARCHIVED` - Archived
        environment:
          allOf:
          - $ref: '#/components/schemas/EnvironmentEnum'
          description: |-
            The environment this workflow deployment is used in

            * `DEVELOPMENT` - Development
            * `STAGING` - Staging
            * `PRODUCTION` - Production
        created:
          type: string
          format: date-time
          readOnly: true
        last_deployed_on:
          type: string
          format: date-time
        input_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
          description: The input variables this Workflow Deployment expects to receive
            values for when it is executed.
        output_variables:
          type: array
          items:
            $ref: '#/components/schemas/VellumVariable'
          description: The output variables this Workflow Deployment will produce
            when it is executed.
      required:
      - created
      - id
      - input_variables
      - label
      - last_deployed_on
      - name
      - output_variables
    StreamingEnum:
      type: string
      enum:
      - STREAMING
    StreamingExecutePromptEvent:
      type: object
      description: The data returned for each delta during the prompt execution stream.
      properties:
        state:
          $ref: '#/components/schemas/StreamingEnum'
        output:
          $ref: '#/components/schemas/PromptOutput'
        output_index:
          type: integer
        execution_id:
          type: string
        meta:
          $ref: '#/components/schemas/StreamingPromptExecutionMeta'
        raw:
          type: object
          additionalProperties: {}
          description: The subset of the raw response from the model that the request
            opted into with `expand_raw`.
      required:
      - execution_id
      - output
      - output_index
      - state
    StreamingPromptExecutionMeta:
      type: object
      description: The subset of the metadata tracked by Vellum during prompt execution
        that the request opted into with `expand_meta`.
      properties:
        latency:
          type: integer
          nullable: true
    StringChatMessageContent:
      type: object
      description: A string value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
      required:
      - type
      - value
    StringChatMessageContentRequest:
      type: object
      description: A string value that is used in a chat message.
      properties:
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
      required:
      - type
      - value
    StringEnum:
      type: string
      enum:
      - STRING
    StringInputRequest:
      type: object
      description: A user input representing a string value
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the deployment.
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
    StringVariableValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - type
      - value
    SubmitCompletionActualRequest:
      type: object
      properties:
        id:
          type: string
          nullable: true
          minLength: 1
          description: The Vellum-generated ID of a previously generated completion.
            Must provide either this or external_id.
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: The external ID that was originally provided when generating
            the completion that you'd now like to submit actuals for. Must provide
            either this or id.
        text:
          type: string
          nullable: true
          description: Text representing what the completion _should_ have been.
        quality:
          type: number
          format: double
          maximum: 1
          minimum: 0
          nullable: true
          description: A number between 0 and 1 representing the quality of the completion.
            0 is the worst, 1 is the best.
        timestamp:
          type: string
          format: date-time
          nullable: true
          description: Optionally provide the timestamp representing when this feedback
            was collected. Used for reporting purposes.
    SubmitCompletionActualsErrorResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    SubmitCompletionActualsRequest:
      type: object
      properties:
        deployment_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the deployment. Must provide either this or deployment_name.
        deployment_name:
          type: string
          nullable: true
          minLength: 1
          description: The name of the deployment. Must provide either this or deployment_id.
        actuals:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCompletionActualRequest'
          description: Feedback regarding the quality of previously generated completions
      required:
      - actuals
    SubmitWorkflowExecutionActualRequest:
      oneOf:
      - $ref: '#/components/schemas/WorkflowExecutionActualStringRequest'
      - $ref: '#/components/schemas/WorkflowExecutionActualJsonRequest'
      - $ref: '#/components/schemas/WorkflowExecutionActualChatHistoryRequest'
      discriminator:
        propertyName: output_type
        mapping:
          STRING: '#/components/schemas/WorkflowExecutionActualStringRequest'
          JSON: '#/components/schemas/WorkflowExecutionActualJsonRequest'
          CHAT_HISTORY: '#/components/schemas/WorkflowExecutionActualChatHistoryRequest'
    SubmitWorkflowExecutionActualsRequest:
      type: object
      properties:
        actuals:
          type: array
          items:
            $ref: '#/components/schemas/SubmitWorkflowExecutionActualRequest'
          description: Feedback regarding the quality of an output on a previously
            executed workflow.
        execution_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of a previously executed workflow.
            Must provide either this or external_id.
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: The external ID that was originally provided by when executing
            the workflow, if applicable, that you'd now like to submit actuals for.
            Must provide either this or execution_id.
      required:
      - actuals
    TemplatingNodeChatHistoryResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeErrorResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeJsonResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeNumberResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeResult:
      type: object
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/TemplatingNodeResultData'
      required:
      - data
      - type
    TemplatingNodeResultData:
      type: object
      properties:
        output:
          $ref: '#/components/schemas/TemplatingNodeResultOutput'
      required:
      - output
    TemplatingNodeResultOutput:
      oneOf:
      - $ref: '#/components/schemas/TemplatingNodeStringResult'
      - $ref: '#/components/schemas/TemplatingNodeNumberResult'
      - $ref: '#/components/schemas/TemplatingNodeJsonResult'
      - $ref: '#/components/schemas/TemplatingNodeChatHistoryResult'
      - $ref: '#/components/schemas/TemplatingNodeSearchResultsResult'
      - $ref: '#/components/schemas/TemplatingNodeErrorResult'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/TemplatingNodeStringResult'
          NUMBER: '#/components/schemas/TemplatingNodeNumberResult'
          JSON: '#/components/schemas/TemplatingNodeJsonResult'
          CHAT_HISTORY: '#/components/schemas/TemplatingNodeChatHistoryResult'
          SEARCH_RESULTS: '#/components/schemas/TemplatingNodeSearchResultsResult'
          ERROR: '#/components/schemas/TemplatingNodeErrorResult'
    TemplatingNodeSearchResultsResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - id
      - type
      - value
    TemplatingNodeStringResult:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - id
      - type
      - value
    TerminalNodeChatHistoryResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeErrorResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeJsonResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeNumberResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeResult:
      type: object
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/TerminalNodeResultData'
      required:
      - data
      - type
    TerminalNodeResultData:
      type: object
      properties:
        output:
          $ref: '#/components/schemas/TerminalNodeResultOutput'
      required:
      - output
    TerminalNodeResultOutput:
      oneOf:
      - $ref: '#/components/schemas/TerminalNodeStringResult'
      - $ref: '#/components/schemas/TerminalNodeNumberResult'
      - $ref: '#/components/schemas/TerminalNodeJsonResult'
      - $ref: '#/components/schemas/TerminalNodeChatHistoryResult'
      - $ref: '#/components/schemas/TerminalNodeSearchResultsResult'
      - $ref: '#/components/schemas/TerminalNodeErrorResult'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/TerminalNodeStringResult'
          NUMBER: '#/components/schemas/TerminalNodeNumberResult'
          JSON: '#/components/schemas/TerminalNodeJsonResult'
          CHAT_HISTORY: '#/components/schemas/TerminalNodeChatHistoryResult'
          SEARCH_RESULTS: '#/components/schemas/TerminalNodeSearchResultsResult'
          ERROR: '#/components/schemas/TerminalNodeErrorResult'
    TerminalNodeSearchResultsResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - name
      - type
      - value
    TerminalNodeStringResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          description: The unique name given to the terminal node that produced this
            output.
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - name
      - type
      - value
    TestCaseChatHistoryVariableValue:
      type: object
      properties:
        variable_id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - type
      - value
      - variable_id
    TestCaseErrorVariableValue:
      type: object
      properties:
        variable_id:
          type: string
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - type
      - value
      - variable_id
    TestCaseJsonVariableValue:
      type: object
      properties:
        variable_id:
          type: string
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - type
      - value
      - variable_id
    TestCaseNumberVariableValue:
      type: object
      properties:
        variable_id:
          type: string
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - type
      - value
      - variable_id
    TestCaseSearchResultsVariableValue:
      type: object
      properties:
        variable_id:
          type: string
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - type
      - value
      - variable_id
    TestCaseStringVariableValue:
      type: object
      properties:
        variable_id:
          type: string
        type:
          type: string
        value:
          type: string
          nullable: true
      required:
      - type
      - value
      - variable_id
    TestCaseVariableValue:
      oneOf:
      - $ref: '#/components/schemas/TestCaseStringVariableValue'
      - $ref: '#/components/schemas/TestCaseNumberVariableValue'
      - $ref: '#/components/schemas/TestCaseJsonVariableValue'
      - $ref: '#/components/schemas/TestCaseChatHistoryVariableValue'
      - $ref: '#/components/schemas/TestCaseSearchResultsVariableValue'
      - $ref: '#/components/schemas/TestCaseErrorVariableValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/TestCaseStringVariableValue'
          NUMBER: '#/components/schemas/TestCaseNumberVariableValue'
          JSON: '#/components/schemas/TestCaseJsonVariableValue'
          CHAT_HISTORY: '#/components/schemas/TestCaseChatHistoryVariableValue'
          SEARCH_RESULTS: '#/components/schemas/TestCaseSearchResultsVariableValue'
          ERROR: '#/components/schemas/TestCaseErrorVariableValue'
    TestSuiteTestCase:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
          nullable: true
        input_values:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseVariableValue'
        evaluation_values:
          type: array
          items:
            $ref: '#/components/schemas/TestCaseVariableValue'
      required:
      - evaluation_values
      - input_values
    UploadDocumentBodyRequest:
      type: object
      properties:
        add_to_index_names:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally include the names of all indexes that you'd like
            this document to be included in
        external_id:
          type: string
          nullable: true
          minLength: 1
          description: Optionally include an external ID for this document. This is
            useful if you want to re-upload the same document later when its contents
            change and would like it to be re-indexed.
        label:
          type: string
          minLength: 1
          description: A human-friendly name for this document. Typically the filename.
        contents:
          type: string
          format: binary
          description: The file contents of the document.
        keywords:
          type: array
          items:
            type: string
            minLength: 1
          nullable: true
          description: Optionally include a list of keywords that'll be associated
            with this document. Used when performing keyword searches.
        metadata:
          type: string
          format: byte
          nullable: true
          description: A stringified JSON object containing any metadata associated
            with the document that you'd like to filter upon later.
      required:
      - contents
      - label
    UploadDocumentErrorResponse:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    UploadDocumentResponse:
      type: object
      properties:
        document_id:
          type: string
          format: uuid
          description: The ID of the newly created document.
      required:
      - document_id
    UpsertSandboxScenarioRequestRequest:
      type: object
      properties:
        label:
          type: string
          default: Untitled Scenario
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioInputRequest'
          description: The inputs for the scenario
        scenario_id:
          type: string
          minLength: 1
          description: The id of the scenario to update. If none is provided, an id
            will be generated and a new scenario will be appended.
        metric_input_params:
          $ref: '#/components/schemas/SandboxMetricInputParamsRequest'
      required:
      - inputs
    UpsertTestSuiteTestCaseRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
        label:
          type: string
          nullable: true
        input_values:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
        evaluation_values:
          type: array
          items:
            $ref: '#/components/schemas/NamedTestCaseVariableValueRequest'
      required:
      - evaluation_values
      - input_values
    VariableValue:
      oneOf:
      - $ref: '#/components/schemas/StringVariableValue'
      - $ref: '#/components/schemas/NumberVariableValue'
      - $ref: '#/components/schemas/JsonVariableValue'
      - $ref: '#/components/schemas/ChatHistoryVariableValue'
      - $ref: '#/components/schemas/SearchResultsVariableValue'
      - $ref: '#/components/schemas/ErrorVariableValue'
      - $ref: '#/components/schemas/ArrayVariableValue'
      - $ref: '#/components/schemas/FunctionCallVariableValue'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/StringVariableValue'
          NUMBER: '#/components/schemas/NumberVariableValue'
          JSON: '#/components/schemas/JsonVariableValue'
          CHAT_HISTORY: '#/components/schemas/ChatHistoryVariableValue'
          SEARCH_RESULTS: '#/components/schemas/SearchResultsVariableValue'
          ERROR: '#/components/schemas/ErrorVariableValue'
          ARRAY: '#/components/schemas/ArrayVariableValue'
          FUNCTION_CALL: '#/components/schemas/FunctionCallVariableValue'
    VellumError:
      type: object
      properties:
        message:
          type: string
        code:
          $ref: '#/components/schemas/VellumErrorCodeEnum'
      required:
      - code
      - message
    VellumErrorCodeEnum:
      enum:
      - INVALID_REQUEST
      - PROVIDER_ERROR
      - INTERNAL_SERVER_ERROR
      type: string
      description: |-
        * `INVALID_REQUEST` - INVALID_REQUEST
        * `PROVIDER_ERROR` - PROVIDER_ERROR
        * `INTERNAL_SERVER_ERROR` - INTERNAL_SERVER_ERROR
    VellumErrorRequest:
      type: object
      properties:
        message:
          type: string
          minLength: 1
        code:
          $ref: '#/components/schemas/VellumErrorCodeEnum'
      required:
      - code
      - message
    VellumImage:
      type: object
      properties:
        src:
          type: string
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - src
    VellumImageRequest:
      type: object
      properties:
        src:
          type: string
          minLength: 1
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - src
    VellumVariable:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        type:
          $ref: '#/components/schemas/VellumVariableType'
      required:
      - id
      - key
      - type
    VellumVariableType:
      enum:
      - STRING
      - NUMBER
      - JSON
      - CHAT_HISTORY
      - SEARCH_RESULTS
      - ERROR
      - ARRAY
      - FUNCTION_CALL
      - IMAGE
      type: string
      description: |-
        * `STRING` - STRING
        * `NUMBER` - NUMBER
        * `JSON` - JSON
        * `CHAT_HISTORY` - CHAT_HISTORY
        * `SEARCH_RESULTS` - SEARCH_RESULTS
        * `ERROR` - ERROR
        * `ARRAY` - ARRAY
        * `FUNCTION_CALL` - FUNCTION_CALL
        * `IMAGE` - IMAGE
    WorkflowEventError:
      type: object
      properties:
        message:
          type: string
        code:
          $ref: '#/components/schemas/WorkflowExecutionEventErrorCode'
      required:
      - code
      - message
    WorkflowExecutionActualChatHistoryRequest:
      type: object
      properties:
        output_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of a workflow output. Must provide
            either this or output_key. output_key is typically preferred.
        output_key:
          type: string
          nullable: true
          minLength: 1
          description: The user-defined name of a workflow output. Must provide either
            this or output_id. Should correspond to the `Name` specified in a Final
            Output Node. Generally preferred over output_id.
        quality:
          type: number
          format: double
          nullable: true
          description: Optionally provide a decimal number between 0.0 and 1.0 (inclusive)
            representing the quality of the output. 0 is the worst, 1 is the best.
        timestamp:
          type: number
          format: double
          nullable: true
          description: Optionally provide the timestamp representing when this feedback
            was collected. Used for reporting purposes.
        output_type:
          type: string
          description: The variable type of the output that this actual is being submitted
            for.
        desired_output_value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
          nullable: true
          description: Optionally provide the value that the output ideally should
            have been.
      required:
      - output_type
    WorkflowExecutionActualJsonRequest:
      type: object
      properties:
        output_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of a workflow output. Must provide
            either this or output_key. output_key is typically preferred.
        output_key:
          type: string
          nullable: true
          minLength: 1
          description: The user-defined name of a workflow output. Must provide either
            this or output_id. Should correspond to the `Name` specified in a Final
            Output Node. Generally preferred over output_id.
        quality:
          type: number
          format: double
          nullable: true
          description: Optionally provide a decimal number between 0.0 and 1.0 (inclusive)
            representing the quality of the output. 0 is the worst, 1 is the best.
        timestamp:
          type: number
          format: double
          nullable: true
          description: Optionally provide the timestamp representing when this feedback
            was collected. Used for reporting purposes.
        output_type:
          type: string
          description: The variable type of the output that this actual is being submitted
            for.
        desired_output_value:
          type: object
          additionalProperties: {}
          nullable: true
          description: Optionally provide the value that the output ideally should
            have been.
      required:
      - output_type
    WorkflowExecutionActualStringRequest:
      type: object
      properties:
        output_id:
          type: string
          format: uuid
          nullable: true
          description: The Vellum-generated ID of a workflow output. Must provide
            either this or output_key. output_key is typically preferred.
        output_key:
          type: string
          nullable: true
          minLength: 1
          description: The user-defined name of a workflow output. Must provide either
            this or output_id. Should correspond to the `Name` specified in a Final
            Output Node. Generally preferred over output_id.
        quality:
          type: number
          format: double
          nullable: true
          description: Optionally provide a decimal number between 0.0 and 1.0 (inclusive)
            representing the quality of the output. 0 is the worst, 1 is the best.
        timestamp:
          type: number
          format: double
          nullable: true
          description: Optionally provide the timestamp representing when this feedback
            was collected. Used for reporting purposes.
        output_type:
          type: string
          description: The variable type of the output that this actual is being submitted
            for.
        desired_output_value:
          type: string
          nullable: true
          description: Optionally provide the value that the output ideally should
            have been.
      required:
      - output_type
    WorkflowExecutionEventErrorCode:
      enum:
      - WORKFLOW_INITIALIZATION
      - NODE_EXECUTION_COUNT_LIMIT_REACHED
      - INTERNAL_SERVER_ERROR
      - NODE_EXECUTION
      - LLM_PROVIDER
      - INVALID_TEMPLATE
      type: string
      description: |-
        * `WORKFLOW_INITIALIZATION` - WORKFLOW_INITIALIZATION
        * `NODE_EXECUTION_COUNT_LIMIT_REACHED` - NODE_EXECUTION_COUNT_LIMIT_REACHED
        * `INTERNAL_SERVER_ERROR` - INTERNAL_SERVER_ERROR
        * `NODE_EXECUTION` - NODE_EXECUTION
        * `LLM_PROVIDER` - LLM_PROVIDER
        * `INVALID_TEMPLATE` - INVALID_TEMPLATE
    WorkflowExecutionEventType:
      enum:
      - NODE
      - WORKFLOW
      type: string
      description: |-
        * `NODE` - Node
        * `WORKFLOW` - Workflow
    WorkflowExecutionNodeResultEvent:
      type: object
      properties:
        execution_id:
          type: string
        run_id:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
        type:
          type: string
        data:
          $ref: '#/components/schemas/WorkflowNodeResultEvent'
      required:
      - data
      - execution_id
      - type
    WorkflowExecutionWorkflowResultEvent:
      type: object
      properties:
        execution_id:
          type: string
        run_id:
          type: string
          nullable: true
          deprecated: true
        external_id:
          type: string
          nullable: true
        type:
          type: string
        data:
          $ref: '#/components/schemas/WorkflowResultEvent'
      required:
      - data
      - execution_id
      - type
    WorkflowNodeResultData:
      oneOf:
      - $ref: '#/components/schemas/PromptNodeResult'
      - $ref: '#/components/schemas/SearchNodeResult'
      - $ref: '#/components/schemas/TemplatingNodeResult'
      - $ref: '#/components/schemas/CodeExecutionNodeResult'
      - $ref: '#/components/schemas/ConditionalNodeResult'
      - $ref: '#/components/schemas/ApiNodeResult'
      - $ref: '#/components/schemas/TerminalNodeResult'
      discriminator:
        propertyName: type
        mapping:
          PROMPT: '#/components/schemas/PromptNodeResult'
          SEARCH: '#/components/schemas/SearchNodeResult'
          TEMPLATING: '#/components/schemas/TemplatingNodeResult'
          CODE_EXECUTION: '#/components/schemas/CodeExecutionNodeResult'
          CONDITIONAL: '#/components/schemas/ConditionalNodeResult'
          API: '#/components/schemas/ApiNodeResult'
          TERMINAL: '#/components/schemas/TerminalNodeResult'
    WorkflowNodeResultEvent:
      type: object
      properties:
        id:
          type: string
        node_id:
          type: string
        node_result_id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        ts:
          type: string
          format: date-time
          nullable: true
        data:
          allOf:
          - $ref: '#/components/schemas/WorkflowNodeResultData'
          nullable: true
        error:
          allOf:
          - $ref: '#/components/schemas/WorkflowEventError'
          nullable: true
        input_values:
          type: array
          items:
            $ref: '#/components/schemas/NodeInputVariableCompiledValue'
          nullable: true
      required:
      - data
      - id
      - node_id
      - node_result_id
      - state
    WorkflowNodeResultEventState:
      enum:
      - INITIATED
      - STREAMING
      - FULFILLED
      - REJECTED
      type: string
      description: |-
        * `INITIATED` - INITIATED
        * `STREAMING` - STREAMING
        * `FULFILLED` - FULFILLED
        * `REJECTED` - REJECTED
    WorkflowOutput:
      oneOf:
      - $ref: '#/components/schemas/WorkflowOutputString'
      - $ref: '#/components/schemas/WorkflowOutputNumber'
      - $ref: '#/components/schemas/WorkflowOutputJSON'
      - $ref: '#/components/schemas/WorkflowOutputChatHistory'
      - $ref: '#/components/schemas/WorkflowOutputSearchResults'
      - $ref: '#/components/schemas/WorkflowOutputError'
      - $ref: '#/components/schemas/WorkflowOutputArray'
      - $ref: '#/components/schemas/WorkflowOutputFunctionCall'
      - $ref: '#/components/schemas/WorkflowOutputImage'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/WorkflowOutputString'
          NUMBER: '#/components/schemas/WorkflowOutputNumber'
          JSON: '#/components/schemas/WorkflowOutputJSON'
          CHAT_HISTORY: '#/components/schemas/WorkflowOutputChatHistory'
          SEARCH_RESULTS: '#/components/schemas/WorkflowOutputSearchResults'
          ERROR: '#/components/schemas/WorkflowOutputError'
          ARRAY: '#/components/schemas/WorkflowOutputArray'
          FUNCTION_CALL: '#/components/schemas/WorkflowOutputFunctionCall'
          IMAGE: '#/components/schemas/WorkflowOutputImage'
    WorkflowOutputArray:
      type: object
      description: An array of outputs from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/ArrayEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/VariableValue'
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputChatHistory:
      type: object
      description: A chat history output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/ChatHistoryEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputError:
      type: object
      description: An error output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/ErrorEnum'
        value:
          $ref: '#/components/schemas/VellumError'
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputFunctionCall:
      type: object
      description: A function call output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/FunctionCallEnum'
        value:
          $ref: '#/components/schemas/FunctionCall'
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputImage:
      type: object
      description: An image output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/ImageEnum'
        value:
          $ref: '#/components/schemas/VellumImage'
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputJSON:
      type: object
      description: A JSON output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/JsonEnum'
        value:
          type: object
          additionalProperties: {}
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputNumber:
      type: object
      description: A number output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/NumberEnum'
        value:
          type: number
          format: double
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputSearchResults:
      type: object
      description: A search results output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/SearchResultsEnum'
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
      required:
      - id
      - name
      - type
      - value
    WorkflowOutputString:
      type: object
      description: A string output from a Workflow execution.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: The output's name, as defined in the workflow
        type:
          $ref: '#/components/schemas/StringEnum'
        value:
          type: string
      required:
      - id
      - name
      - type
      - value
    WorkflowRequestChatHistoryInputRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the Workflow.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageRequest'
      required:
      - name
      - type
      - value
    WorkflowRequestInputRequest:
      oneOf:
      - $ref: '#/components/schemas/WorkflowRequestStringInputRequest'
      - $ref: '#/components/schemas/WorkflowRequestJSONInputRequest'
      - $ref: '#/components/schemas/WorkflowRequestChatHistoryInputRequest'
      - $ref: '#/components/schemas/WorkflowRequestNumberInputRequest'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/WorkflowRequestStringInputRequest'
          JSON: '#/components/schemas/WorkflowRequestJSONInputRequest'
          CHAT_HISTORY: '#/components/schemas/WorkflowRequestChatHistoryInputRequest'
          NUMBER: '#/components/schemas/WorkflowRequestNumberInputRequest'
    WorkflowRequestJSONInputRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the Workflow.
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
      required:
      - name
      - type
      - value
    WorkflowRequestNumberInputRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the Workflow.
        type:
          type: string
        value:
          type: number
          format: double
      required:
      - name
      - type
      - value
    WorkflowRequestStringInputRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: The variable's name, as defined in the Workflow.
        type:
          type: string
        value:
          type: string
      required:
      - name
      - type
      - value
    WorkflowResultEvent:
      type: object
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        ts:
          type: string
          format: date-time
        output:
          allOf:
          - $ref: '#/components/schemas/WorkflowResultEventOutputData'
          nullable: true
        error:
          allOf:
          - $ref: '#/components/schemas/WorkflowEventError'
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowOutput'
          nullable: true
      required:
      - id
      - output
      - state
      - ts
    WorkflowResultEventOutputData:
      oneOf:
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataString'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataNumber'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataJSON'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataChatHistory'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataSearchResults'
      - $ref: '#/components/schemas/WorkflowResultEventOutputDataError'
      discriminator:
        propertyName: type
        mapping:
          STRING: '#/components/schemas/WorkflowResultEventOutputDataString'
          NUMBER: '#/components/schemas/WorkflowResultEventOutputDataNumber'
          JSON: '#/components/schemas/WorkflowResultEventOutputDataJSON'
          CHAT_HISTORY: '#/components/schemas/WorkflowResultEventOutputDataChatHistory'
          SEARCH_RESULTS: '#/components/schemas/WorkflowResultEventOutputDataSearchResults'
          ERROR: '#/components/schemas/WorkflowResultEventOutputDataError'
    WorkflowResultEventOutputDataChatHistory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataError:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          allOf:
          - $ref: '#/components/schemas/VellumError'
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataJSON:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataNumber:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          type: number
          format: double
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataSearchResults:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          readOnly: true
          description: The newly output string value. Only relevant for string outputs
            with a state of STREAMING.
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          nullable: true
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowResultEventOutputDataString:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        state:
          $ref: '#/components/schemas/WorkflowNodeResultEventState'
        node_id:
          type: string
        delta:
          type: string
          nullable: true
          description: The newly output string value, meant to be concatenated with
            all previous. Will be non-null for events of state STREAMING.
        type:
          type: string
        value:
          type: string
          nullable: true
          description: The entire string value. Will be non-null for events of state
            FULFILLED.
      required:
      - delta
      - name
      - node_id
      - state
      - type
      - value
    WorkflowStreamEvent:
      oneOf:
      - $ref: '#/components/schemas/WorkflowExecutionWorkflowResultEvent'
      - $ref: '#/components/schemas/WorkflowExecutionNodeResultEvent'
      discriminator:
        propertyName: type
        mapping:
          WORKFLOW: '#/components/schemas/WorkflowExecutionWorkflowResultEvent'
          NODE: '#/components/schemas/WorkflowExecutionNodeResultEvent'
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X_API_KEY
      description: API key based authentication
servers:
- url: https://api.vellum.ai
  description: Default Server
  x-name: Default

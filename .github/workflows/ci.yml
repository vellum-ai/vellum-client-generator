name: ci

on: [push]

jobs:
  fern-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Fern
        run: npm install -g fern-api

      - name: Check Fern API is valid
        run: fern check

  fern-generate-branch:
    needs: fern-check
    if: github.event_name == 'push' && !contains(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Release Branch SDKs
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          fern generate --group branch-node --log-level debug
          fern generate --group branch-python --log-level debug
          fern generate --group branch-go --log-level debug
      
      - name: Generate Branch Docs
        env:
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: fern generate --docs --instance vellum-branch.docs.buildwithfern.com --log-level debug

  fern-generate-staging:
    needs: fern-check
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Release Staging SDKs
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: fern generate --group staging --log-level debug
      
      - name: Generate Staging Docs
        env:
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: fern generate --docs --instance vellum-staging.docs.buildwithfern.com --log-level debug

  fern-generate-production:
    needs: fern-check
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Release SDKs
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: fern generate --group production --version ${{ github.ref_name }} --log-level debug
      
      - name: Generate Production Docs
        env:
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: fern generate --docs --instance vellum.docs.buildwithfern.com --log-level debug
